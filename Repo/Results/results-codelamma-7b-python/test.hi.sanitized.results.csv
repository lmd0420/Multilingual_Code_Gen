,source_file,task_id,prompt,code,test_imports,test_list,prompt_modified,results
0,Benchmark Questions Verification V2.ipynb,11,स्ट्रिंग से किसी दिए गए कैरेक्टर की पहली और आखिरी घटना को हटाने के लिए एक पायथन फ़ंक्शन लिखें।,"def remove_Occ(s,ch): 
    for i in range(len(s)): 
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    for i in range(len(s) - 1,-1,-1):  
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    return s ",[],"['assert remove_Occ(""hello"",""l"") == ""heo""', 'assert remove_Occ(""abcda"",""a"") == ""bcd""', 'assert remove_Occ(""PHP"",""P"") == ""H""']","<s><<SYS>>
Provide answers in Python
<</SYS>>

स्ट्रिंग से किसी दिए गए कैरेक्टर की पहली और आखिरी घटना को हटाने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

स्ट्रिंग से किसी दिए गए कैरेक्टर की पहली और आखिरी घटना को हटाने के लिए एक पायथन फ़ंक्शन लिखें।

<b>Example</b>
<pre>
>>> remove_first_"
1,Benchmark Questions Verification V2.ipynb,12,किसी दिए गए मैट्रिक्स को उसकी पंक्तियों के योग के अनुसार आरोही क्रम में क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।,"def sort_matrix(M):
    result = sorted(M, key=sum)
    return result",[],"['assert sort_matrix([[1, 2, 3], [2, 4, 5], [1, 1, 1]])==[[1, 1, 1], [1, 2, 3], [2, 4, 5]]', 'assert sort_matrix([[1, 2, 3], [-2, 4, -5], [1, -1, 1]])==[[-2, 4, -5], [1, -1, 1], [1, 2, 3]]', 'assert sort_matrix([[5,8,9],[6,4,3],[2,1,4]])==[[2, 1, 4], [6, 4, 3], [5, 8, 9]]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए मैट्रिक्स को उसकी पंक्तियों के योग के अनुसार आरोही क्रम में क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए मैट्रिक्स को उसकी पंक्तियों के योग के अनुसार आरोही क्रम में क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।

<</> क्रम क्रमबद्ध "
2,Benchmark Questions Verification V2.ipynb,14,त्रिकोणीय प्रिज्म का आयतन ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def find_Volume(l,b,h) : 
    return ((l * b * h) / 2) ",[],"['assert find_Volume(10,8,6) == 240', 'assert find_Volume(3,2,2) == 6', 'assert find_Volume(1,2,1) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

त्रिकोणीय प्रिज्म का आयतन ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

त्रिकोणीय प्रिज्म का आयतन ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

स्वर्ग के पास एक"
3,Benchmark Questions Verification V2.ipynb,16,एक ऐसा फ़ंक्शन लिखें जो सत्य लौटाता है यदि इनपुट स्ट्रिंग में अंडरस्कोर के साथ जुड़े हुए लोअरकेस अक्षरों का अनुक्रम होता है और अन्यथा गलत होता है।,"import re
def text_lowercase_underscore(text):
        patterns = '^[a-z]+_[a-z]+$'
        if re.search(patterns,  text):
                return True
        else:
                return False",[],"['assert text_lowercase_underscore(""aab_cbbbc"")==(True)', 'assert text_lowercase_underscore(""aab_Abbbc"")==(False)', 'assert text_lowercase_underscore(""Aaab_abbbc"")==(False)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक ऐसा फ़ंक्शन लिखें जो सत्य लौटाता है यदि इनपुट स्ट्रिंग में अंडरस्कोर के साथ जुड़े हुए लोअरकेस अक्षरों का अनुक्रम होता है और अन्यथा गलत होता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक ऐसा फ़ंक्शन लिखें जो सत्य लौटाता है यदि इनपुट स्ट्रिंग में अंडरस्कोर के साथ जुड़े हुए लोअरकेस अक्षरों का अनुक्रम होता है और अन्यथा गलत होता है।

>>> def is_pangram(input_string):
...     alphabet ="
4,Benchmark Questions Verification V2.ipynb,17,एक फ़ंक्शन लिखें जो इनपुट के रूप में एक वर्ग की भुजा की लंबाई दी गई परिधि लौटाता है।,"def square_perimeter(a):
  perimeter=4*a
  return perimeter",[],"['assert square_perimeter(10)==40', 'assert square_perimeter(5)==20', 'assert square_perimeter(4)==16']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो इनपुट के रूप में एक वर्ग की भुजा की लंबाई दी गई परिधि लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो इनपुट के रूप में एक वर्ग की भुजा की लंबाई दी गई परिधि लौटाता है।



















"
5,Benchmark Questions Verification V2.ipynb,18,पहली स्ट्रिंग से उन वर्णों को हटाने के लिए एक फ़ंक्शन लिखें जो दूसरी स्ट्रिंग में मौजूद हैं।,"NO_OF_CHARS = 256
def str_to_list(string): 
	temp = [] 
	for x in string: 
		temp.append(x) 
	return temp 
def lst_to_string(List): 
	return ''.join(List) 
def get_char_count_array(string): 
	count = [0] * NO_OF_CHARS 
	for i in string: 
		count[ord(i)] += 1
	return count 
def remove_dirty_chars(string, second_string): 
	count = get_char_count_array(second_string) 
	ip_ind = 0
	res_ind = 0
	temp = '' 
	str_list = str_to_list(string) 
	while ip_ind != len(str_list): 
		temp = str_list[ip_ind] 
		if count[ord(temp)] == 0: 
			str_list[res_ind] = str_list[ip_ind] 
			res_ind += 1
		ip_ind+=1
	return lst_to_string(str_list[0:res_ind]) ",[],"['assert remove_dirty_chars(""probasscurve"", ""pros"") == \'bacuve\'', 'assert remove_dirty_chars(""digitalindia"", ""talent"") == \'digiidi\'', 'assert remove_dirty_chars(""exoticmiles"", ""toxic"") == \'emles\'']","<s><<SYS>>
Provide answers in Python
<</SYS>>

पहली स्ट्रिंग से उन वर्णों को हटाने के लिए एक फ़ंक्शन लिखें जो दूसरी स्ट्रिंग में मौजूद हैं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

पहली स्ट्रिंग से उन वर्णों को हटाने के लिए एक फ़ंक्शन लिखें जो दूसरी स्ट्रिंग में मौजूद हैं।

<b>Example</b>:

<b>Input</b>:

"
6,Benchmark Questions Verification V2.ipynb,19,यह पता लगाने के लिए एक फ़ंक्शन लिखें कि पूर्णांकों की दी गई सरणी में कोई डुप्लिकेट तत्व है या नहीं।,"def test_duplicate(arraynums):
    nums_set = set(arraynums)    
    return len(arraynums) != len(nums_set)     ",[],"['assert test_duplicate(([1,2,3,4,5]))==False', 'assert test_duplicate(([1,2,3,4, 4]))==True', 'assert test_duplicate([1,1,2,2,3,3,4,4,5])==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह पता लगाने के लिए एक फ़ंक्शन लिखें कि पूर्णांकों की दी गई सरणी में कोई डुप्लिकेट तत्व है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह पता लगाने के लिए एक फ़ंक्शन लिखें कि पूर्णांकों की दी गई सरणी में कोई डुप्लिकेट तत्व है या नहीं।

<</CODE>>

<</CODE>>

<</CODE>>

"
7,Benchmark Questions Verification V2.ipynb,20,यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई संख्या वुडबॉल है या नहीं।,"def is_woodall(x): 
	if (x % 2 == 0): 
		return False
	if (x == 1): 
		return True
	x = x + 1 
	p = 0
	while (x % 2 == 0): 
		x = x/2
		p = p + 1
		if (p == x): 
			return True
	return False",[],"['assert is_woodall(383) == True', 'assert is_woodall(254) == False', 'assert is_woodall(200) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई संख्या वुडबॉल है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई संख्या वुडबॉल है या नहीं।

<</CODE>>

<</CODE>>

<</CODE>>

"
8,Mike's Copy of Benchmark Questions Verification V2.ipynb,56,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि क्या कोई दी गई संख्या इसके विपरीत के दोगुने से एक कम है।,"def rev(num):    
    rev_num = 0
    while (num > 0):  
        rev_num = (rev_num * 10 + num % 10) 
        num = num // 10  
    return rev_num  
def check(n):    
    return (2 * rev(n) == n + 1)  ",[],"['assert check(70) == False', 'assert check(23) == False', 'assert check(73) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि क्या कोई दी गई संख्या इसके विपरीत के दोगुने से एक कम है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि क्या कोई दी गई संख्या इसके विपरीत के दोगुने से एक कम है।



















"
9,Mike's Copy of Benchmark Questions Verification V2.ipynb,57,अंकों की दी गई सूची के साथ बनाई जा सकने वाली सबसे बड़ी संख्या खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def find_Max_Num(arr) : 
    n = len(arr)
    arr.sort(reverse = True) 
    num = arr[0] 
    for i in range(1,n) : 
        num = num * 10 + arr[i] 
    return num ",[],"['assert find_Max_Num([1,2,3]) == 321', 'assert find_Max_Num([4,5,6,1]) == 6541', 'assert find_Max_Num([1,2,3,9]) == 9321']","<s><<SYS>>
Provide answers in Python
<</SYS>>

अंकों की दी गई सूची के साथ बनाई जा सकने वाली सबसे बड़ी संख्या खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

अंकों की दी गई सूची के साथ बनाई जा सकने वाली सबसे बड़ी संख्या खोजने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की तरह से अंक"
10,Mike's Copy of Benchmark Questions Verification V2.ipynb,58,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दिए गए दो पूर्णांकों में विपरीत चिह्न हैं या नहीं।,"def opposite_Signs(x,y): 
    return ((x ^ y) < 0); ",[],"['assert opposite_Signs(1,-2) == True', 'assert opposite_Signs(3,2) == False', 'assert opposite_Signs(-10,-10) == False', 'assert opposite_Signs(-2,2) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दिए गए दो पूर्णांकों में विपरीत चिह्न हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दिए गए दो पूर्णांकों में विपरीत चिह्न हैं या नहीं।

>>> def is_divisible(a, b):
...     if a"
11,Mike's Copy of Benchmark Questions Verification V2.ipynb,59,nवीं अष्टकोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def is_octagonal(n): 
	return 3 * n * n - 2 * n ",[],"['assert is_octagonal(5) == 65', 'assert is_octagonal(10) == 280', 'assert is_octagonal(15) == 645']","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं अष्टकोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं अष्टकोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def n_digit_number(n):
    #"
12,Mike's Copy of Benchmark Questions Verification V2.ipynb,61,उनकी लंबाई के बराबर अंकों के योग के साथ सबस्ट्रिंग की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।,"from collections import defaultdict
def count_Substrings(s):
    n = len(s)
    count,sum = 0,0
    mp = defaultdict(lambda : 0)
    mp[0] += 1
    for i in range(n):
        sum += ord(s[i]) - ord('0')
        count += mp[sum - (i + 1)]
        mp[sum - (i + 1)] += 1
    return count",[],"[""assert count_Substrings('112112') == 6"", ""assert count_Substrings('111') == 6"", ""assert count_Substrings('1101112') == 12""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

उनकी लंबाई के बराबर अंकों के योग के साथ सबस्ट्रिंग की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

उनकी लंबाई के बराबर अंकों के योग के साथ सबस्ट्रिंग की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।

>>> def count_substring(string, sub_string):
...     count ="
13,Mike's Copy of Benchmark Questions Verification V2.ipynb,62,किसी सूची में सबसे छोटी संख्या खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def smallest_num(xs):
  return min(xs)
",[],"['assert smallest_num([10, 20, 1, 45, 99]) == 1', 'assert smallest_num([1, 2, 3]) == 1', 'assert smallest_num([45, 46, 50, 60]) == 45']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में सबसे छोटी संख्या खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में सबसे छोटी संख्या खोजने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की तरह का ए"
14,Mike's Copy of Benchmark Questions Verification V2.ipynb,63,दी गई टपल सूची में उपलब्ध जोड़ियों के बीच अधिकतम अंतर ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def max_difference(test_list):
  temp = [abs(b - a) for a, b in test_list]
  res = max(temp)
  return (res) ",[],"['assert max_difference([(3, 5), (1, 7), (10, 3), (1, 2)]) == 7', 'assert max_difference([(4, 6), (2, 17), (9, 13), (11, 12)]) == 15', 'assert max_difference([(12, 35), (21, 27), (13, 23), (41, 22)]) == 23']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई टपल सूची में उपलब्ध जोड़ियों के बीच अधिकतम अंतर ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई टपल सूची में उपलब्ध जोड़ियों के बीच अधिकतम अंतर ज्ञात करने के लिए एक फ़ंक्शन लिखें।

सूची में उपलब्ध "
15,Mike's Copy of Benchmark Questions Verification V2.ipynb,64,प्रत्येक टुपल के दूसरे मान का उपयोग करके टुपल्स की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।,"def subject_marks(subjectmarks):
#subject_marks = [('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])
 subjectmarks.sort(key = lambda x: x[1])
 return subjectmarks",[],"[""assert subject_marks([('English', 88), ('Science', 90), ('Maths', 97), ('Social sciences', 82)])==[('Social sciences', 82), ('English', 88), ('Science', 90), ('Maths', 97)]"", ""assert subject_marks([('Telugu',49),('Hindhi',54),('Social',33)])==([('Social',33),('Telugu',49),('Hindhi',54)])"", ""assert subject_marks([('Physics',96),('Chemistry',97),('Biology',45)])==([('Biology',45),('Physics',96),('Chemistry',97)])""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रत्येक टुपल के दूसरे मान का उपयोग करके टुपल्स की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रत्येक टुपल के दूसरे मान का उपयोग करके टुपल्स की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>
<b>Input</b"
16,Mike's Copy of Benchmark Questions Verification V2.ipynb,65,किसी सूची को समतल करने और उसके सभी तत्वों का योग करने के लिए एक फ़ंक्शन लिखें।,"def recursive_list_sum(data_list):
	total = 0
	for element in data_list:
		if type(element) == type([]):
			total = total + recursive_list_sum(element)
		else:
			total = total + element
	return total",[],"['assert recursive_list_sum(([1, 2, [3,4],[5,6]]))==21', 'assert recursive_list_sum(([7, 10, [15,14],[19,41]]))==106', 'assert recursive_list_sum(([10, 20, [30,40],[50,60]]))==210']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची को समतल करने और उसके सभी तत्वों का योग करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची को समतल करने और उसके सभी तत्वों का योग करने के लिए एक फ़ंक्शन लिखें।

सूची को समतल करने के लिए एक फ़ंक्शन लिखें।

"
17,Mike's Copy of Benchmark Questions Verification V2.ipynb,66,किसी सूची में धनात्मक संख्याओं की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।,"def pos_count(list):
  pos_count= 0
  for num in list: 
    if num >= 0: 
      pos_count += 1
  return pos_count ",[],"['assert pos_count([1,-2,3,-4]) == 2', 'assert pos_count([3,4,5,-1]) == 3', 'assert pos_count([1,2,3,4]) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में धनात्मक संख्याओं की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में धनात्मक संख्याओं की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की तरह से संख्याओं की संख्या गिने के लिए "
18,Mike's Copy of Benchmark Questions Verification V2.ipynb,67,बेल नंबरों के एक सेट को विभाजित करने के तरीकों की संख्या जानने के लिए एक फ़ंक्शन लिखें।,"def bell_number(n):   
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1): 
        bell[i][0] = bell[i-1][i-1]  
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   
    return bell[n][0] ",[],"['assert bell_number(2)==2', 'assert bell_number(10)==115975', 'assert bell_number(56)==6775685320645824322581483068371419745979053216268760300']","<s><<SYS>>
Provide answers in Python
<</SYS>>

बेल नंबरों के एक सेट को विभाजित करने के तरीकों की संख्या जानने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

बेल नंबरों के एक सेट को विभाजित करने के तरीकों की संख्या जानने के लिए एक फ़ंक्शन लिखें।



















































"
19,Mike's Copy of Benchmark Questions Verification V2.ipynb,68,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दिया गया ऐरे मोनोटोनिक है या नहीं।,"def is_Monotonic(A): 
    return (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or
            all(A[i] >= A[i + 1] for i in range(len(A) - 1))) ",[],"['assert is_Monotonic([6, 5, 4, 4]) == True', 'assert is_Monotonic([1, 2, 2, 3]) == True', 'assert is_Monotonic([1, 3, 2]) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दिया गया ऐरे मोनोटोनिक है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दिया गया ऐरे मोनोटोनिक है या नहीं।


>>> def is_monotonic(l):
...     return all(l[i] <= l[i+1] for i in range(len(l)-1)) or all(l[i] >= l["
20,Mike's Copy of Benchmark Questions Verification V2.ipynb,69,यह जांचने के लिए एक फ़ंक्शन लिखें कि किसी सूची में दी गई उपसूची शामिल है या नहीं।,"def is_sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in range(len(l)):
			if l[i] == s[0]:
				n = 1
				while (n < len(s)) and (l[i+n] == s[n]):
					n += 1				
				if n == len(s):
					sub_set = True
	return sub_set",[],"['assert is_sublist([2,4,3,5,7],[3,7])==False', 'assert is_sublist([2,4,3,5,7],[4,3])==True', 'assert is_sublist([2,4,3,5,7],[1,6])==False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि किसी सूची में दी गई उपसूची शामिल है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि किसी सूची में दी गई उपसूची शामिल है या नहीं।



















































"
21,Mike's Copy of Benchmark Questions Verification V2.ipynb,70,यह पता लगाने के लिए एक फ़ंक्शन लिखें कि दिए गए सभी टुपल्स की लंबाई समान है या नहीं।,"def find_equal_tuple(Input):
  k = 0 if not Input else len(Input[0])
  flag = 1
  for tuple in Input:
    if len(tuple) != k:
      flag = 0
      break
  return flag
def get_equal(Input):
  return find_equal_tuple(Input) == 1",[],"['assert get_equal([(11, 22, 33), (44, 55, 66)]) == True', 'assert get_equal([(1, 2, 3), (4, 5, 6, 7)]) == False', 'assert get_equal([(1, 2), (3, 4)]) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह पता लगाने के लिए एक फ़ंक्शन लिखें कि दिए गए सभी टुपल्स की लंबाई समान है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह पता लगाने के लिए एक फ़ंक्शन लिखें कि दिए गए सभी टुपल्स की लंबाई समान है या नहीं।

<b>Example</b>
<pre>
<b>Input:</b>
2
1 2
3 4
<b>Output:</b>
YES
</pre>
<pre>
"
22,Mike's Copy of Benchmark Questions Verification V2.ipynb,71,तत्वों की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।,"def comb_sort(nums):
    shrink_fact = 1.3
    gaps = len(nums)
    swapped = True
    i = 0
    while gaps > 1 or swapped:
        gaps = int(float(gaps) / shrink_fact)
        swapped = False
        i = 0
        while gaps + i < len(nums):
            if nums[i] > nums[i+gaps]:
                nums[i], nums[i+gaps] = nums[i+gaps], nums[i]
                swapped = True
            i += 1
    return nums",[],"['assert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]', 'assert comb_sort([41, 32, 15, 19, 22]) == [15, 19, 22, 32, 41]', 'assert comb_sort([99, 15, 13, 47]) == [13, 15, 47, 99]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

तत्वों की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

तत्वों की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।



















































"
23,Mike's Copy of Benchmark Questions Verification V2.ipynb,72,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दी गई संख्या को दो वर्गों के अंतर के रूप में दर्शाया जा सकता है या नहीं।,"def dif_Square(n): 
    if (n % 4 != 2): 
        return True
    return False",[],"['assert dif_Square(5) == True', 'assert dif_Square(10) == False', 'assert dif_Square(15) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दी गई संख्या को दो वर्गों के अंतर के रूप में दर्शाया जा सकता है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दी गई संख्या को दो वर्गों के अंतर के रूप में दर्शाया जा सकता है या नहीं।



















































"
24,Mike's Copy of Benchmark Questions Verification V2.ipynb,74,यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या यह पैटर्न सरणी में दिए गए अनुक्रम का पालन करता है।,"def is_samepatterns(colors, patterns):    
    if len(colors) != len(patterns):
        return False    
    sdict = {}
    pset = set()
    sset = set()    
    for i in range(len(patterns)):
        pset.add(patterns[i])
        sset.add(colors[i])
        if patterns[i] not in sdict.keys():
            sdict[patterns[i]] = []

        keys = sdict[patterns[i]]
        keys.append(colors[i])
        sdict[patterns[i]] = keys

    if len(pset) != len(sset):
        return False   

    for values in sdict.values():

        for i in range(len(values) - 1):
            if values[i] != values[i+1]:
                return False

    return True",[],"['assert is_samepatterns([""red"",""green"",""green""], [""a"", ""b"", ""b""])==True', 'assert is_samepatterns([""red"",""green"",""greenn""], [""a"",""b"",""b""])==False', 'assert is_samepatterns([""red"",""green"",""greenn""], [""a"",""b""])==False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या यह पैटर्न सरणी में दिए गए अनुक्रम का पालन करता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या यह पैटर्न सरणी में दिए गए अनुक्रम का पालन करता है।

>>> def is_palindrome(n):
...     return str(n) == str(n)[::-1]
...
>>> is_palindrome(12321)
True
>>>"
25,Mike's Copy of Benchmark Questions Verification V2.ipynb,75,टुपल्स को खोजने के लिए एक फ़ंक्शन लिखें जिसमें टुपल्स की दी गई सूची से सभी तत्व k से विभाज्य हों।,"def find_tuples(test_list, K):
  res = [sub for sub in test_list if all(ele % K == 0 for ele in sub)]
  return res",[],"['assert find_tuples([(6, 24, 12), (7, 9, 6), (12, 18, 21)], 6) == [(6, 24, 12)]', 'assert find_tuples([(5, 25, 30), (4, 2, 3), (7, 8, 9)], 5) == [(5, 25, 30)]', 'assert find_tuples([(7, 9, 16), (8, 16, 4), (19, 17, 18)], 4) == [(8, 16, 4)]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स को खोजने के लिए एक फ़ंक्शन लिखें जिसमें टुपल्स की दी गई सूची से सभी तत्व k से विभाज्य हों।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स को खोजने के लिए एक फ़ंक्शन लिखें जिसमें टुपल्स की दी गई सूची से सभी तत्व k से विभाज्य हों।



















































"
26,Mike's Copy of Benchmark Questions Verification V2.ipynb,77,कोई संख्या 11 से विभाज्य है या नहीं यह जानने के लिए एक पायथन फ़ंक्शन लिखें।,"def is_Diff(n): 
    return (n % 11 == 0) ",[],"['assert is_Diff (12345) == False', 'assert is_Diff(1212112) == True', 'assert is_Diff(1212) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

कोई संख्या 11 से विभाज्य है या नहीं यह जानने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

कोई संख्या 11 से विभाज्य है या नहीं यह जानने के लिए एक पायथन फ़ंक्शन लिखें।

<</CODE>>

def is_odd(num):
    if num % 2 == 0:
        return False
    else:
        return True

<</CODE>>

<</SYS>>
"
27,Mike's Copy of Benchmark Questions Verification V2.ipynb,79,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि शब्द की लंबाई विषम है या नहीं।,"def word_len(s): 
    s = s.split(' ')   
    for word in s:    
        if len(word)%2!=0: 
            return True  
        else:
          return False",[],"['assert word_len(""Hadoop"") == False', 'assert word_len(""great"") == True', 'assert word_len(""structure"") == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि शब्द की लंबाई विषम है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि शब्द की लंबाई विषम है या नहीं।



















































"
28,Mike's Copy of Benchmark Questions Verification V2.ipynb,80,nवीं चतुष्फलकीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def tetrahedral_number(n): 
	return (n * (n + 1) * (n + 2)) / 6",[],"['assert tetrahedral_number(5) == 35', 'assert tetrahedral_number(6) == 56', 'assert tetrahedral_number(7) == 84']","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं चतुष्फलकीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं चतुष्फलकीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।



















































"
29,Mike's Copy of Benchmark Questions Verification V2.ipynb,82,किसी गोले का आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"import math
def volume_sphere(r):
  volume=(4/3)*math.pi*r*r*r
  return volume",['import math'],"['assert math.isclose(volume_sphere(10), 4188.790204786391, rel_tol=0.001)', 'assert math.isclose(volume_sphere(25), 65449.84694978735, rel_tol=0.001)', 'assert math.isclose(volume_sphere(20), 33510.32163829113, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी गोले का आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी गोले का आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।



















































"
30,Mike's Copy of Benchmark Questions Verification V2.ipynb,83,दिए गए स्ट्रिंग मॉड्यूलो 26 के सभी वर्णों के ASCII मान को जोड़कर बनाए गए वर्ण को खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def get_Char(strr):  
    summ = 0
    for i in range(len(strr)): 
        summ += (ord(strr[i]) - ord('a') + 1)  
    if (summ % 26 == 0): 
        return ord('z') 
    else: 
        summ = summ % 26
        return chr(ord('a') + summ - 1)",[],"['assert get_Char(""abc"") == ""f""', 'assert get_Char(""gfg"") == ""t""', 'assert get_Char(""ab"") == ""c""']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए स्ट्रिंग मॉड्यूलो 26 के सभी वर्णों के ASCII मान को जोड़कर बनाए गए वर्ण को खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए स्ट्रिंग मॉड्यूलो 26 के सभी वर्णों के ASCII मान को जोड़कर बनाए गए वर्ण को खोजने के लिए एक पायथन फ़ंक्शन लिखें।

<</> के लिए उपयोग करके इस प्रश्न को हासिल करे"
31,Mike's Copy of Benchmark Questions Verification V2.ipynb,84,न्यूमैन कॉनवे अनुक्रम में nवाँ नंबर खोजने के लिए एक फ़ंक्शन लिखें।,"def sequence(n): 
	if n == 1 or n == 2: 
		return 1
	else: 
		return sequence(sequence(n-1)) + sequence(n-sequence(n-1))",[],"['assert sequence(10) == 6', 'assert sequence(2) == 1', 'assert sequence(3) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूमैन कॉनवे अनुक्रम में nवाँ नंबर खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूमैन कॉनवे अनुक्रम में nवाँ नंबर खोजने के लिए एक फ़ंक्शन लिखें।



















































"
32,Mike's Copy of Benchmark Questions Verification V2.ipynb,85,किसी गोले का पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"import math
def surfacearea_sphere(r):
  surfacearea=4*math.pi*r*r
  return surfacearea",['import math'],"['assert math.isclose(surfacearea_sphere(10), 1256.6370614359173, rel_tol=0.001)', 'assert math.isclose(surfacearea_sphere(15), 2827.4333882308138, rel_tol=0.001)', 'assert math.isclose(surfacearea_sphere(20), 5026.548245743669, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी गोले का पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी गोले का पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def area(radius):
    return 3.14 * radius * radius"
33,Mike's Copy of Benchmark Questions Verification V2.ipynb,86,nवें केन्द्रित षट्कोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def centered_hexagonal_number(n):
  return 3 * n * (n - 1) + 1",[],"['assert centered_hexagonal_number(10) == 271', 'assert centered_hexagonal_number(2) == 7', 'assert centered_hexagonal_number(9) == 217']","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवें केन्द्रित षट्कोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवें केन्द्रित षट्कोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def फंक्शन_नाम(a,"
34,Mike's Copy of Benchmark Questions Verification V2.ipynb,87,तीन शब्दकोशों को एक शब्दकोश में मिलाने के लिए एक फ़ंक्शन लिखें।,"import collections as ct
def merge_dictionaries_three(dict1,dict2, dict3):
    merged_dict = dict(ct.ChainMap({},dict1,dict2,dict3))
    return merged_dict",[],"['assert merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{ ""O"": ""Orange"", ""W"": ""White"", ""B"": ""Black"" })=={\'B\': \'Black\', \'R\': \'Red\', \'P\': \'Pink\', \'G\': \'Green\', \'W\': \'White\', \'O\': \'Orange\'}', 'assert merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" }, { ""G"": ""Green"", ""W"": ""White"" },{""L"":""lavender"",""B"":""Blue""})=={\'W\': \'White\', \'P\': \'Pink\', \'B\': \'Black\', \'R\': \'Red\', \'G\': \'Green\', \'L\': \'lavender\'}', 'assert merge_dictionaries_three({ ""R"": ""Red"", ""B"": ""Black"", ""P"": ""Pink"" },{""L"":""lavender"",""B"":""Blue""},{ ""G"": ""Green"", ""W"": ""White"" })=={\'B\': \'Black\', \'P\': \'Pink\', \'R\': \'Red\', \'G\': \'Green\', \'L\': \'lavender\', \'W\': \'White\'}']","<s><<SYS>>
Provide answers in Python
<</SYS>>

तीन शब्दकोशों को एक शब्दकोश में मिलाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

तीन शब्दकोशों को एक शब्दकोश में मिलाने के लिए एक फ़ंक्शन लिखें।

>>> def find_three_words(word1, word2, word3):
...     return word"
35,Mike's Copy of Benchmark Questions Verification V2.ipynb,88,"किसी सूची में सभी तत्वों की आवृत्ति प्राप्त करने के लिए एक फ़ंक्शन लिखें, जो एक शब्दकोश के रूप में लौटाया गया है।","import collections
def freq_count(list1):
  freq_count= collections.Counter(list1)
  return freq_count",[],"['assert freq_count([10,10,10,10,20,20,20,20,40,40,50,50,30])==({10: 4, 20: 4, 40: 2, 50: 2, 30: 1})', 'assert freq_count([1,2,3,4,3,2,4,1,3,1,4])==({1:3, 2:2,3:3,4:3})', 'assert freq_count([5,6,7,4,9,10,4,5,6,7,9,5])==({10:1,5:3,6:2,7:2,4:2,9:2})']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में सभी तत्वों की आवृत्ति प्राप्त करने के लिए एक फ़ंक्शन लिखें, जो एक शब्दकोश के रूप में लौटाया गया है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में सभी तत्वों की आवृत्ति प्राप्त करने के लिए एक फ़ंक्शन लिखें, जो एक शब्दकोश के रूप में लौटाया गया है।

<</>

<</>

<</>

<</>

<</>"
36,Mike's Copy of Benchmark Questions Verification V2.ipynb,89,n से निकटतम छोटी संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def closest_num(N):
  return (N - 1)",[],"['assert closest_num(11) == 10', 'assert closest_num(7) == 6', 'assert closest_num(12) == 11']","<s><<SYS>>
Provide answers in Python
<</SYS>>

n से निकटतम छोटी संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

n से निकटतम छोटी संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।

>>> def min_num(n):
...     min_num = n[0]
...    "
37,Mike's Copy of Benchmark Questions Verification V2.ipynb,90,सबसे लंबे शब्द की लंबाई ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def len_log(list1):
    max=len(list1[0])
    for i in list1:
        if len(i)>max:
            max=len(i)
    return max",[],"['assert len_log([""python"",""PHP"",""bigdata""]) == 7', 'assert len_log([""a"",""ab"",""abc""]) == 3', 'assert len_log([""small"",""big"",""tall""]) == 5']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सबसे लंबे शब्द की लंबाई ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सबसे लंबे शब्द की लंबाई ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

स्वर के साथ स्वर का उ"
38,Mike's Copy of Benchmark Questions Verification V2.ipynb,91,यह जांचने के लिए एक फ़ंक्शन लिखें कि स्ट्रिंग मानों की दी गई सूची में एक स्ट्रिंग सबस्ट्रिंग के रूप में मौजूद है या नहीं।,"def find_substring(str1, sub_str):
   if any(sub_str in s for s in str1):
       return True
   return False",[],"['assert find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ack"")==True', 'assert find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""abc"")==False', 'assert find_substring([""red"", ""black"", ""white"", ""green"", ""orange""],""ange"")==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि स्ट्रिंग मानों की दी गई सूची में एक स्ट्रिंग सबस्ट्रिंग के रूप में मौजूद है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि स्ट्रिंग मानों की दी गई सूची में एक स्ट्रिंग सबस्ट्रिंग के रूप में मौजूद है या नहीं।

>>> def is_substring(string, substring):
...     return substring in string
>>> is_"
39,Mike's Copy of Benchmark Questions Verification V2.ipynb,92,यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई संख्या लहरदार है या नहीं।,"def is_undulating(n): 
	n = str(n)
	if (len(n) <= 2): 
		return False
	for i in range(2, len(n)): 
		if (n[i - 2] != n[i]): 
			return False
	return True",[],"['assert is_undulating(1212121) == True', 'assert is_undulating(1991) == False', 'assert is_undulating(121) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई संख्या लहरदार है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई संख्या लहरदार है या नहीं।
























"
40,Mike's Copy of Benchmark Questions Verification V2.ipynb,93,&#39;ए&#39; की घात &#39;बी&#39; के मान की गणना करने के लिए एक फ़ंक्शन लिखें।,"def power(a,b):
	if b==0:
		return 1
	elif a==0:
		return 0
	elif b==1:
		return a
	else:
		return a*power(a,b-1)",[],"['assert power(3,4) == 81', 'assert power(2,3) == 8', 'assert power(5,5) == 3125']","<s><<SYS>>
Provide answers in Python
<</SYS>>

&#39;ए&#39; की घात &#39;बी&#39; के मान की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

&#39;ए&#39; की घात &#39;बी&#39; के मान की गणना करने के लिए एक फ़ंक्शन लिखें।
























"
41,Mike's Copy of Benchmark Questions Verification V2.ipynb,94,"टुपल्स की सूची को देखते हुए, एक फ़ंक्शन लिखें जो टुपल का पहला मान सबसे छोटे दूसरे मान के साथ लौटाता है।","from operator import itemgetter 
def index_minimum(test_list):
  res = min(test_list, key = itemgetter(1))[0]
  return (res) ",[],"[""assert index_minimum([('Rash', 143), ('Manjeet', 200), ('Varsha', 100)]) == 'Varsha'"", ""assert index_minimum([('Yash', 185), ('Dawood', 125), ('Sanya', 175)]) == 'Dawood'"", ""assert index_minimum([('Sai', 345), ('Salman', 145), ('Ayesha', 96)]) == 'Ayesha'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स की सूची को देखते हुए, एक फ़ंक्शन लिखें जो टुपल का पहला मान सबसे छोटे दूसरे मान के साथ लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स की सूची को देखते हुए, एक फ़ंक्शन लिखें जो टुपल का पहला मान सबसे छोटे दूसरे मान के साथ लौटाता है।

>>> def min_tuple(tup):
...     return tup[0] < tup["
42,Mike's Copy of Benchmark Questions Verification V2.ipynb,95,सूचियों की सूची में सबसे छोटी सूची की लंबाई ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def Find_Min_Length(lst):  
    minLength = min(len(x) for x in lst )
    return minLength ",[],"['assert Find_Min_Length([[1],[1,2]]) == 1', 'assert Find_Min_Length([[1,2],[1,2,3],[1,2,3,4]]) == 2', 'assert Find_Min_Length([[3,3,3],[4,4,4,4]]) == 3']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची में सबसे छोटी सूची की लंबाई ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची में सबसे छोटी सूची की लंबाई ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

सूचियों की सूची में सबस"
43,Mike's Copy of Benchmark Questions Verification V2.ipynb,96,किसी दिए गए पूर्णांक के विभाजकों की संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def divisor(n):
  for i in range(n):
    x = len([i for i in range(1,n+1) if not n % i])
  return x",[],"['assert divisor(15) == 4', 'assert divisor(12) == 6', 'assert divisor(9) == 3']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए पूर्णांक के विभाजकों की संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए पूर्णांक के विभाजकों की संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

<</> के लिए इस प्रश्"
44,Mike's Copy of Benchmark Questions Verification V2.ipynb,97,शब्दकोश में लौटाई गई सूचियों की एक चपटी सूची में प्रत्येक तत्व की आवृत्ति खोजने के लिए एक फ़ंक्शन लिखें।,"def frequency_lists(list1):
    list1 = [item for sublist in list1 for item in sublist]
    dic_data = {}
    for num in list1:
        if num in dic_data.keys():
            dic_data[num] += 1
        else:
            key = num
            value = 1
            dic_data[key] = value
    return dic_data
",[],"['assert frequency_lists([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]])=={1: 1, 2: 3, 3: 1, 4: 1, 5: 2, 6: 1, 7: 1, 8: 1, 9: 1}', 'assert frequency_lists([[1,2,3,4],[5,6,7,8],[9,10,11,12]])=={1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1,10:1,11:1,12:1}', 'assert frequency_lists([[20,30,40,17],[18,16,14,13],[10,20,30,40]])=={20:2,30:2,40:2,17: 1,18:1, 16: 1,14: 1,13: 1, 10: 1}']","<s><<SYS>>
Provide answers in Python
<</SYS>>

शब्दकोश में लौटाई गई सूचियों की एक चपटी सूची में प्रत्येक तत्व की आवृत्ति खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

शब्दकोश में लौटाई गई सूचियों की एक चपटी सूची में प्रत्येक तत्व की आवृत्ति खोजने के लिए एक फ़ंक्शन लिखें।

<</> क्वांडरेड की एक स"
45,Mike's Copy of Benchmark Questions Verification V2.ipynb,98,किसी सूची की सभी संख्याओं को गुणा करने और सूची की लंबाई से विभाजित करने के लिए एक फ़ंक्शन लिखें।,"def multiply_num(numbers):  
    total = 1
    for x in numbers:
        total *= x  
    return total/len(numbers) ",['import math'],"['assert math.isclose(multiply_num((8, 2, 3, -1, 7)), -67.2, rel_tol=0.001)', 'assert math.isclose(multiply_num((-10,-20,-30)), -2000.0, rel_tol=0.001)', 'assert math.isclose(multiply_num((19,15,18)), 1710.0, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची की सभी संख्याओं को गुणा करने और सूची की लंबाई से विभाजित करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची की सभी संख्याओं को गुणा करने और सूची की लंबाई से विभाजित करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def add_all(l):
    sum = 0
    for i"
46,Mike's Copy of Benchmark Questions Verification V2.ipynb,99,"दी गई दशमलव संख्या को उसके बाइनरी समकक्ष में बदलने के लिए एक फ़ंक्शन लिखें, जिसे बिना किसी अग्रणी शून्य वाली स्ट्रिंग के रूप में दर्शाया जाए।","def decimal_to_binary(n): 
    return bin(n).replace(""0b"","""") ",[],"[""assert decimal_to_binary(8) == '1000'"", ""assert decimal_to_binary(18) == '10010'"", ""assert decimal_to_binary(7) == '111'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई दशमलव संख्या को उसके बाइनरी समकक्ष में बदलने के लिए एक फ़ंक्शन लिखें, जिसे बिना किसी अग्रणी शून्य वाली स्ट्रिंग के रूप में दर्शाया जाए।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई दशमलव संख्या को उसके बाइनरी समकक्ष में बदलने के लिए एक फ़ंक्शन लिखें, जिसे बिना किसी अग्रणी शून्य वाली स्ट्रिंग के रूप में दर्शाया जाए।
























"
47,Mike's Copy of Benchmark Questions Verification V2.ipynb,100,"किसी निर्दिष्ट पूर्णांक के अगले सबसे छोटे पैलिंड्रोम को खोजने के लिए एक फ़ंक्शन लिखें, जो पूर्णांक के रूप में लौटाया गया हो।","import sys
def next_smallest_palindrome(num):
    numstr = str(num)
    for i in range(num+1,sys.maxsize):
        if str(i) == str(i)[::-1]:
            return i",[],"['assert next_smallest_palindrome(99)==101', 'assert next_smallest_palindrome(1221)==1331', 'assert next_smallest_palindrome(120)==121']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी निर्दिष्ट पूर्णांक के अगले सबसे छोटे पैलिंड्रोम को खोजने के लिए एक फ़ंक्शन लिखें, जो पूर्णांक के रूप में लौटाया गया हो।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी निर्दिष्ट पूर्णांक के अगले सबसे छोटे पैलिंड्रोम को खोजने के लिए एक फ़ंक्शन लिखें, जो पूर्णांक के रूप में लौटाया गया हो।

<</>

<</>

<</>

<</>

<</>"
48,Mike's Copy of Benchmark Questions Verification V2.ipynb,101,1-आधारित अनुक्रमणिका का उपयोग करके दिए गए सरणी में kवें तत्व को खोजने के लिए एक फ़ंक्शन लिखें।,"def kth_element(arr, k):
  n = len(arr)
  for i in range(n):
    for j in range(0, n-i-1):
      if arr[j] > arr[j+1]:
        arr[j], arr[j+1] == arr[j+1], arr[j]
  return arr[k-1]",[],"['assert kth_element([12,3,5,7,19], 2) == 3', 'assert kth_element([17,24,8,23], 3) == 8', 'assert kth_element([16,21,25,36,4], 4) == 36']","<s><<SYS>>
Provide answers in Python
<</SYS>>

1-आधारित अनुक्रमणिका का उपयोग करके दिए गए सरणी में kवें तत्व को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

1-आधारित अनुक्रमणिका का उपयोग करके दिए गए सरणी में kवें तत्व को खोजने के लिए एक फ़ंक्शन लिखें।

2-दो सरणी को एक सरणी में जोड़ें।

"
49,Mike's Copy of Benchmark Questions Verification V2.ipynb,102,साँप केस स्ट्रिंग को ऊँट केस स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।,"def snake_to_camel(word):
        import re
        return ''.join(x.capitalize() or '_' for x in word.split('_'))",[],"[""assert snake_to_camel('python_program')=='PythonProgram'"", ""assert snake_to_camel('python_language')==('PythonLanguage')"", ""assert snake_to_camel('programming_language')==('ProgrammingLanguage')""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

साँप केस स्ट्रिंग को ऊँट केस स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

साँप केस स्ट्रिंग को ऊँट केस स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>
>>> def swap_case(s):
...     return s.swapcase()
...
>>> swap"
50,Mike's Copy of Benchmark Questions Verification V2.ipynb,103,"यूलेरियन संख्या a(n, m) ज्ञात करने के लिए एक फ़ंक्शन लिखें।","def eulerian_num(n, m): 
	if (m >= n or n == 0): 
		return 0 
	if (m == 0): 
		return 1 
	return ((n - m) * eulerian_num(n - 1, m - 1) +(m + 1) * eulerian_num(n - 1, m))",[],"['assert eulerian_num(3, 1) == 4', 'assert eulerian_num(4, 1) == 11', 'assert eulerian_num(5, 3) == 26']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यूलेरियन संख्या a(n, m) ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यूलेरियन संख्या a(n, m) ज्ञात करने के लिए एक फ़ंक्शन लिखें।

>>> def a(n, m):
...     return n * m
...
>>> a(2, 3)
6
>>> a(1"
51,Mike's Copy of Benchmark Questions Verification V2.ipynb,104,सूचियों की दी गई सूची में स्ट्रिंग्स की प्रत्येक उपसूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।,"def sort_sublists(input_list):
    result = [sorted(x, key = lambda x:x[0]) for x in input_list] 
    return result
",[],"['assert sort_sublists(([""green"", ""orange""], [""black"", ""white""], [""white"", ""black"", ""orange""]))==[[\'green\', \'orange\'], [\'black\', \'white\'], [\'black\', \'orange\', \'white\']]', 'assert sort_sublists((["" red "",""green"" ],[""blue "","" black""],["" orange"",""brown""]))==[[\' red \', \'green\'], [\' black\', \'blue \'], [\' orange\', \'brown\']]', 'assert sort_sublists(([""zilver"",""gold""], [""magnesium"",""aluminium""], [""steel"", ""bronze""]))==[[\'gold\', \'zilver\'],[\'aluminium\', \'magnesium\'], [\'bronze\', \'steel\']]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की दी गई सूची में स्ट्रिंग्स की प्रत्येक उपसूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की दी गई सूची में स्ट्रिंग्स की प्रत्येक उपसूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>
<b>Input</b>
1
2
3
4
5
6
7
8
"
52,Mike's Copy of Benchmark Questions Verification V2.ipynb,105,दी गई सूची में सच्चे बूलियन की गणना करने के लिए एक पायथन फ़ंक्शन लिखें।,"def count(lst):   
    return sum(lst) ",[],"['assert count([True,False,True]) == 2', 'assert count([False,False]) == 0', 'assert count([True,True,True]) == 3']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची में सच्चे बूलियन की गणना करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची में सच्चे बूलियन की गणना करने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की तरह से एक स्ट्रिंग की गणना"
53,Mike's Copy of Benchmark Questions Verification V2.ipynb,106,दी गई सूची को दिए गए टुपल्स में जोड़ने के लिए एक फ़ंक्शन लिखें।,"def add_lists(test_list, test_tup):
  res = tuple(list(test_tup) + test_list)
  return (res) ",[],"['assert add_lists([5, 6, 7], (9, 10)) == (9, 10, 5, 6, 7)', 'assert add_lists([6, 7, 8], (10, 11)) == (10, 11, 6, 7, 8)', 'assert add_lists([7, 8, 9], (11, 12)) == (11, 12, 7, 8, 9)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची को दिए गए टुपल्स में जोड़ने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची को दिए गए टुपल्स में जोड़ने के लिए एक फ़ंक्शन लिखें।

सूची की तरह का एक स्ट्रिंग की जांच"
54,Mike's Copy of Benchmark Questions Verification V2.ipynb,108,तीन सूचियों को एक एकल क्रमबद्ध सूची में मर्ज करने के लिए एक फ़ंक्शन लिखें।,"import heapq
def merge_sorted_list(num1,num2,num3):
  num1=sorted(num1)
  num2=sorted(num2)
  num3=sorted(num3)
  result = heapq.merge(num1,num2,num3)
  return list(result)",[],"['assert merge_sorted_list([25, 24, 15, 4, 5, 29, 110],[19, 20, 11, 56, 25, 233, 154],[24, 26, 54, 48])==[4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233]', 'assert merge_sorted_list([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12])==[1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12]', 'assert merge_sorted_list([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1],[25, 35, 22, 85, 14, 65, 75, 25, 58],[12, 74, 9, 50, 61, 41])==[1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

तीन सूचियों को एक एकल क्रमबद्ध सूची में मर्ज करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

तीन सूचियों को एक एकल क्रमबद्ध सूची में मर्ज करने के लिए एक फ़ंक्शन लिखें।

सूचियों की तरह से सीमा से एक सीमा "
55,Mike's Copy of Benchmark Questions Verification V2.ipynb,109,किसी बाइनरी स्ट्रिंग को दी गई संख्या में घुमाते समय विषम मान वाली संख्याओं की संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def odd_Equivalent(s,n): 
    count=0
    for i in range(0,n): 
        if (s[i] == '1'): 
            count = count + 1
    return count ",[],"['assert odd_Equivalent(""011001"",6) == 3', 'assert odd_Equivalent(""11011"",5) == 4', 'assert odd_Equivalent(""1010"",4) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी बाइनरी स्ट्रिंग को दी गई संख्या में घुमाते समय विषम मान वाली संख्याओं की संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी बाइनरी स्ट्रिंग को दी गई संख्या में घुमाते समय विषम मान वाली संख्याओं की संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

<b>Example</b>
<pre>
<b>Input</b>
10
<b>Output</b>
1 2 3"
56,Mike's Copy of Benchmark Questions Verification V2.ipynb,111,दी गई नेस्टेड सूचियों में सामान्य तत्वों को खोजने के लिए एक फ़ंक्शन लिखें।,"def common_in_nested_lists(nestedlist):
    result = list(set.intersection(*map(set, nestedlist)))
    return result",[],"['assert set(common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]]))==set([18, 12])', 'assert set(common_in_nested_lists([[12, 5, 23, 25, 45], [7, 11, 5, 23, 28], [1, 5, 8, 18, 23, 16]]))==set([5,23])', 'assert set(common_in_nested_lists([[2, 3,4, 1], [4, 5], [6,4, 8],[4, 5], [6, 8,4]]))==set([4])']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई नेस्टेड सूचियों में सामान्य तत्वों को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई नेस्टेड सूचियों में सामान्य तत्वों को खोजने के लिए एक फ़ंक्शन लिखें।

सूची की तरह से सामान्य तत्वों को खोज"
57,Mike's Copy of Benchmark Questions Verification V2.ipynb,113,यह जांचने के लिए एक फ़ंक्शन लिखें कि कोई स्ट्रिंग पूर्णांक का प्रतिनिधित्व करती है या नहीं।,"def check_integer(text):
 text = text.strip()
 if len(text) < 1:
    return None
 else:
     if all(text[i] in ""0123456789"" for i in range(len(text))):
          return True
     elif (text[0] in ""+-"") and \
         all(text[i] in ""0123456789"" for i in range(1,len(text))):
         return True
     else:
        return False",[],"['assert check_integer(""python"")==False', 'assert check_integer(""1"")==True', 'assert check_integer(""12345"")==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि कोई स्ट्रिंग पूर्णांक का प्रतिनिधित्व करती है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि कोई स्ट्रिंग पूर्णांक का प्रतिनिधित्व करती है या नहीं।

>>> def is_number(s):
...     try:
...         float(s)
...         return True
...     except ValueError:
...        "
58,Mike's Copy of Benchmark Questions Verification V2.ipynb,115,यह जांचने के लिए एक फ़ंक्शन लिखें कि किसी सूची में सभी शब्दकोश खाली हैं या नहीं।,"def empty_dit(list1):
 empty_dit=all(not d for d in list1)
 return empty_dit",[],"['assert empty_dit([{},{},{}])==True', 'assert empty_dit([{1,2},{},{}])==False', 'assert empty_dit({})==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि किसी सूची में सभी शब्दकोश खाली हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि किसी सूची में सभी शब्दकोश खाली हैं या नहीं।

<</CODE>>

def is_empty(list):
    for item in list:
        if item:
            return False
    return True

<"
59,Mike's Copy of Benchmark Questions Verification V2.ipynb,116,धनात्मक पूर्णांकों के दिए गए टुपल को एक पूर्णांक में बदलने के लिए एक फ़ंक्शन लिखें।,"def tuple_to_int(nums):
    result = int(''.join(map(str,nums)))
    return result",[],"['assert tuple_to_int((1,2,3))==123', 'assert tuple_to_int((4,5,6))==456', 'assert tuple_to_int((5,6,7))==567']","<s><<SYS>>
Provide answers in Python
<</SYS>>

धनात्मक पूर्णांकों के दिए गए टुपल को एक पूर्णांक में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

धनात्मक पूर्णांकों के दिए गए टुपल को एक पूर्णांक में बदलने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def swap(a, b):
    return b, a

<</CODE>>

<</SYS>>

<</"
60,Mike's Copy of Benchmark Questions Verification V2.ipynb,117,सूचियों की सूची में सभी संभावित परिवर्तनीय तत्वों को फ़्लोट में बदलने के लिए एक फ़ंक्शन लिखें।,"def list_to_float(test_list):
  res = []
  for tup in test_list:
    temp = []
    for ele in tup:
      if ele.isalpha():
        temp.append(ele)
      else:
        temp.append(float(ele))
    res.append((temp[0],temp[1])) 
  return res",[],"['assert list_to_float( [(""3"", ""4""), (""1"", ""26.45""), (""7.32"", ""8""), (""4"", ""8"")] ) == [(3.0, 4.0), (1.0, 26.45), (7.32, 8.0), (4.0, 8.0)]', 'assert list_to_float( [(""4"", ""4""), (""2"", ""27""), (""4.12"", ""9""), (""7"", ""11"")] ) == [(4.0, 4.0), (2.0, 27.0), (4.12, 9.0), (7.0, 11.0)]', 'assert list_to_float( [(""6"", ""78""), (""5"", ""26.45""), (""1.33"", ""4""), (""82"", ""13"")] ) == [(6.0, 78.0), (5.0, 26.45), (1.33, 4.0), (82.0, 13.0)]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची में सभी संभावित परिवर्तनीय तत्वों को फ़्लोट में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची में सभी संभावित परिवर्तनीय तत्वों को फ़्लोट में बदलने के लिए एक फ़ंक्शन लिखें।

सूचियों की सूची में सभी संभावित परिव"
61,Mike's Copy of Benchmark Questions Verification V2.ipynb,118,किसी स्ट्रिंग को स्पेस कैरेक्टर पर विभाजित स्ट्रिंग्स की सूची में बदलने के लिए एक फ़ंक्शन लिखें।,"def string_to_list(string): 
    lst = list(string.split("" "")) 
    return lst",[],"['assert string_to_list(""python programming"")==[\'python\',\'programming\']', 'assert string_to_list(""lists tuples strings"")==[\'lists\',\'tuples\',\'strings\']', 'assert string_to_list(""write a program"")==[\'write\',\'a\',\'program\']']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी स्ट्रिंग को स्पेस कैरेक्टर पर विभाजित स्ट्रिंग्स की सूची में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी स्ट्रिंग को स्पेस कैरेक्टर पर विभाजित स्ट्रिंग्स की सूची में बदलने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

"
62,Mike's Copy of Benchmark Questions Verification V2.ipynb,119,उस तत्व को ढूंढने के लिए एक पायथन फ़ंक्शन लिखें जो क्रमबद्ध सरणी में केवल एक बार दिखाई देता है।,"def search(arr):
    n = len(arr)
    XOR = 0
    for i in range(n) :
        XOR = XOR ^ arr[i]
    return (XOR)",[],"['assert search([1,1,2,2,3]) == 3', 'assert search([1,1,3,3,4,4,5,5,7,7,8]) == 8', 'assert search([1,2,2,3,3,4,4]) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

उस तत्व को ढूंढने के लिए एक पायथन फ़ंक्शन लिखें जो क्रमबद्ध सरणी में केवल एक बार दिखाई देता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

उस तत्व को ढूंढने के लिए एक पायथन फ़ंक्शन लिखें जो क्रमबद्ध सरणी में केवल एक बार दिखाई देता है।

>>> def find_unique(seq):
...     seen = set()
...     for x in seq:
...         if x in seen:
...             return"
63,Mike's Copy of Benchmark Questions Verification V2.ipynb,120,किसी दी गई सूची में टुपल्स के जोड़े में संख्याओं के बीच अधिकतम निरपेक्ष उत्पाद खोजने के लिए एक फ़ंक्शन लिखें।,"def max_product_tuple(list1):
    result_max = max([abs(x * y) for x, y in list1] )
    return result_max",[],"['assert max_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==36', 'assert max_product_tuple([(10,20), (15,2), (5,10)] )==200', 'assert max_product_tuple([(11,44), (10,15), (20,5), (12, 9)] )==484']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में टुपल्स के जोड़े में संख्याओं के बीच अधिकतम निरपेक्ष उत्पाद खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में टुपल्स के जोड़े में संख्याओं के बीच अधिकतम निरपेक्ष उत्पाद खोजने के लिए एक फ़ंक्शन लिखें।





































"
64,Mike's Copy of Benchmark Questions Verification V2.ipynb,123,सभी सौहार्दपूर्ण संख्याओं को 1 से एक निर्दिष्ट संख्या तक जोड़ने के लिए एक फ़ंक्शन लिखें।,"def amicable_numbers_sum(limit):
    if not isinstance(limit, int):
        return ""Input is not an integer!""
    if limit < 1:
        return ""Input must be bigger than 0!""
    amicables = set()
    for num in range(2, limit+1):
        if num in amicables:
            continue
        sum_fact = sum([fact for fact in range(1, num) if num % fact == 0])
        sum_fact2 = sum([fact for fact in range(1, sum_fact) if sum_fact % fact == 0])
        if num == sum_fact2 and num != sum_fact:
            amicables.add(num)
            amicables.add(sum_fact2)
    return sum(amicables)",[],"['assert amicable_numbers_sum(999)==504', 'assert amicable_numbers_sum(9999)==31626', 'assert amicable_numbers_sum(99)==0']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सभी सौहार्दपूर्ण संख्याओं को 1 से एक निर्दिष्ट संख्या तक जोड़ने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सभी सौहार्दपूर्ण संख्याओं को 1 से एक निर्दिष्ट संख्या तक जोड़ने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<"
65,Mike's Copy of Benchmark Questions Verification V2.ipynb,124,किसी सम्मिश्र संख्या का कोण प्राप्त करने के लिए एक फ़ंक्शन लिखें।,"import cmath
def angle_complex(a,b):
  cn=complex(a,b)
  angle=cmath.phase(a+b)
  return angle",['import math'],"['assert math.isclose(angle_complex(0,1j), 1.5707963267948966, rel_tol=0.001)', 'assert math.isclose(angle_complex(2,1j), 0.4636476090008061, rel_tol=0.001)', 'assert math.isclose(angle_complex(0,2j), 1.5707963267948966, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सम्मिश्र संख्या का कोण प्राप्त करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सम्मिश्र संख्या का कोण प्राप्त करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def sammi(num):
    return num*2

<</CODE>>

<</SYS>>

<</CODE>>"
66,Mike's Copy of Benchmark Questions Verification V2.ipynb,125,दी गई बाइनरी स्ट्रिंग के किसी उप-स्ट्रिंग में 0s की संख्या और 1s की संख्या के बीच अधिकतम अंतर जानने के लिए एक फ़ंक्शन लिखें।,"def find_length(string): 
	n = len(string)
	current_sum = 0
	max_sum = 0
	for i in range(n): 
		current_sum += (1 if string[i] == '0' else -1) 
		if current_sum < 0: 
			current_sum = 0
		max_sum = max(current_sum, max_sum) 
	return max_sum if max_sum else 0",[],"['assert find_length(""11000010001"") == 6', 'assert find_length(""10111"") == 1', 'assert find_length(""11011101100101"") == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई बाइनरी स्ट्रिंग के किसी उप-स्ट्रिंग में 0s की संख्या और 1s की संख्या के बीच अधिकतम अंतर जानने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई बाइनरी स्ट्रिंग के किसी उप-स्ट्रिंग में 0s की संख्या और 1s की संख्या के बीच अधिकतम अंतर जानने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>
max_diff(""10111"", ""11110"")
# 4
max_diff"
67,Mike's Copy of Benchmark Questions Verification V2.ipynb,126,दो दी गई संख्याओं के उभयनिष्ठ भाजक का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def sum(a,b): 
    sum = 0
    for i in range (1,min(a,b)): 
        if (a % i == 0 and b % i == 0): 
            sum += i 
    return sum",[],"['assert sum(10,15) == 6', 'assert sum(100,150) == 93', 'assert sum(4,6) == 3']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो दी गई संख्याओं के उभयनिष्ठ भाजक का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो दी गई संख्याओं के उभयनिष्ठ भाजक का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

संख्याओं को एक स्ट्रिंग के रूप मे"
68,Mike's Copy of Benchmark Questions Verification V2.ipynb,127,दो पूर्णांकों को गुणा करने के लिए एक फ़ंक्शन लिखें।,"def multiply_int(x, y):
    if y < 0:
        return -multiply_int(x, -y)
    elif y == 0:
        return 0
    elif y == 1:
        return x
    else:
        return x + multiply_int(x, y - 1)",[],"['assert multiply_int(10,20)==200', 'assert multiply_int(5,10)==50', 'assert multiply_int(4,8)==32']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो पूर्णांकों को गुणा करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो पूर्णांकों को गुणा करने के लिए एक फ़ंक्शन लिखें।

>>> def add_guan(a, b):
...     return a + b
...
>>> add_guan(1, 2)
3
"
69,Mike's Copy of Benchmark Questions Verification V2.ipynb,128,शब्दों की दी गई सूची से n वर्णों से अधिक लंबे शब्दों को खोजने के लिए एक फ़ंक्शन लिखें।,"def long_words(n, str):
    word_len = []
    txt = str.split("" "")
    for x in txt:
        if len(x) > n:
            word_len.append(x)
    return word_len	",[],"['assert long_words(3,""python is a programming language"")==[\'python\',\'programming\',\'language\']', 'assert long_words(2,""writing a program"")==[\'writing\',\'program\']', 'assert long_words(5,""sorting list"")==[\'sorting\']']","<s><<SYS>>
Provide answers in Python
<</SYS>>

शब्दों की दी गई सूची से n वर्णों से अधिक लंबे शब्दों को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

शब्दों की दी गई सूची से n वर्णों से अधिक लंबे शब्दों को खोजने के लिए एक फ़ंक्शन लिखें।






































"
70,Mike's Copy of Benchmark Questions Verification V2.ipynb,129,यह गणना करने के लिए एक फ़ंक्शन लिखें कि मैट्रिक्स एक जादुई वर्ग है या नहीं।,"def magic_square_test(my_matrix):
    iSize = len(my_matrix[0])
    sum_list = []
    sum_list.extend([sum (lines) for lines in my_matrix])   
    for col in range(iSize):
        sum_list.append(sum(row[col] for row in my_matrix))
    result1 = 0
    for i in range(0,iSize):
        result1 +=my_matrix[i][i]
    sum_list.append(result1)      
    result2 = 0
    for i in range(iSize-1,-1,-1):
        result2 +=my_matrix[i][i]
    sum_list.append(result2)
    if len(set(sum_list))>1:
        return False
    return True",[],"['assert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True', 'assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 8]])==True', 'assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 7]])==False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह गणना करने के लिए एक फ़ंक्शन लिखें कि मैट्रिक्स एक जादुई वर्ग है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह गणना करने के लिए एक फ़ंक्शन लिखें कि मैट्रिक्स एक जादुई वर्ग है या नहीं। यदि इसका प्रतिनिधि है, तो इसका प्र"
71,Mike's Copy of Benchmark Questions Verification V2.ipynb,130,किसी दी गई सूची में अधिकतम आवृत्ति वाले आइटम को खोजने के लिए एक फ़ंक्शन लिखें।,"from collections import defaultdict
def max_occurrences(nums):
    dict = defaultdict(int)
    for i in nums:
        dict[i] += 1
    result = max(dict.items(), key=lambda x: x[1]) 
    return result[0]",[],"['assert max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==2', 'assert max_occurrences([2,3,8,4,7,9,8,7,9,15,14,10,12,13,16,18])==8', 'assert max_occurrences([10,20,20,30,40,90,80,50,30,20,50,10])==20']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में अधिकतम आवृत्ति वाले आइटम को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में अधिकतम आवृत्ति वाले आइटम को खोजने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<br>
<b>Input</b>
<br>
<pre>
[1, 2, 3,"
72,Mike's Copy of Benchmark Questions Verification V2.ipynb,131,किसी दिए गए स्ट्रिंग के केवल स्वरों को उलटने के लिए एक पायथन फ़ंक्शन लिखें (जहां y स्वर नहीं है)।,"def reverse_vowels(str1):
	vowels = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			vowels += char
	result_string = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			result_string += vowels[-1]
			vowels = vowels[:-1]
		else:
			result_string += char
	return result_string",[],"['assert reverse_vowels(""Python"") == ""Python""', 'assert reverse_vowels(""USA"") == ""ASU""', 'assert reverse_vowels(""ab"") == ""ab""']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग के केवल स्वरों को उलटने के लिए एक पायथन फ़ंक्शन लिखें (जहां y स्वर नहीं है)।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग के केवल स्वरों को उलटने के लिए एक पायथन फ़ंक्शन लिखें (जहां y स्वर नहीं है)।

>>> def remove_vowels(s):
...     vowels = 'aeiou'
...     return ''.join(c for c in s if"
73,Mike's Copy of Benchmark Questions Verification V2.ipynb,132,टुपल को स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।,"def tup_string(tup1):
  str =  ''.join(tup1)
  return str",[],"['assert tup_string((\'e\', \'x\', \'e\', \'r\', \'c\', \'i\', \'s\', \'e\', \'s\'))==(""exercises"")', 'assert tup_string((\'p\',\'y\',\'t\',\'h\',\'o\',\'n\'))==(""python"")', 'assert tup_string((\'p\',\'r\',\'o\',\'g\',\'r\',\'a\',\'m\'))==(""program"")']","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल को स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल को स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।






































"
74,Mike's Copy of Benchmark Questions Verification V2.ipynb,133,संख्याओं की दी गई सूची की ऋणात्मक संख्याओं के योग की गणना करने के लिए एक फ़ंक्शन लिखें।,"def sum_negativenum(nums):
  sum_negativenum = list(filter(lambda nums:nums<0,nums))
  return sum(sum_negativenum)",[],"['assert sum_negativenum([2, 4, -6, -9, 11, -12, 14, -5, 17])==-32', 'assert sum_negativenum([10,15,-14,13,-18,12,-20])==-52', 'assert sum_negativenum([19, -65, 57, 39, 152,-639, 121, 44, 90, -190])==-894']","<s><<SYS>>
Provide answers in Python
<</SYS>>

संख्याओं की दी गई सूची की ऋणात्मक संख्याओं के योग की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

संख्याओं की दी गई सूची की ऋणात्मक संख्याओं के योग की गणना करने के लिए एक फ़ंक्शन लिखें।

सूची की तरह से संख्याओं की सूची देन"
75,Mike's Copy of Benchmark Questions Verification V2.ipynb,135,nवीं षट्कोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def hexagonal_num(n): 
	return n*(2*n - 1) ",[],"['assert hexagonal_num(10) == 190', 'assert hexagonal_num(5) == 45', 'assert hexagonal_num(7) == 91']","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं षट्कोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं षट्कोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def फंक्शन_नाम(a):
    # अपने कोड य"
76,Mike's Copy of Benchmark Questions Verification V2.ipynb,137,पूर्णांकों की किसी सारणी में शून्य से गैर-शून्य का अनुपात ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"from array import array
def zero_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x == 0:
            n1 += 1
        else:
          None
    return n1/(n-n1)",['import math'],"['assert math.isclose(zero_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8]), 0.181818, rel_tol=0.001)', 'assert math.isclose(zero_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8]), 0.00, rel_tol=0.001)', 'assert math.isclose(zero_count([2, 4, -6, -9, 11, -12, 14, -5, 17]), 0.00, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

पूर्णांकों की किसी सारणी में शून्य से गैर-शून्य का अनुपात ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

पूर्णांकों की किसी सारणी में शून्य से गैर-शून्य का अनुपात ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</> के लिए एक फ़ंक्शन लिखें।

<"
77,Mike's Copy of Benchmark Questions Verification V2.ipynb,138,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि क्या दी गई संख्या को 2 की गैर-शून्य शक्तियों के योग के रूप में दर्शाया जा सकता है या नहीं।,"def is_Sum_Of_Powers_Of_Two(n): 
    if (n % 2 == 1): 
        return False
    else: 
        return True",[],"['assert is_Sum_Of_Powers_Of_Two(10) == True', 'assert is_Sum_Of_Powers_Of_Two(7) == False', 'assert is_Sum_Of_Powers_Of_Two(14) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि क्या दी गई संख्या को 2 की गैर-शून्य शक्तियों के योग के रूप में दर्शाया जा सकता है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि क्या दी गई संख्या को 2 की गैर-शून्य शक्तियों के योग के रूप में दर्शाया जा सकता है या नहीं।






































"
78,Mike's Copy of Benchmark Questions Verification V2.ipynb,139,वृत्त की परिधि ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def circle_circumference(r):
  perimeter=2*3.1415*r
  return perimeter",['import math'],"['assert math.isclose(circle_circumference(10), 62.830000000000005, rel_tol=0.001)', 'assert math.isclose(circle_circumference(5), 31.415000000000003, rel_tol=0.001)', 'assert math.isclose(circle_circumference(4), 25.132, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

वृत्त की परिधि ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

वृत्त की परिधि ज्ञात करने के लिए एक फ़ंक्शन लिखें।

>>> def average(a, b):
...     return (a + b) / 2
...
>>> average(1, 2)
1.5"
79,Mike's Copy of Benchmark Questions Verification V2.ipynb,140,सूचियों की सूची को संख्याओं के एकल सेट में समतल करने के लिए एक फ़ंक्शन लिखें।,"def extract_singly(test_list):
  res = []
  temp = set()
  for inner in test_list:
    for ele in inner:
      if not ele in temp:
        temp.add(ele)
        res.append(ele)
  return (res) ",[],"['assert set(extract_singly([(3, 4, 5), (4, 5, 7), (1, 4)])) == set([3, 4, 5, 7, 1])', 'assert set(extract_singly([(1, 2, 3), (4, 2, 3), (7, 8)])) == set([1, 2, 3, 4, 7, 8])', 'assert set(extract_singly([(7, 8, 9), (10, 11, 12), (10, 11)])) == set([7, 8, 9, 10, 11, 12])']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची को संख्याओं के एकल सेट में समतल करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची को संख्याओं के एकल सेट में समतल करने के लिए एक फ़ंक्शन लिखें।

सूचियों की सूची को संख्याओं के एक"
80,Mike's Copy of Benchmark Questions Verification V2.ipynb,141,तत्वों की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।,"def pancake_sort(nums):
    arr_len = len(nums)
    while arr_len > 1:
        mi = nums.index(max(nums[0:arr_len]))
        nums = nums[mi::-1] + nums[mi+1:len(nums)]
        nums = nums[arr_len-1::-1] + nums[arr_len:len(nums)]
        arr_len -= 1
    return nums",[],"['assert pancake_sort([15, 79, 25, 38, 69]) == [15, 25, 38, 69, 79]', 'assert pancake_sort([98, 12, 54, 36, 85]) == [12, 36, 54, 85, 98]', 'assert pancake_sort([41, 42, 32, 12, 23]) == [12, 23, 32, 41, 42]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

तत्वों की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

तत्वों की सूची को क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।





















"
81,Mike's Copy of Benchmark Questions Verification V2.ipynb,142,दी गई तीन सूचियों की एक ही स्थिति में समान संख्या वाले आइटमों को गिनने के लिए एक फ़ंक्शन लिखें।,"def count_samepair(list1,list2,list3):
    result = sum(m == n == o for m, n, o in zip(list1,list2,list3))
    return result",[],"['assert count_samepair([1,2,3,4,5,6,7,8],[2,2,3,1,2,6,7,9],[2,1,3,1,2,6,7,9])==3', 'assert count_samepair([1,2,3,4,5,6,7,8],[2,2,3,1,2,6,7,8],[2,1,3,1,2,6,7,8])==4', 'assert count_samepair([1,2,3,4,2,6,7,8],[2,2,3,1,2,6,7,8],[2,1,3,1,2,6,7,8])==5']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई तीन सूचियों की एक ही स्थिति में समान संख्या वाले आइटमों को गिनने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई तीन सूचियों की एक ही स्थिति में समान संख्या वाले आइटमों को गिनने के लिए एक फ़ंक्शन लिखें।

<b>Input Format</b><br>
दो स्थिति"
82,Mike's Copy of Benchmark Questions Verification V2.ipynb,143,दिए गए टुपल में मौजूद सूचियों की संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def find_lists(Input): 
	if isinstance(Input, list): 
		return 1
	else: 
		return len(Input) ",[],"['assert find_lists(([1, 2, 3, 4], [5, 6, 7, 8])) == 2', 'assert find_lists(([1, 2], [3, 4], [5, 6]))  == 3', 'assert find_lists(([9, 8, 7, 6, 5, 4, 3, 2, 1])) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल में मौजूद सूचियों की संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल में मौजूद सूचियों की संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</> के लिए एक स्"
83,Mike's Copy of Benchmark Questions Verification V2.ipynb,145,किसी दिए गए सरणी में किन्हीं दो तत्वों के बीच अधिकतम अंतर जानने के लिए एक पायथन फ़ंक्शन लिखें।,"def max_Abs_Diff(arr): 
    n = len(arr)
    minEle = arr[0] 
    maxEle = arr[0] 
    for i in range(1, n): 
        minEle = min(minEle,arr[i]) 
        maxEle = max(maxEle,arr[i]) 
    return (maxEle - minEle) ",[],"['assert max_Abs_Diff((2,1,5,3)) == 4', 'assert max_Abs_Diff((9,3,2,5,1)) == 8', 'assert max_Abs_Diff((3,2,1)) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए सरणी में किन्हीं दो तत्वों के बीच अधिकतम अंतर जानने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए सरणी में किन्हीं दो तत्वों के बीच अधिकतम अंतर जानने के लिए एक पायथन फ़ंक्शन लिखें।

<</> क्विज से पूर्ण प"
84,Benchmark Questions Verification V2.ipynb,160,"एक फ़ंक्शन लिखें जो पूर्णांक x और y लौटाता है जो ax + by = n को टुपल के रूप में संतुष्ट करता है, या यदि कोई समाधान मौजूद नहीं है तो कोई नहीं लौटाता है।","def find_solution(a, b, n):
	i = 0
	while i * a <= n:
		if (n - (i * a)) % b == 0: 
			return (i, (n - (i * a)) // b)
		i = i + 1
	return None",[],"['assert find_solution(2, 3, 7) == (2, 1)', 'assert find_solution(4, 2, 7) == None', 'assert find_solution(1, 13, 17) == (4, 1)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो पूर्णांक x और y लौटाता है जो ax + by = n को टुपल के रूप में संतुष्ट करता है, या यदि कोई समाधान मौजूद नहीं है तो कोई नहीं लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो पूर्णांक x और y लौटाता है जो ax + by = n को टुपल के रूप में संतुष्ट करता है, या यदि कोई समाधान मौजूद नहीं है तो कोई नहीं लौटाता है।

>>> def gcd(x, y):
...     if x % y == 0"
85,Benchmark Questions Verification V2.ipynb,161,किसी दी गई सूची से किसी अन्य सूची में मौजूद सभी तत्वों को हटाने के लिए एक फ़ंक्शन लिखें।,"def remove_elements(list1, list2):
    result = [x for x in list1 if x not in list2]
    return result",[],"['assert remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 4, 6, 8]) == [1, 3, 5, 7, 9, 10]', 'assert remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 3, 5, 7]) == [2, 4, 6, 8, 9, 10]', 'assert remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [5, 7]) == [1, 2, 3, 4, 6, 8, 9, 10]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची से किसी अन्य सूची में मौजूद सभी तत्वों को हटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची से किसी अन्य सूची में मौजूद सभी तत्वों को हटाने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def remove_all(list1, list2):
    for"
86,Benchmark Questions Verification V2.ipynb,162,"i=0 से n // 2 तक के योग (n - 2*i) की गणना करने के लिए एक फ़ंक्शन लिखें, उदाहरण के लिए n + (n-2) + (n-4)... (nx =&lt; 0 तक)।","def sum_series(n):
  if n < 1:
    return 0
  else:
    return n + sum_series(n - 2)",[],"['assert sum_series(6) == 12', 'assert sum_series(10) == 30', 'assert sum_series(9) == 25']","<s><<SYS>>
Provide answers in Python
<</SYS>>

i=0 से n // 2 तक के योग (n - 2*i) की गणना करने के लिए एक फ़ंक्शन लिखें, उदाहरण के लिए n + (n-2) + (n-4)... (nx =&lt; 0 तक)।","<s><<SYS>>
Provide answers in Python
<</SYS>>

i=0 से n // 2 तक के योग (n - 2*i) की गणना करने के लिए एक फ़ंक्शन लिखें, उदाहरण के लिए n + (n-2) + (n-4)... (nx =&lt; 0 तक)।





















"
87,Benchmark Questions Verification V2.ipynb,163,एक नियमित बहुभुज की लंबाई और भुजाओं की संख्या को देखते हुए उसके क्षेत्रफल की गणना करने के लिए एक फ़ंक्शन लिखें।,"from math import tan, pi
def area_polygon(s, l):
  area = s * (l ** 2) / (4 * tan(pi / s))
  return area",['import math'],"['assert math.isclose(area_polygon(4, 20), 400., rel_tol=0.001)', 'assert math.isclose(area_polygon(10, 15), 1731.197, rel_tol=0.001)', 'assert math.isclose(area_polygon(9, 7), 302.909, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक नियमित बहुभुज की लंबाई और भुजाओं की संख्या को देखते हुए उसके क्षेत्रफल की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक नियमित बहुभुज की लंबाई और भुजाओं की संख्या को देखते हुए उसके क्षेत्रफल की गणना करने के लिए एक फ़ंक्शन लिखें।

साइड इनपुट:

1. "
88,Benchmark Questions Verification V2.ipynb,164,यह निर्धारित करने के लिए एक फ़ंक्शन लिखें कि क्या दो पूर्णांकों के विभाजकों का योग समान है।,"import math 
def div_sum(n): 
  total = 1
  i = 2

  while i * i <= n:
    if (n % i == 0):
      total = (total + i + math.floor(n / i))
    i += 1

  return total

def are_equivalent(num1, num2): 
    return div_sum(num1) == div_sum(num2); ",[],"['assert are_equivalent(36, 57) == False', 'assert are_equivalent(2, 4) == False', 'assert are_equivalent(23, 47) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह निर्धारित करने के लिए एक फ़ंक्शन लिखें कि क्या दो पूर्णांकों के विभाजकों का योग समान है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह निर्धारित करने के लिए एक फ़ंक्शन लिखें कि क्या दो पूर्णांकों के विभाजकों का योग समान है।

>>> def same_sign(a, b):
...     return (a > 0"
89,Benchmark Questions Verification V2.ipynb,165,एक स्ट्रिंग में वर्णों की संख्या की गणना करने के लिए एक फ़ंक्शन लिखें जो स्ट्रिंग में अंग्रेजी वर्णमाला (केस असंवेदनशील) के समान स्थान पर होते हैं।,"def count_char_position(str1): 
    count_chars = 0
    for i in range(len(str1)):
        if ((i == ord(str1[i]) - ord('A')) or 
            (i == ord(str1[i]) - ord('a'))): 
            count_chars += 1
    return count_chars ",[],"['assert count_char_position(""xbcefg"") == 2', 'assert count_char_position(""ABcED"") == 3', 'assert count_char_position(""AbgdeF"") == 5']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक स्ट्रिंग में वर्णों की संख्या की गणना करने के लिए एक फ़ंक्शन लिखें जो स्ट्रिंग में अंग्रेजी वर्णमाला (केस असंवेदनशील) के समान स्थान पर होते हैं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक स्ट्रिंग में वर्णों की संख्या की गणना करने के लिए एक फ़ंक्शन लिखें जो स्ट्रिंग में अंग्रेजी वर्णमाला (केस असंवेदनशील) के समान स्थान पर होते हैं।





















"
90,Benchmark Questions Verification V2.ipynb,166,एक फ़ंक्शन लिखें जो किसी सूची में पूर्णांकों के जोड़े की संख्या को सम संख्या में गिनता है।,"def find_even_pair(A): 
  count = 0
  for i in range(0, len(A)): 
    for j in range(i+1, len(A)): 
        if ((A[i] ^ A[j]) % 2 == 0): 
          count += 1

  return count",[],"['assert find_even_pair([5, 4, 7, 2, 1]) == 4', 'assert find_even_pair([7, 2, 8, 1, 0, 5, 11]) == 9', 'assert find_even_pair([1, 2, 3]) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो किसी सूची में पूर्णांकों के जोड़े की संख्या को सम संख्या में गिनता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो किसी सूची में पूर्णांकों के जोड़े की संख्या को सम संख्या में गिनता है।





















"
91,Benchmark Questions Verification V2.ipynb,167,n से अधिक या उसके बराबर 2 की सबसे छोटी शक्ति ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def next_power_of_2(n): 
  if n and not n & (n - 1):
    return n

  count = 0
  while n != 0: 
    n >>= 1
    count += 1

  return 1 << count; ",[],"['assert next_power_of_2(0) == 1', 'assert next_power_of_2(5) == 8', 'assert next_power_of_2(17) == 32']","<s><<SYS>>
Provide answers in Python
<</SYS>>

n से अधिक या उसके बराबर 2 की सबसे छोटी शक्ति ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

n से अधिक या उसके बराबर 2 की सबसे छोटी शक्ति ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

>>> def next_smallest(n):
...     return n - 1
..."
92,Benchmark Questions Verification V2.ipynb,168,किसी दी गई सूची में किसी संख्या के घटित होने की संख्या गिनने के लिए एक फ़ंक्शन लिखें।,"def frequency(a,x): 
    count = 0  
    for i in a: 
      if i == x: 
        count += 1

    return count ",[],"['assert frequency([1,2,3], 4) == 0', 'assert frequency([1,2,2,3,3,3,4], 3) == 3', 'assert frequency([0,1,2,3,1,2], 1) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में किसी संख्या के घटित होने की संख्या गिनने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में किसी संख्या के घटित होने की संख्या गिनने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def count_occurrences(list, number):
    return"
93,Benchmark Questions Verification V2.ipynb,170,दो सूचकांकों द्वारा निर्दिष्ट सीमा के भीतर किसी सूची में संख्याओं का योग ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def sum_range_list(list1, m, n):                                                                                                                                                                                                
    sum_range = 0                                                                                                                                                                                                         
    for i in range(m, n+1, 1):                                                                                                                                                                                        
        sum_range += list1[i]                                                                                                                                                                                                  
    return sum_range   ",[],"['assert sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 8, 10) == 29', 'assert sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 5, 7) == 16', 'assert sum_range_list([2,1,5,6,8,3,4,9,10,11,8,12], 7, 10) == 38']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो सूचकांकों द्वारा निर्दिष्ट सीमा के भीतर किसी सूची में संख्याओं का योग ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो सूचकांकों द्वारा निर्दिष्ट सीमा के भीतर किसी सूची में संख्याओं का योग ज्ञात करने के लिए एक फ़ंक्शन लिखें।

सूचकांकों को स्पष्ट "
94,Benchmark Questions Verification V2.ipynb,171,एक नियमित पंचभुज की भुजाओं की लंबाई से उसका परिमाप ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"import math
def perimeter_pentagon(a):
  perimeter=(5*a)
  return perimeter",[],"['assert perimeter_pentagon(5) == 25', 'assert perimeter_pentagon(10) == 50', 'assert perimeter_pentagon(15) == 75']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक नियमित पंचभुज की भुजाओं की लंबाई से उसका परिमाप ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक नियमित पंचभुज की भुजाओं की लंबाई से उसका परिमाप ज्ञात करने के लिए एक फ़ंक्शन लिखें।





















"
95,Benchmark Questions Verification V2.ipynb,172,किसी दिए गए स्ट्रिंग में स्ट्रिंग &#39;std&#39; की घटनाओं की संख्या गिनने के लिए एक फ़ंक्शन लिखें।,"def count_occurance(s):
  count = 0
  for i in range(len(s) - 2):
    if (s[i] == 's' and s[i+1] == 't' and s[i+2] == 'd'):
      count = count + 1
  return count",[],"['assert count_occurance(""letstdlenstdporstd"") == 3', 'assert count_occurance(""truststdsolensporsd"") == 1', 'assert count_occurance(""makestdsostdworthit"") == 2', 'assert count_occurance(""stds"") == 1', 'assert count_occurance("""") == 0']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग में स्ट्रिंग &#39;std&#39; की घटनाओं की संख्या गिनने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग में स्ट्रिंग &#39;std&#39; की घटनाओं की संख्या गिनने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>count_std(""This is a string"")"
96,Benchmark Questions Verification V2.ipynb,222,यह जांचने के लिए एक फ़ंक्शन लिखें कि टुपल में सभी तत्वों का डेटा प्रकार समान है या नहीं।,"def check_type(test_tuple):
  res = True
  for ele in test_tuple:
    if not isinstance(ele, type(test_tuple[0])):
      res = False
      break
  return (res) ",[],"['assert check_type((5, 6, 7, 3, 5, 6) ) == True', 'assert check_type((1, 2, ""4"") ) == False', 'assert check_type((3, 2, 1, 4, 5) ) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि टुपल में सभी तत्वों का डेटा प्रकार समान है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि टुपल में सभी तत्वों का डेटा प्रकार समान है या नहीं।
"
97,Benchmark Questions Verification V2.ipynb,223,"एक फ़ंक्शन लिखें जो एक क्रमबद्ध सरणी, उसकी लंबाई (एन), और एक तत्व लेता है और लौटाता है कि तत्व दिए गए क्रमबद्ध सरणी में बहुमत तत्व है या नहीं। (बहुसंख्यक तत्व वह तत्व है जो n/2 बार से अधिक होता है।)","def is_majority(arr, n, x):
	i = binary_search(arr, 0, n-1, x)
	if i == -1:
		return False
	if ((i + n//2) <= (n -1)) and arr[i + n//2] == x:
		return True
	else:
		return False
def binary_search(arr, low, high, x):
	if high >= low:
		mid = (low + high)//2 
		if (mid == 0 or x > arr[mid-1]) and (arr[mid] == x):
			return mid
		elif x > arr[mid]:
			return binary_search(arr, (mid + 1), high, x)
		else:
			return binary_search(arr, low, (mid -1), x)
	return -1",[],"['assert is_majority([1, 2, 3, 3, 3, 3, 10], 7, 3) == True', 'assert is_majority([1, 1, 2, 4, 4, 4, 6, 6], 8, 4) == False', 'assert is_majority([1, 1, 1, 2, 2], 5, 1) == True', 'assert is_majority([1, 1, 2, 2], 5, 1) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक क्रमबद्ध सरणी, उसकी लंबाई (एन), और एक तत्व लेता है और लौटाता है कि तत्व दिए गए क्रमबद्ध सरणी में बहुमत तत्व है या नहीं। (बहुसंख्यक तत्व वह तत्व है जो n/2 बार से अधिक होता है।)","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक क्रमबद्ध सरणी, उसकी लंबाई (एन), और एक तत्व लेता है और लौटाता है कि तत्व दिए गए क्रमबद्ध सरणी में बहुमत तत्व है या नहीं। (बहुसंख्यक तत्व वह तत्व है जो n/2 बार से अधिक होता है।)
"
98,Benchmark Questions Verification V2.ipynb,224,किसी दिए गए नंबर में सेट बिट्स (मान 1 के साथ बाइनरी अंक) की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।,"def count_Set_Bits(n): 
    count = 0
    while (n): 
        count += n & 1
        n >>= 1
    return count ",[],"['assert count_Set_Bits(2) == 1', 'assert count_Set_Bits(4) == 1', 'assert count_Set_Bits(6) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए नंबर में सेट बिट्स (मान 1 के साथ बाइनरी अंक) की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए नंबर में सेट बिट्स (मान 1 के साथ बाइनरी अंक) की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।
"
99,Benchmark Questions Verification V2.ipynb,226,किसी दिए गए स्ट्रिंग के विषम सूचकांक मान वाले वर्णों को हटाने के लिए एक पायथन फ़ंक्शन लिखें।,"def odd_values_string(str):
  result = """" 
  for i in range(len(str)):
    if i % 2 == 0:
      result = result + str[i]
  return result",[],"[""assert odd_values_string('abcdef') == 'ace'"", ""assert odd_values_string('python') == 'pto'"", ""assert odd_values_string('data') == 'dt'"", ""assert odd_values_string('lambs') == 'lms'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग के विषम सूचकांक मान वाले वर्णों को हटाने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग के विषम सूचकांक मान वाले वर्णों को हटाने के लिए एक पायथन फ़ंक्शन लिखें।
"
100,Benchmark Questions Verification V2.ipynb,227,न्यूनतम तीन संख्याएँ ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def min_of_three(a,b,c): 
      if (a <= b) and (a <= c): 
        smallest = a 
      elif (b <= a) and (b <= c): 
        smallest = b 
      else: 
        smallest = c 
      return smallest ",[],"['assert min_of_three(10,20,0)==0', 'assert min_of_three(19,15,18)==15', 'assert min_of_three(-10,-20,-30)==-30']","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूनतम तीन संख्याएँ ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूनतम तीन संख्याएँ ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
101,Benchmark Questions Verification V2.ipynb,228,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि सभी बिट्स दी गई सीमा में अनसेट हैं या नहीं।,"def all_Bits_Set_In_The_Given_Range(n,l,r):  
    num = (((1 << r) - 1) ^ ((1 << (l - 1)) - 1)) 
    new_num = n & num
    if (new_num == 0): 
        return True
    return False",[],"['assert all_Bits_Set_In_The_Given_Range(4,1,2) == True', 'assert all_Bits_Set_In_The_Given_Range(17,2,4) == True', 'assert all_Bits_Set_In_The_Given_Range(39,4,6) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि सभी बिट्स दी गई सीमा में अनसेट हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि सभी बिट्स दी गई सीमा में अनसेट हैं या नहीं।
"
102,Benchmark Questions Verification V2.ipynb,229,"एक फ़ंक्शन लिखें जो एक सरणी और एक पूर्णांक n लेता है, और दिए गए सरणी के पहले n तत्वों को फिर से व्यवस्थित करता है ताकि सभी नकारात्मक तत्व सकारात्मक तत्वों से पहले दिखाई दें, और जहां नकारात्मक और सकारात्मक तत्वों के बीच सापेक्ष क्रम संरक्षित है।","def re_arrange_array(arr, n):
  j=0
  for i in range(0, n):
    if (arr[i] < 0):
      temp = arr[i]
      arr[i] = arr[j]
      arr[j] = temp
      j = j + 1
  return arr",[],"['assert re_arrange_array([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9) == [-1, -3, -7, 4, 5, 6, 2, 8, 9]', 'assert re_arrange_array([12, -14, -26, 13, 15], 5) == [-14, -26, 12, 13, 15]', 'assert re_arrange_array([10, 24, 36, -42, -39, -78, 85], 7) == [-42, -39, -78, 10, 24, 36, 85]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सरणी और एक पूर्णांक n लेता है, और दिए गए सरणी के पहले n तत्वों को फिर से व्यवस्थित करता है ताकि सभी नकारात्मक तत्व सकारात्मक तत्वों से पहले दिखाई दें, और जहां नकारात्मक और सकारात्मक तत्वों के बीच सापेक्ष क्रम संरक्षित है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सरणी और एक पूर्णांक n लेता है, और दिए गए सरणी के पहले n तत्वों को फिर से व्यवस्थित करता है ताकि सभी नकारात्मक तत्व सकारात्मक तत्वों से पहले दिखाई दें, और जहां नकारात्मक और सकारात्मक तत्वों के बीच सापेक्ष क्रम संरक्षित है।
"
103,Benchmark Questions Verification V2.ipynb,230,"एक फ़ंक्शन लिखें जो एक स्ट्रिंग और कैरेक्टर लेता है, स्ट्रिंग में रिक्त स्थानों को कैरेक्टर से बदल देता है, और स्ट्रिंग लौटाता है।","def replace_blank(str1,char):
 str2 = str1.replace(' ', char)
 return str2",[],"['assert replace_blank(""hello people"",\'@\')==(""hello@people"")', 'assert replace_blank(""python program language"",\'$\')==(""python$program$language"")', 'assert replace_blank(""blank space"",""-"")==(""blank-space"")']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक स्ट्रिंग और कैरेक्टर लेता है, स्ट्रिंग में रिक्त स्थानों को कैरेक्टर से बदल देता है, और स्ट्रिंग लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक स्ट्रिंग और कैरेक्टर लेता है, स्ट्रिंग में रिक्त स्थानों को कैरेक्टर से बदल देता है, और स्ट्रिंग लौटाता है।
"
104,Benchmark Questions Verification V2.ipynb,232,एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक n लेता है और सूची से n सबसे बड़े आइटम वाली एक सूची लौटाता है।,"import heapq
def larg_nnum(list1,n):
 largest=heapq.nlargest(n,list1)
 return largest",[],"['assert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],2))==set([100,90])', 'assert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],5))==set([100,90,80,70,60])', 'assert set(larg_nnum([10, 20, 50, 70, 90, 20, 50, 40, 60, 80, 100],3))==set([100,90,80])']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक n लेता है और सूची से n सबसे बड़े आइटम वाली एक सूची लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक n लेता है और सूची से n सबसे बड़े आइटम वाली एक सूची लौटाता है।
"
105,Benchmark Questions Verification V2.ipynb,233,बेलन का पार्श्व सतह क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def lateralsuface_cylinder(r,h):
  lateralsurface= 2*3.1415*r*h
  return lateralsurface",['import math'],"['assert math.isclose(lateralsuface_cylinder(10,5), 314.15000000000003, rel_tol=0.001)', 'assert math.isclose(lateralsuface_cylinder(4,5), 125.66000000000001, rel_tol=0.001)', 'assert math.isclose(lateralsuface_cylinder(4,10), 251.32000000000002, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

बेलन का पार्श्व सतह क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

बेलन का पार्श्व सतह क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
106,Benchmark Questions Verification V2.ipynb,234,किसी घन की भुजा की लंबाई को देखते हुए उसका आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def volume_cube(l):
  volume = l * l * l
  return volume",[],"['assert volume_cube(3)==27', 'assert volume_cube(2)==8', 'assert volume_cube(5)==125']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी घन की भुजा की लंबाई को देखते हुए उसका आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी घन की भुजा की लंबाई को देखते हुए उसका आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
107,Benchmark Questions Verification V2.ipynb,235,किसी दिए गए नंबर के सभी सम बिट सेट करने के लिए एक पायथन फ़ंक्शन लिखें।,"def even_bit_set_number(n): 
    count = 0;res = 0;temp = n 
    while(temp > 0): 
        if (count % 2 == 1): 
            res |= (1 << count)
        count+=1
        temp >>= 1
    return (n | res) ",[],"['assert even_bit_set_number(10) == 10', 'assert even_bit_set_number(20) == 30', 'assert even_bit_set_number(30) == 30']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए नंबर के सभी सम बिट सेट करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए नंबर के सभी सम बिट सेट करने के लिए एक पायथन फ़ंक्शन लिखें।
"
108,Benchmark Questions Verification V2.ipynb,237,एक फ़ंक्शन लिखें जो टुपल्स की एक सूची लेता है और प्रत्येक अद्वितीय टुपल को सूची में आने की संख्या के अनुसार मैप करते हुए एक शब्दकोश लौटाता है।,"from collections import Counter 
def check_occurences(test_list):
  res = dict(Counter(tuple(ele) for ele in map(sorted, test_list)))
  return  (res) ",[],"['assert check_occurences([(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)] ) == {(1, 3): 2, (2, 5): 2, (3, 6): 1}', 'assert check_occurences([(4, 2), (2, 4), (3, 6), (6, 3), (7, 4)] ) == {(2, 4): 2, (3, 6): 2, (4, 7): 1}', 'assert check_occurences([(13, 2), (11, 23), (12, 25), (25, 12), (16, 23)] ) == {(2, 13): 1, (11, 23): 1, (12, 25): 2, (16, 23): 1}']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो टुपल्स की एक सूची लेता है और प्रत्येक अद्वितीय टुपल को सूची में आने की संख्या के अनुसार मैप करते हुए एक शब्दकोश लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो टुपल्स की एक सूची लेता है और प्रत्येक अद्वितीय टुपल को सूची में आने की संख्या के अनुसार मैप करते हुए एक शब्दकोश लौटाता है।
"
109,Benchmark Questions Verification V2.ipynb,238,किसी दिए गए स्ट्रिंग के गैर-रिक्त सबस्ट्रिंग की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।,"def number_of_substrings(str): 
	str_len = len(str); 
	return int(str_len * (str_len + 1) / 2); ",[],"['assert number_of_substrings(""abc"") == 6', 'assert number_of_substrings(""abcd"") == 10', 'assert number_of_substrings(""abcde"") == 15']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग के गैर-रिक्त सबस्ट्रिंग की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग के गैर-रिक्त सबस्ट्रिंग की संख्या गिनने के लिए एक पायथन फ़ंक्शन लिखें।
"
110,Benchmark Questions Verification V2.ipynb,239,"एक फ़ंक्शन लिखें जो धनात्मक पूर्णांक m और n लेता है और लंबाई n के संभावित अनुक्रमों की संख्या ज्ञात करता है, जैसे कि प्रत्येक तत्व एक धनात्मक पूर्णांक है और पिछले तत्व के दोगुने से अधिक या उसके बराबर है लेकिन m से कम या उसके बराबर है।","def get_total_number_of_sequences(m,n): 
	T=[[0 for i in range(n+1)] for i in range(m+1)] 
	for i in range(m+1): 
		for j in range(n+1): 
			if i==0 or j==0: 
				T[i][j]=0
			elif i<j: 
				T[i][j]=0
			elif j==1: 
				T[i][j]=i 
			else: 
				T[i][j]=T[i-1][j]+T[i//2][j-1] 
	return T[m][n]",[],"['assert get_total_number_of_sequences(10, 4) == 4', 'assert get_total_number_of_sequences(5, 2) == 6', 'assert get_total_number_of_sequences(16, 3) == 84']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो धनात्मक पूर्णांक m और n लेता है और लंबाई n के संभावित अनुक्रमों की संख्या ज्ञात करता है, जैसे कि प्रत्येक तत्व एक धनात्मक पूर्णांक है और पिछले तत्व के दोगुने से अधिक या उसके बराबर है लेकिन m से कम या उसके बराबर है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो धनात्मक पूर्णांक m और n लेता है और लंबाई n के संभावित अनुक्रमों की संख्या ज्ञात करता है, जैसे कि प्रत्येक तत्व एक धनात्मक पूर्णांक है और पिछले तत्व के दोगुने से अधिक या उसके बराबर है लेकिन m से कम या उसके बराबर है।
"
111,Benchmark Questions Verification V2.ipynb,240,एक फ़ंक्शन लिखें जो दो सूचियाँ लेता है और पहली सूची के अंतिम तत्व को दूसरी सूची के तत्वों से बदल देता है।,"def replace_list(list1,list2):
 list1[-1:] = list2
 replace_list=list1
 return replace_list
",[],"['assert replace_list([1, 3, 5, 7, 9, 10],[2, 4, 6, 8])==[1, 3, 5, 7, 9, 2, 4, 6, 8]', 'assert replace_list([1,2,3,4,5],[5,6,7,8])==[1,2,3,4,5,6,7,8]', 'assert replace_list([""red"",""blue"",""green""],[""yellow""])==[""red"",""blue"",""yellow""]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो सूचियाँ लेता है और पहली सूची के अंतिम तत्व को दूसरी सूची के तत्वों से बदल देता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो सूचियाँ लेता है और पहली सूची के अंतिम तत्व को दूसरी सूची के तत्वों से बदल देता है।
"
112,Benchmark Questions Verification V2.ipynb,242,किसी स्ट्रिंग में वर्णों की कुल संख्या गिनने के लिए एक फ़ंक्शन लिखें।,"def count_charac(str1):
 total = 0
 for i in str1:
    total = total + 1
 return total",[],"['assert count_charac(""python programming"")==18', 'assert count_charac(""language"")==8', 'assert count_charac(""words"")==5']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी स्ट्रिंग में वर्णों की कुल संख्या गिनने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी स्ट्रिंग में वर्णों की कुल संख्या गिनने के लिए एक फ़ंक्शन लिखें।
"
113,Benchmark Questions Verification V2.ipynb,244,किसी दी गई संख्या से बड़ा अगला पूर्ण वर्ग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"import math  
def next_Perfect_Square(N): 
    nextN = math.floor(math.sqrt(N)) + 1
    return nextN * nextN ",[],"['assert next_Perfect_Square(35) == 36', 'assert next_Perfect_Square(6) == 9', 'assert next_Perfect_Square(9) == 16']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या से बड़ा अगला पूर्ण वर्ग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या से बड़ा अगला पूर्ण वर्ग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।
"
114,Benchmark Questions Verification V2.ipynb,245,"एक फ़ंक्शन लिखें जो एक सरणी लेता है और दिए गए सरणी के लिए बिटोनिक अनुवर्ती का अधिकतम योग पाता है, जहां एक अनुक्रम बिटोनिक होता है यदि यह पहले बढ़ रहा है और फिर घट रहा है।","def max_sum(arr): 
	MSIBS = arr[:] 
	for i in range(len(arr)): 
		for j in range(0, i): 
			if arr[i] > arr[j] and MSIBS[i] < MSIBS[j] + arr[i]: 
				MSIBS[i] = MSIBS[j] + arr[i] 
	MSDBS = arr[:] 
	for i in range(1, len(arr) + 1): 
		for j in range(1, i): 
			if arr[-i] > arr[-j] and MSDBS[-i] < MSDBS[-j] + arr[-i]: 
				MSDBS[-i] = MSDBS[-j] + arr[-i] 
	max_sum = float(""-Inf"") 
	for i, j, k in zip(MSIBS, MSDBS, arr): 
		max_sum = max(max_sum, i + j - k) 
	return max_sum",[],"['assert max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194', 'assert max_sum([80, 60, 30, 40, 20, 10]) == 210', 'assert max_sum([2, 3 ,14, 16, 21, 23, 29, 30]) == 138']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सरणी लेता है और दिए गए सरणी के लिए बिटोनिक अनुवर्ती का अधिकतम योग पाता है, जहां एक अनुक्रम बिटोनिक होता है यदि यह पहले बढ़ रहा है और फिर घट रहा है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सरणी लेता है और दिए गए सरणी के लिए बिटोनिक अनुवर्ती का अधिकतम योग पाता है, जहां एक अनुक्रम बिटोनिक होता है यदि यह पहले बढ़ रहा है और फिर घट रहा है।
"
115,Benchmark Questions Verification V2.ipynb,246,बेबीलोनियन विधि का उपयोग करके वर्गमूल की गणना के लिए एक फ़ंक्शन लिखें।,"def babylonian_squareroot(number):
    if(number == 0):
        return 0;
    g = number/2.0;
    g2 = g + 1;
    while(g != g2):
        n = number/ g;
        g2 = g;
        g = (g + n)/2;
    return g;",['import math'],"['assert math.isclose(babylonian_squareroot(10), 3.162277660168379, rel_tol=0.001)', 'assert math.isclose(babylonian_squareroot(2), 1.414213562373095, rel_tol=0.001)', 'assert math.isclose(babylonian_squareroot(9), 3.0, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

बेबीलोनियन विधि का उपयोग करके वर्गमूल की गणना के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

बेबीलोनियन विधि का उपयोग करके वर्गमूल की गणना के लिए एक फ़ंक्शन लिखें।
"
116,Benchmark Questions Verification V2.ipynb,247,दी गई स्ट्रिंग में सबसे लंबे पैलिन्ड्रोमिक अनुवर्ती की लंबाई ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def lps(str): 
	n = len(str) 
	L = [[0 for x in range(n)] for x in range(n)] 
	for i in range(n): 
		L[i][i] = 1
	for cl in range(2, n+1): 
		for i in range(n-cl+1): 
			j = i+cl-1
			if str[i] == str[j] and cl == 2: 
				L[i][j] = 2
			elif str[i] == str[j]: 
				L[i][j] = L[i+1][j-1] + 2
			else: 
				L[i][j] = max(L[i][j-1], L[i+1][j]); 
	return L[0][n-1]",[],"['assert lps(""TENS FOR TENS"") == 5', 'assert lps(""CARDIO FOR CARDS"") == 7', 'assert lps(""PART OF THE JOURNEY IS PART"") == 9']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई स्ट्रिंग में सबसे लंबे पैलिन्ड्रोमिक अनुवर्ती की लंबाई ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई स्ट्रिंग में सबसे लंबे पैलिन्ड्रोमिक अनुवर्ती की लंबाई ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
117,Benchmark Questions Verification V2.ipynb,248,एक फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और n-1 के हार्मोनिक योग की गणना करता है।,"def harmonic_sum(n):
  if n < 2:
    return 1
  else:
    return 1 / n + (harmonic_sum(n - 1)) ",['import math'],"['assert math.isclose(harmonic_sum(7), 2.5928571428571425, rel_tol=0.001)', 'assert math.isclose(harmonic_sum(4), 2.083333333333333, rel_tol=0.001)', 'assert math.isclose(harmonic_sum(19), 3.547739657143682, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और n-1 के हार्मोनिक योग की गणना करता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और n-1 के हार्मोनिक योग की गणना करता है।
"
118,Benchmark Questions Verification V2.ipynb,249,दो सरणियों के प्रतिच्छेदन को खोजने के लिए एक फ़ंक्शन लिखें।,"def intersection_array(array_nums1,array_nums2):
 result = list(filter(lambda x: x in array_nums1, array_nums2)) 
 return result",[],"['assert intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[1, 2, 4, 8, 9])==[1, 2, 8, 9]', 'assert intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[3,5,7,9])==[3,5,7,9]', 'assert intersection_array([1, 2, 3, 5, 7, 8, 9, 10],[10,20,30,40])==[10]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो सरणियों के प्रतिच्छेदन को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो सरणियों के प्रतिच्छेदन को खोजने के लिए एक फ़ंक्शन लिखें।
"
119,Benchmark Questions Verification V2.ipynb,250,एक पायथन फ़ंक्शन लिखें जो एक टुपल और एक तत्व लेता है और टुपल में तत्व की घटनाओं को गिनता है।,"def count_X(tup, x): 
    count = 0
    for ele in tup: 
        if (ele == x): 
            count = count + 1
    return count ",[],"['assert count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),4) == 0', 'assert count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),10) == 3', 'assert count_X((10, 8, 5, 2, 10, 15, 10, 8, 5, 8, 8, 2),8) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक टुपल और एक तत्व लेता है और टुपल में तत्व की घटनाओं को गिनता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक टुपल और एक तत्व लेता है और टुपल में तत्व की घटनाओं को गिनता है।
"
120,Benchmark Questions Verification V2.ipynb,251,"एक फ़ंक्शन लिखें जो एक सूची और एक तत्व लेता है और सूची में प्रत्येक तत्व से पहले तत्व सम्मिलित करता है, और परिणामी सूची लौटाता है।","def insert_element(list,element):
 list = [v for elt in list for v in (element, elt)]
 return list",[],"[""assert insert_element(['Red', 'Green', 'Black'] ,'c')==['c', 'Red', 'c', 'Green', 'c', 'Black']"", ""assert insert_element(['python', 'java'] ,'program')==['program', 'python', 'program', 'java']"", ""assert insert_element(['happy', 'sad'] ,'laugh')==['laugh', 'happy', 'laugh', 'sad']""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक तत्व लेता है और सूची में प्रत्येक तत्व से पहले तत्व सम्मिलित करता है, और परिणामी सूची लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक तत्व लेता है और सूची में प्रत्येक तत्व से पहले तत्व सम्मिलित करता है, और परिणामी सूची लौटाता है।
"
121,Benchmark Questions Verification V2.ipynb,252,जटिल संख्याओं को ध्रुवीय निर्देशांक में बदलने के लिए एक पायथन फ़ंक्शन लिखें।,"import cmath  
def convert(numbers):    
  num = cmath.polar(numbers)  
  return (num) ",[],"['assert convert(1) == (1.0, 0.0)', 'assert convert(4) == (4.0,0.0)', 'assert convert(5) == (5.0,0.0)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

जटिल संख्याओं को ध्रुवीय निर्देशांक में बदलने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

जटिल संख्याओं को ध्रुवीय निर्देशांक में बदलने के लिए एक पायथन फ़ंक्शन लिखें।
"
122,Benchmark Questions Verification V2.ipynb,253,एक पायथन फ़ंक्शन लिखें जो किसी दी गई सूची में पूर्णांक तत्वों की संख्या लौटाता है।,"def count_integer(list1):
    ctr = 0
    for i in list1:
        if isinstance(i, int):
            ctr = ctr + 1
    return ctr",[],"[""assert count_integer([1,2,'abc',1.2]) == 2"", 'assert count_integer([1,2,3]) == 3', 'assert count_integer([1,1.2,4,5.1]) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो किसी दी गई सूची में पूर्णांक तत्वों की संख्या लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो किसी दी गई सूची में पूर्णांक तत्वों की संख्या लौटाता है।
"
123,Benchmark Questions Verification V2.ipynb,255,"एक फ़ंक्शन लिखें जो एक सूची और लंबाई n लेता है, और सूची के तत्वों के सभी संयोजन (दोहराव के साथ) उत्पन्न करता है और प्रत्येक संयोजन के लिए एक टपल के साथ एक सूची लौटाता है।","from itertools import combinations_with_replacement 
def combinations_colors(l, n):
    return list(combinations_with_replacement(l,n))
",[],"['assert combinations_colors( [""Red"",""Green"",""Blue""],1)==[(\'Red\',), (\'Green\',), (\'Blue\',)]', 'assert combinations_colors( [""Red"",""Green"",""Blue""],2)==[(\'Red\', \'Red\'), (\'Red\', \'Green\'), (\'Red\', \'Blue\'), (\'Green\', \'Green\'), (\'Green\', \'Blue\'), (\'Blue\', \'Blue\')]', 'assert combinations_colors( [""Red"",""Green"",""Blue""],3)==[(\'Red\', \'Red\', \'Red\'), (\'Red\', \'Red\', \'Green\'), (\'Red\', \'Red\', \'Blue\'), (\'Red\', \'Green\', \'Green\'), (\'Red\', \'Green\', \'Blue\'), (\'Red\', \'Blue\', \'Blue\'), (\'Green\', \'Green\', \'Green\'), (\'Green\', \'Green\', \'Blue\'), (\'Green\', \'Blue\', \'Blue\'), (\'Blue\', \'Blue\', \'Blue\')]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और लंबाई n लेता है, और सूची के तत्वों के सभी संयोजन (दोहराव के साथ) उत्पन्न करता है और प्रत्येक संयोजन के लिए एक टपल के साथ एक सूची लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और लंबाई n लेता है, और सूची के तत्वों के सभी संयोजन (दोहराव के साथ) उत्पन्न करता है और प्रत्येक संयोजन के लिए एक टपल के साथ एक सूची लौटाता है।
"
124,Benchmark Questions Verification V2.ipynb,256,एक पायथन फ़ंक्शन लिखें जो एक गैर-नकारात्मक संख्या लेता है और दी गई गैर-नकारात्मक संख्या से कम अभाज्य संख्याओं की संख्या लौटाता है।,"def count_Primes_nums(n):
    ctr = 0
    for num in range(n):
        if num <= 1:
            continue
        for i in range(2,num):
            if (num % i) == 0:
                break
        else:
            ctr += 1
    return ctr",[],"['assert count_Primes_nums(5) == 2', 'assert count_Primes_nums(10) == 4', 'assert count_Primes_nums(100) == 25']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक गैर-नकारात्मक संख्या लेता है और दी गई गैर-नकारात्मक संख्या से कम अभाज्य संख्याओं की संख्या लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक गैर-नकारात्मक संख्या लेता है और दी गई गैर-नकारात्मक संख्या से कम अभाज्य संख्याओं की संख्या लौटाता है।
"
125,Benchmark Questions Verification V2.ipynb,257,एक फ़ंक्शन लिखें जो दो नंबर लेता है और दूसरे नंबर और फिर पहले नंबर के साथ एक टुपल लौटाता है।,"def swap_numbers(a,b):
 temp = a
 a = b
 b = temp
 return (a,b)",[],"['assert swap_numbers(10,20)==(20,10)', 'assert swap_numbers(15,17)==(17,15)', 'assert swap_numbers(100,200)==(200,100)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो नंबर लेता है और दूसरे नंबर और फिर पहले नंबर के साथ एक टुपल लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो नंबर लेता है और दूसरे नंबर और फिर पहले नंबर के साथ एक टुपल लौटाता है।
"
126,Benchmark Questions Verification V2.ipynb,259,दिए गए दो टुपल्स को अधिकतम करने के लिए एक फ़ंक्शन लिखें।,"def maximize_elements(test_tup1, test_tup2):
  res = tuple(tuple(max(a, b) for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ",[],"['assert maximize_elements(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3))) == ((6, 7), (4, 9), (2, 9), (7, 10))', 'assert maximize_elements(((2, 4), (5, 6), (3, 10), (2, 11)), ((7, 8), (4, 10), (2, 2), (8, 4))) == ((7, 8), (5, 10), (3, 10), (8, 11))', 'assert maximize_elements(((3, 5), (6, 7), (4, 11), (3, 12)), ((8, 9), (5, 11), (3, 3), (9, 5))) == ((8, 9), (6, 11), (4, 11), (9, 12))']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो टुपल्स को अधिकतम करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो टुपल्स को अधिकतम करने के लिए एक फ़ंक्शन लिखें।
"
127,Benchmark Questions Verification V2.ipynb,260,nवाँ न्यूमैन-शैंक्स-विलियम्स अभाज्य संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def newman_prime(n): 
	if n == 0 or n == 1: 
		return 1
	return 2 * newman_prime(n - 1) + newman_prime(n - 2)",[],"['assert newman_prime(3) == 7', 'assert newman_prime(4) == 17', 'assert newman_prime(5) == 41']","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवाँ न्यूमैन-शैंक्स-विलियम्स अभाज्य संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवाँ न्यूमैन-शैंक्स-विलियम्स अभाज्य संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
128,Benchmark Questions Verification V2.ipynb,261,एक फ़ंक्शन लिखें जो दो टुपल्स लेता है और दिए गए टुपल्स में तत्व-वार गणितीय विभाजन ऑपरेशन करता है।,"def division_elements(test_tup1, test_tup2):
  res = tuple(ele1 // ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",[],"['assert division_elements((10, 4, 6, 9),(5, 2, 3, 3)) == (2, 2, 2, 3)', 'assert division_elements((12, 6, 8, 16),(6, 3, 4, 4)) == (2, 2, 2, 4)', 'assert division_elements((20, 14, 36, 18),(5, 7, 6, 9)) == (4, 2, 6, 2)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो टुपल्स लेता है और दिए गए टुपल्स में तत्व-वार गणितीय विभाजन ऑपरेशन करता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो टुपल्स लेता है और दिए गए टुपल्स में तत्व-वार गणितीय विभाजन ऑपरेशन करता है।
"
129,Benchmark Questions Verification V2.ipynb,262,"एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक L लेता है और दी गई सूची को दो भागों में विभाजित करता है जहां सूची के पहले भाग की लंबाई L है, और परिणामी सूचियों को एक टुपल में लौटाता है।","def split_two_parts(list1, L):
    return list1[:L], list1[L:]",[],"['assert split_two_parts([1,1,2,3,4,4,5,1],3)==([1, 1, 2], [3, 4, 4, 5, 1])', ""assert split_two_parts(['a', 'b', 'c', 'd'],2)==(['a', 'b'], ['c', 'd'])"", ""assert split_two_parts(['p', 'y', 't', 'h', 'o', 'n'],4)==(['p', 'y', 't', 'h'], ['o', 'n'])""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक L लेता है और दी गई सूची को दो भागों में विभाजित करता है जहां सूची के पहले भाग की लंबाई L है, और परिणामी सूचियों को एक टुपल में लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक L लेता है और दी गई सूची को दो भागों में विभाजित करता है जहां सूची के पहले भाग की लंबाई L है, और परिणामी सूचियों को एक टुपल में लौटाता है।
"
130,Benchmark Questions Verification V2.ipynb,264,कुत्ते के वर्षों में कुत्ते की उम्र की गणना करने के लिए एक फ़ंक्शन लिखें।,"def dog_age(h_age):
 if h_age < 0:
 	exit()
 elif h_age <= 2:
	 d_age = h_age * 10.5
 else:
	 d_age = 21 + (h_age - 2)*4
 return d_age",[],"['assert dog_age(12)==61', 'assert dog_age(15)==73', 'assert dog_age(24)==109']","<s><<SYS>>
Provide answers in Python
<</SYS>>

कुत्ते के वर्षों में कुत्ते की उम्र की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

कुत्ते के वर्षों में कुत्ते की उम्र की गणना करने के लिए एक फ़ंक्शन लिखें।
"
131,Benchmark Questions Verification V2.ipynb,265,"एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक n लेता है और प्रत्येक nवें तत्व के लिए एक सूची को विभाजित करता है, जिसके परिणामस्वरूप सूचियों की एक सूची वापस आती है।","def list_split(S, step):
    return [S[i::step] for i in range(step)]",[],"[""assert list_split(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n'],3)==[['a', 'd', 'g', 'j', 'm'], ['b', 'e', 'h', 'k', 'n'], ['c', 'f', 'i', 'l']]"", 'assert list_split([1,2,3,4,5,6,7,8,9,10,11,12,13,14],3)==[[1,4,7,10,13], [2,5,8,11,14], [3,6,9,12]]', ""assert list_split(['python','java','C','C++','DBMS','SQL'],2)==[['python', 'C', 'DBMS'], ['java', 'C++', 'SQL']]""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक n लेता है और प्रत्येक nवें तत्व के लिए एक सूची को विभाजित करता है, जिसके परिणामस्वरूप सूचियों की एक सूची वापस आती है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और एक पूर्णांक n लेता है और प्रत्येक nवें तत्व के लिए एक सूची को विभाजित करता है, जिसके परिणामस्वरूप सूचियों की एक सूची वापस आती है।
"
132,Benchmark Questions Verification V2.ipynb,266,किसी घन की भुजा की लंबाई को देखते हुए उसका पार्श्व पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def lateralsurface_cube(l):
  LSA = 4 * (l * l)
  return LSA",[],"['assert lateralsurface_cube(5)==100', 'assert lateralsurface_cube(9)==324', 'assert lateralsurface_cube(10)==400']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी घन की भुजा की लंबाई को देखते हुए उसका पार्श्व पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी घन की भुजा की लंबाई को देखते हुए उसका पार्श्व पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
133,Benchmark Questions Verification V2.ipynb,267,एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n विषम प्राकृतिक संख्याओं के वर्गों का योग लौटाता है।,"def square_Sum(n):  
    return int(n*(4*n*n-1)/3) ",[],"['assert square_Sum(2) == 10', 'assert square_Sum(3) == 35', 'assert square_Sum(4) == 84']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n विषम प्राकृतिक संख्याओं के वर्गों का योग लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n विषम प्राकृतिक संख्याओं के वर्गों का योग लौटाता है।
"
134,Benchmark Questions Verification V2.ipynb,268,n&#39;वें तारा संख्या को खोजने के लिए एक फ़ंक्शन लिखें।,"def find_star_num(n): 
	return (6 * n * (n - 1) + 1) ",[],"['assert find_star_num(3) == 37', 'assert find_star_num(4) == 73', 'assert find_star_num(5) == 121']","<s><<SYS>>
Provide answers in Python
<</SYS>>

n&#39;वें तारा संख्या को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

n&#39;वें तारा संख्या को खोजने के लिए एक फ़ंक्शन लिखें।
"
135,Benchmark Questions Verification V2.ipynb,269,किसी कैरेक्टर का एएससीआईआई मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def ascii_value(k):
  ch=k
  return ord(ch)",[],"[""assert ascii_value('A')==65"", ""assert ascii_value('R')==82"", ""assert ascii_value('S')==83""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी कैरेक्टर का एएससीआईआई मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी कैरेक्टर का एएससीआईआई मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
136,Benchmark Questions Verification V2.ipynb,270,किसी सूची के सम स्थानों पर सम संख्याओं का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def sum_even_and_even_index(arr):  
    i = 0
    sum = 0
    for i in range(0, len(arr),2): 
        if (arr[i] % 2 == 0) : 
            sum += arr[i]  
    return sum",[],"['assert sum_even_and_even_index([5, 6, 12, 1, 18, 8]) == 30', 'assert sum_even_and_even_index([3, 20, 17, 9, 2, 10, 18, 13, 6, 18]) == 26', 'assert sum_even_and_even_index([5, 6, 12, 1]) == 12']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची के सम स्थानों पर सम संख्याओं का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची के सम स्थानों पर सम संख्याओं का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।
"
137,Benchmark Questions Verification V2.ipynb,271,एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n सम प्राकृतिक संख्याओं का योग ढूंढता है जिन्हें पांचवीं शक्ति तक बढ़ाया जाता है।,"def even_Power_Sum(n): 
    sum = 0; 
    for i in range(1,n+1): 
        j = 2*i; 
        sum = sum + (j*j*j*j*j); 
    return sum; ",[],"['assert even_Power_Sum(2) == 1056', 'assert even_Power_Sum(3) == 8832', 'assert even_Power_Sum(1) == 32']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n सम प्राकृतिक संख्याओं का योग ढूंढता है जिन्हें पांचवीं शक्ति तक बढ़ाया जाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n सम प्राकृतिक संख्याओं का योग ढूंढता है जिन्हें पांचवीं शक्ति तक बढ़ाया जाता है।
"
138,Benchmark Questions Verification V2.ipynb,272,एक फ़ंक्शन लिखें जो टुपल्स की एक सूची लेता है और प्रत्येक टुपल के पीछे के तत्व वाली एक सूची लौटाता है।,"def rear_extract(test_list):
  res = [lis[-1] for lis in test_list]
  return (res) ",[],"[""assert rear_extract([(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]) == [21, 20, 19]"", ""assert rear_extract([(1, 'Sai', 36), (2, 'Ayesha', 25), (3, 'Salman', 45)]) == [36, 25, 45]"", ""assert rear_extract([(1, 'Sudeep', 14), (2, 'Vandana', 36), (3, 'Dawood', 56)]) == [14, 36, 56]""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो टुपल्स की एक सूची लेता है और प्रत्येक टुपल के पीछे के तत्व वाली एक सूची लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो टुपल्स की एक सूची लेता है और प्रत्येक टुपल के पीछे के तत्व वाली एक सूची लौटाता है।
"
139,Benchmark Questions Verification V2.ipynb,273,एक फ़ंक्शन लिखें जो दो टुपल्स लेता है और उसी इंडेक्स के साथ पहले टुपल के तत्वों को दूसरे टुपल के तत्वों से घटाता है।,"def substract_elements(test_tup1, test_tup2):
  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2))
  return (res) ",[],"['assert substract_elements((10, 4, 5), (2, 5, 18)) == (8, -1, -13)', 'assert substract_elements((11, 2, 3), (24, 45 ,16)) == (-13, -43, -13)', 'assert substract_elements((7, 18, 9), (10, 11, 12)) == (-3, 7, -3)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो टुपल्स लेता है और उसी इंडेक्स के साथ पहले टुपल के तत्वों को दूसरे टुपल के तत्वों से घटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो टुपल्स लेता है और उसी इंडेक्स के साथ पहले टुपल के तत्वों को दूसरे टुपल के तत्वों से घटाता है।
"
140,Benchmark Questions Verification V2.ipynb,274,एक पायथन फ़ंक्शन लिखें जो एक सकारात्मक पूर्णांक n लेता है और सम सूचकांक द्विपद गुणांक का योग ढूंढता है।,"import math  
def even_binomial_Coeff_Sum( n): 
    return (1 << (n - 1)) ",[],"['assert even_binomial_Coeff_Sum(4) == 8', 'assert even_binomial_Coeff_Sum(6) == 32', 'assert even_binomial_Coeff_Sum(2) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक सकारात्मक पूर्णांक n लेता है और सम सूचकांक द्विपद गुणांक का योग ढूंढता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक सकारात्मक पूर्णांक n लेता है और सम सूचकांक द्विपद गुणांक का योग ढूंढता है।
"
141,Benchmark Questions Verification V2.ipynb,276,एक फ़ंक्शन लिखें जो सिलेंडर की त्रिज्या और ऊंचाई लेता है और आयतन लौटाता है।,"def volume_cylinder(r,h):
  volume=3.1415*r*r*h
  return volume",['import math'],"['assert math.isclose(volume_cylinder(10,5), 1570.7500000000002, rel_tol=0.001)', 'assert math.isclose(volume_cylinder(4,5), 251.32000000000002, rel_tol=0.001)', 'assert math.isclose(volume_cylinder(4,10), 502.64000000000004, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो सिलेंडर की त्रिज्या और ऊंचाई लेता है और आयतन लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो सिलेंडर की त्रिज्या और ऊंचाई लेता है और आयतन लौटाता है।
"
142,Benchmark Questions Verification V2.ipynb,277,एक फ़ंक्शन लिखें जो एक शब्दकोश और पूर्णांक n लेता है और शब्दकोश को फ़िल्टर करता है जिसमें केवल n से अधिक या उसके बराबर मान वाली प्रविष्टियाँ शामिल होती हैं।,"def dict_filter(dict,n):
 result = {key:value for (key, value) in dict.items() if value >=n}
 return result",[],"[""assert dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},170)=={'Cierra Vega': 175, 'Alden Cantrell': 180, 'Pierre Cox': 190}"", ""assert dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},180)=={ 'Alden Cantrell': 180, 'Pierre Cox': 190}"", ""assert dict_filter({'Cierra Vega': 175, 'Alden Cantrell': 180, 'Kierra Gentry': 165, 'Pierre Cox': 190},190)=={ 'Pierre Cox': 190}""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक शब्दकोश और पूर्णांक n लेता है और शब्दकोश को फ़िल्टर करता है जिसमें केवल n से अधिक या उसके बराबर मान वाली प्रविष्टियाँ शामिल होती हैं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक शब्दकोश और पूर्णांक n लेता है और शब्दकोश को फ़िल्टर करता है जिसमें केवल n से अधिक या उसके बराबर मान वाली प्रविष्टियाँ शामिल होती हैं।
"
143,Benchmark Questions Verification V2.ipynb,278,दिए गए टुपल में टुपल तत्व से पहले आने वाले तत्वों की संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def count_first_elements(test_tup):
  for count, ele in enumerate(test_tup):
    if isinstance(ele, tuple):
      break
  return (count) ",[],"['assert count_first_elements((1, 5, 7, (4, 6), 10) ) == 3', 'assert count_first_elements((2, 9, (5, 7), 11) ) == 2', 'assert count_first_elements((11, 15, 5, 8, (2, 3), 8) ) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल में टुपल तत्व से पहले आने वाले तत्वों की संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल में टुपल तत्व से पहले आने वाले तत्वों की संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
144,Benchmark Questions Verification V2.ipynb,279,nवीं दशकोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def is_num_decagonal(n): 
	return 4 * n * n - 3 * n ",[],"['assert is_num_decagonal(3) == 27', 'assert is_num_decagonal(7) == 175', 'assert is_num_decagonal(10) == 370']","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं दशकोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

nवीं दशकोणीय संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
145,Benchmark Questions Verification V2.ipynb,280,एक फ़ंक्शन लिखें जो एक सरणी और तत्व लेता है और एक बूलियन युक्त टुपल लौटाता है जो इंगित करता है कि तत्व सरणी में है और तत्व की सूचकांक स्थिति (या -1 यदि तत्व नहीं मिला है)।,"def sequential_search(dlist, item):
    pos = 0
    found = False
    while pos < len(dlist) and not found:
        if dlist[pos] == item:
            found = True
        else:
            pos = pos + 1
    return found, pos",[],"['assert sequential_search([11,23,58,31,56,77,43,12,65,19],31) == (True, 3)', 'assert sequential_search([12, 32, 45, 62, 35, 47, 44, 61],61) == (True, 7)', 'assert sequential_search([9, 10, 17, 19, 22, 39, 48, 56],48) == (True, 6)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सरणी और तत्व लेता है और एक बूलियन युक्त टुपल लौटाता है जो इंगित करता है कि तत्व सरणी में है और तत्व की सूचकांक स्थिति (या -1 यदि तत्व नहीं मिला है)।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सरणी और तत्व लेता है और एक बूलियन युक्त टुपल लौटाता है जो इंगित करता है कि तत्व सरणी में है और तत्व की सूचकांक स्थिति (या -1 यदि तत्व नहीं मिला है)।
"
146,Benchmark Questions Verification V2.ipynb,281,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि किसी दी गई सूची के तत्व अद्वितीय हैं या नहीं।,"def all_unique(test_list):
    if len(test_list) > len(set(test_list)):
        return False
    return True",[],"['assert all_unique([1,2,3]) == True', 'assert all_unique([1,2,1,2]) == False', 'assert all_unique([1,2,3,4,5]) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि किसी दी गई सूची के तत्व अद्वितीय हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि किसी दी गई सूची के तत्व अद्वितीय हैं या नहीं।
"
147,Benchmark Questions Verification V2.ipynb,282,तत्व-वार दो सूचियों को घटाने के लिए एक फ़ंक्शन लिखें।,"def sub_list(nums1,nums2):
  result = map(lambda x, y: x - y, nums1, nums2)
  return list(result)",[],"['assert sub_list([1, 2, 3],[4,5,6])==[-3,-3,-3]', 'assert sub_list([1,2],[3,4])==[-2,-2]', 'assert sub_list([90,120],[50,70])==[40,50]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

तत्व-वार दो सूचियों को घटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

तत्व-वार दो सूचियों को घटाने के लिए एक फ़ंक्शन लिखें।
"
148,Benchmark Questions Verification V2.ipynb,283,एक पायथन फ़ंक्शन को एक पूर्णांक में लिखें और जांचें कि पूर्णांक में प्रत्येक अंक की आवृत्ति अंक से कम या उसके बराबर है या नहीं।,"def validate(n): 
    for i in range(10): 
        temp = n;  
        count = 0; 
        while (temp): 
            if (temp % 10 == i): 
                count+=1;  
            if (count > i): 
                return False
            temp //= 10; 
    return True",[],"['assert validate(1234) == True', 'assert validate(51241) == False', 'assert validate(321) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन को एक पूर्णांक में लिखें और जांचें कि पूर्णांक में प्रत्येक अंक की आवृत्ति अंक से कम या उसके बराबर है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन को एक पूर्णांक में लिखें और जांचें कि पूर्णांक में प्रत्येक अंक की आवृत्ति अंक से कम या उसके बराबर है या नहीं।
"
149,Benchmark Questions Verification V2.ipynb,284,एक फ़ंक्शन लिखें जो एक सूची और तत्व लेता है और जांचता है कि सूची में सभी आइटम दिए गए तत्व के बराबर हैं या नहीं।,"def check_element(list,element):
  check_element=all(v== element for v in list)
  return check_element",[],"['assert check_element([""green"", ""orange"", ""black"", ""white""],\'blue\')==False', 'assert check_element([1,2,3,4],7)==False', 'assert check_element([""green"", ""green"", ""green"", ""green""],\'green\')==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और तत्व लेता है और जांचता है कि सूची में सभी आइटम दिए गए तत्व के बराबर हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो एक सूची और तत्व लेता है और जांचता है कि सूची में सभी आइटम दिए गए तत्व के बराबर हैं या नहीं।
"
150,Benchmark Questions Verification V2.ipynb,285,एक फ़ंक्शन लिखें जो जाँचता है कि क्या स्ट्रिंग में &#39;ए&#39; वर्ण के बाद दो या तीन &#39;बी&#39; वर्ण हैं।,"import re
def text_match_two_three(text):
        patterns = 'ab{2,3}'
        if re.search(patterns,  text):
                return True
        else:
                return False",[],"['assert text_match_two_three(""ac"")==(False)', 'assert text_match_two_three(""dc"")==(False)', 'assert text_match_two_three(""abbbba"")==(True)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो जाँचता है कि क्या स्ट्रिंग में &#39;ए&#39; वर्ण के बाद दो या तीन &#39;बी&#39; वर्ण हैं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो जाँचता है कि क्या स्ट्रिंग में &#39;ए&#39; वर्ण के बाद दो या तीन &#39;बी&#39; वर्ण हैं।
"
151,Benchmark Questions Verification V2.ipynb,286,संशोधित सरणी में सन्निहित सरणी का सबसे बड़ा योग खोजने के लिए एक फ़ंक्शन लिखें जो दिए गए सरणी को k बार दोहराकर बनता है।,"def max_sub_array_sum_repeated(a, n, k): 
	max_so_far = -2147483648
	max_ending_here = 0
	for i in range(n*k): 
		max_ending_here = max_ending_here + a[i%n] 
		if (max_so_far < max_ending_here): 
			max_so_far = max_ending_here 
		if (max_ending_here < 0): 
			max_ending_here = 0
	return max_so_far",[],"['assert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30', 'assert max_sub_array_sum_repeated([-1, 10, 20], 3, 2) == 59', 'assert max_sub_array_sum_repeated([-1, -2, -3], 3, 3) == -1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

संशोधित सरणी में सन्निहित सरणी का सबसे बड़ा योग खोजने के लिए एक फ़ंक्शन लिखें जो दिए गए सरणी को k बार दोहराकर बनता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

संशोधित सरणी में सन्निहित सरणी का सबसे बड़ा योग खोजने के लिए एक फ़ंक्शन लिखें जो दिए गए सरणी को k बार दोहराकर बनता है।
"
152,Benchmark Questions Verification V2.ipynb,287,एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n सम प्राकृतिक संख्याओं के वर्गों का योग लौटाता है।,"def square_Sum(n):  
    return int(2*n*(n+1)*(2*n+1)/3)",[],"['assert square_Sum(2) == 20', 'assert square_Sum(3) == 56', 'assert square_Sum(4) == 120']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n सम प्राकृतिक संख्याओं के वर्गों का योग लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक पायथन फ़ंक्शन लिखें जो एक पूर्णांक n लेता है और पहले n सम प्राकृतिक संख्याओं के वर्गों का योग लौटाता है।
"
153,Ellen's Copy of Benchmark Questions Verification V2.ipynb,290,सूचियों की सूची में अधिकतम लंबाई की सूची खोजने के लिए एक फ़ंक्शन लिखें।,"def max_length(list1):
    max_length = max(len(x) for x in  list1 )  
    max_list = max((x) for x in   list1)
    return(max_length, max_list)",[],"['assert max_length([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [13, 15, 17])', 'assert max_length([[1], [5, 7], [10, 12, 14,15]])==(4, [10, 12, 14,15])', 'assert max_length([[5], [15,20,25]])==(3, [15,20,25])']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची में अधिकतम लंबाई की सूची खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सूचियों की सूची में अधिकतम लंबाई की सूची खोजने के लिए एक फ़ंक्शन लिखें।
"
154,Ellen's Copy of Benchmark Questions Verification V2.ipynb,291,"बाड़ को पेंट करने के तरीकों की संख्या जानने के लिए एक फ़ंक्शन लिखें, ताकि अधिकतम 2 आसन्न पोस्टों में एन पोस्ट और के रंगों के साथ दिए गए बाड़ के लिए समान रंग हो।","def count_no_of_ways(n, k): 
	dp = [0] * (n + 1) 
	total = k 
	mod = 1000000007
	dp[1] = k 
	dp[2] = k * k	 
	for i in range(3,n+1): 
		dp[i] = ((k - 1) * (dp[i - 1] + dp[i - 2])) % mod 
	return dp[n]",[],"['assert count_no_of_ways(2, 4) == 16', 'assert count_no_of_ways(3, 2) == 6', 'assert count_no_of_ways(4, 4) == 228']","<s><<SYS>>
Provide answers in Python
<</SYS>>

बाड़ को पेंट करने के तरीकों की संख्या जानने के लिए एक फ़ंक्शन लिखें, ताकि अधिकतम 2 आसन्न पोस्टों में एन पोस्ट और के रंगों के साथ दिए गए बाड़ के लिए समान रंग हो।","<s><<SYS>>
Provide answers in Python
<</SYS>>

बाड़ को पेंट करने के तरीकों की संख्या जानने के लिए एक फ़ंक्शन लिखें, ताकि अधिकतम 2 आसन्न पोस्टों में एन पोस्ट और के रंगों के साथ दिए गए बाड़ के लिए समान रंग हो।
"
155,Ellen's Copy of Benchmark Questions Verification V2.ipynb,292,दो संख्याओं का भागफल ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें (निकटतम पूर्णांक तक पूर्णांकित करें)।,"def find(n,m):  
    q = n//m 
    return (q)",[],"['assert find(10,3) == 3', 'assert find(4,2) == 2', 'assert find(20,5) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो संख्याओं का भागफल ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें (निकटतम पूर्णांक तक पूर्णांकित करें)।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दो संख्याओं का भागफल ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें (निकटतम पूर्णांक तक पूर्णांकित करें)।
"
156,Ellen's Copy of Benchmark Questions Verification V2.ipynb,293,समकोण त्रिभुज की तीसरी भुजा ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"import math
def otherside_rightangle(w,h):
  s=math.sqrt((w*w)+(h*h))
  return s",[],"['assert otherside_rightangle(7,8)==10.63014581273465', 'assert otherside_rightangle(3,4)==5', 'assert otherside_rightangle(7,15)==16.55294535724685']","<s><<SYS>>
Provide answers in Python
<</SYS>>

समकोण त्रिभुज की तीसरी भुजा ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

समकोण त्रिभुज की तीसरी भुजा ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
157,Ellen's Copy of Benchmark Questions Verification V2.ipynb,294,किसी दी गई विषमांगी सूची में अधिकतम मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def max_val(listval):
     max_val = max(i for i in listval if isinstance(i, int)) 
     return(max_val)",[],"[""assert max_val(['Python', 3, 2, 4, 5, 'version'])==5"", ""assert max_val(['Python', 15, 20, 25])==25"", ""assert max_val(['Python', 30, 20, 40, 50, 'version'])==50""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई विषमांगी सूची में अधिकतम मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई विषमांगी सूची में अधिकतम मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
158,Ellen's Copy of Benchmark Questions Verification V2.ipynb,295,किसी संख्या के सभी विभाजकों का योग लौटाने के लिए एक फ़ंक्शन लिखें।,"def sum_div(number):
    divisors = [1]
    for i in range(2, number):
        if (number % i)==0:
            divisors.append(i)
    return sum(divisors)",[],"['assert sum_div(8)==7', 'assert sum_div(12)==16', 'assert sum_div(7)==1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी संख्या के सभी विभाजकों का योग लौटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी संख्या के सभी विभाजकों का योग लौटाने के लिए एक फ़ंक्शन लिखें।
"
159,Ellen's Copy of Benchmark Questions Verification V2.ipynb,296,किसी सरणी में व्युत्क्रमों की गणना करने के लिए एक पायथन फ़ंक्शन लिखें।,"def get_Inv_Count(arr): 
    inv_count = 0
    for i in range(len(arr)): 
        for j in range(i + 1, len(arr)): 
            if (arr[i] > arr[j]): 
                inv_count += 1
    return inv_count ",[],"['assert get_Inv_Count([1,20,6,4,5]) == 5', 'assert get_Inv_Count([1,2,1]) == 1', 'assert get_Inv_Count([1,2,5,6,1]) == 3']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सरणी में व्युत्क्रमों की गणना करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सरणी में व्युत्क्रमों की गणना करने के लिए एक पायथन फ़ंक्शन लिखें।
"
160,Ellen's Copy of Benchmark Questions Verification V2.ipynb,297,किसी दी गई नेस्टेड सूची संरचना को समतल करने के लिए एक फ़ंक्शन लिखें।,"def flatten_list(list1):
    result_list = []
    if not list1: return result_list
    stack = [list(list1)]
    while stack:
        c_num = stack.pop()
        next = c_num.pop()
        if c_num: stack.append(c_num)
        if isinstance(next, list):
            if next: stack.append(list(next))
        else: result_list.append(next)
    result_list.reverse()
    return result_list ",[],"['assert flatten_list([0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]])==[0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]', 'assert flatten_list([[10, 20], [40], [30, 56, 25], [10, 20], [33], [40]])==[10, 20, 40, 30, 56, 25, 10, 20, 33, 40]', 'assert flatten_list([[1,2,3], [4,5,6], [10,11,12], [7,8,9]])==[1, 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई नेस्टेड सूची संरचना को समतल करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई नेस्टेड सूची संरचना को समतल करने के लिए एक फ़ंक्शन लिखें।
"
161,Ellen's Copy of Benchmark Questions Verification V2.ipynb,299,टुपल्स की सूची से अधिकतम समुच्चय की गणना करने के लिए एक फ़ंक्शन लिखें।,"from collections import defaultdict
def max_aggregate(stdata):
    temp = defaultdict(int)
    for name, marks in stdata:
        temp[name] += marks
    return max(temp.items(), key=lambda x: x[1])",[],"[""assert max_aggregate([('Juan Whelan',90),('Sabah Colley',88),('Peter Nichols',7),('Juan Whelan',122),('Sabah Colley',84)])==('Juan Whelan', 212)"", ""assert max_aggregate([('Juan Whelan',50),('Sabah Colley',48),('Peter Nichols',37),('Juan Whelan',22),('Sabah Colley',14)])==('Juan Whelan', 72)"", ""assert max_aggregate([('Juan Whelan',10),('Sabah Colley',20),('Peter Nichols',30),('Juan Whelan',40),('Sabah Colley',50)])==('Sabah Colley', 70)""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स की सूची से अधिकतम समुच्चय की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स की सूची से अधिकतम समुच्चय की गणना करने के लिए एक फ़ंक्शन लिखें।
"
162,Ellen's Copy of Benchmark Questions Verification V2.ipynb,300,"लंबाई 2n के सभी बाइनरी अनुक्रमों की गिनती ज्ञात करने के लिए एक फ़ंक्शन लिखें, ताकि पहले n बिट्स का योग अंतिम n बिट्स के योग के समान हो।","def count_binary_seq(n): 
	nCr = 1
	res = 1
	for r in range(1, n + 1): 
		nCr = (nCr * (n + 1 - r)) / r 
		res += nCr * nCr 
	return res ",['import math'],"['assert math.isclose(count_binary_seq(1), 2.0, rel_tol=0.001)', 'assert math.isclose(count_binary_seq(2), 6.0, rel_tol=0.001)', 'assert math.isclose(count_binary_seq(3), 20.0, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

लंबाई 2n के सभी बाइनरी अनुक्रमों की गिनती ज्ञात करने के लिए एक फ़ंक्शन लिखें, ताकि पहले n बिट्स का योग अंतिम n बिट्स के योग के समान हो।","<s><<SYS>>
Provide answers in Python
<</SYS>>

लंबाई 2n के सभी बाइनरी अनुक्रमों की गिनती ज्ञात करने के लिए एक फ़ंक्शन लिखें, ताकि पहले n बिट्स का योग अंतिम n बिट्स के योग के समान हो।
"
163,Ellen's Copy of Benchmark Questions Verification V2.ipynb,301,शब्दकोश की गहराई जानने के लिए एक फ़ंक्शन लिखें।,"def dict_depth(d):
    if isinstance(d, dict):
        return 1 + (max(map(dict_depth, d.values())) if d else 0)
    return 0",[],"[""assert dict_depth({'a':1, 'b': {'c': {'d': {}}}})==4"", ""assert dict_depth({'a':1, 'b': {'c':'python'}})==2"", ""assert dict_depth({1: 'Sun', 2: {3: {4:'Mon'}}})==3""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

शब्दकोश की गहराई जानने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

शब्दकोश की गहराई जानने के लिए एक फ़ंक्शन लिखें।
"
164,Ellen's Copy of Benchmark Questions Verification V2.ipynb,304,घुमावों की संख्या के बाद किसी दिए गए सूचकांक पर तत्व खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def find_Element(arr,ranges,rotations,index) :  
    for i in range(rotations - 1,-1,-1 ) : 
        left = ranges[i][0] 
        right = ranges[i][1] 
        if (left <= index and right >= index) : 
            if (index == left) : 
                index = right 
            else : 
                index = index - 1 
    return arr[index] ",[],"['assert find_Element([1,2,3,4,5],[[0,2],[0,3]],2,1) == 3', 'assert find_Element([1,2,3,4],[[0,1],[0,2]],1,2) == 3', 'assert find_Element([1,2,3,4,5,6],[[0,1],[0,2]],1,1) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

घुमावों की संख्या के बाद किसी दिए गए सूचकांक पर तत्व खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

घुमावों की संख्या के बाद किसी दिए गए सूचकांक पर तत्व खोजने के लिए एक पायथन फ़ंक्शन लिखें।
"
165,Ellen's Copy of Benchmark Questions Verification V2.ipynb,305,अक्षर &#39;पी&#39; से शुरू होने वाले शब्दों की सूची से दो शब्दों को वापस लाने के लिए एक फ़ंक्शन लिखें।,"import re
def start_withp(words):
 for w in words:
        m = re.match(""(P\w+)\W(P\w+)"", w)
        if m:
            return m.groups()",[],"['assert start_withp([""Python PHP"", ""Java JavaScript"", ""c c++""])==(\'Python\', \'PHP\')', 'assert start_withp([""Python Programming"",""Java Programming""])==(\'Python\',\'Programming\')', 'assert start_withp([""Pqrst Pqr"",""qrstuv""])==(\'Pqrst\',\'Pqr\')']","<s><<SYS>>
Provide answers in Python
<</SYS>>

अक्षर &#39;पी&#39; से शुरू होने वाले शब्दों की सूची से दो शब्दों को वापस लाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

अक्षर &#39;पी&#39; से शुरू होने वाले शब्दों की सूची से दो शब्दों को वापस लाने के लिए एक फ़ंक्शन लिखें।
"
166,Ellen's Copy of Benchmark Questions Verification V2.ipynb,306,"उपसर्ग से iवें सूचकांक तक बढ़ते अनुवर्ती का अधिकतम योग ज्ञात करने के लिए एक फ़ंक्शन लिखें और इसमें दिए गए kth तत्व को भी शामिल करें जो कि i के बाद है, अर्थात, k &gt; i।","def max_sum_increasing_subseq(a, n, index, k):
	dp = [[0 for i in range(n)] 
			for i in range(n)]
	for i in range(n):
		if a[i] > a[0]:
			dp[0][i] = a[i] + a[0]
		else:
			dp[0][i] = a[i]
	for i in range(1, n):
		for j in range(n):
			if a[j] > a[i] and j > i:
				if dp[i - 1][i] + a[j] > dp[i - 1][j]:
					dp[i][j] = dp[i - 1][i] + a[j]
				else:
					dp[i][j] = dp[i - 1][j]
			else:
				dp[i][j] = dp[i - 1][j]
	return dp[index][k]",[],"['assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 4, 6) == 11', 'assert max_sum_increasing_subseq([1, 101, 2, 3, 100, 4, 5 ], 7, 2, 5) == 7', 'assert max_sum_increasing_subseq([11, 15, 19, 21, 26, 28, 31], 7, 2, 4) == 71']","<s><<SYS>>
Provide answers in Python
<</SYS>>

उपसर्ग से iवें सूचकांक तक बढ़ते अनुवर्ती का अधिकतम योग ज्ञात करने के लिए एक फ़ंक्शन लिखें और इसमें दिए गए kth तत्व को भी शामिल करें जो कि i के बाद है, अर्थात, k &gt; i।","<s><<SYS>>
Provide answers in Python
<</SYS>>

उपसर्ग से iवें सूचकांक तक बढ़ते अनुवर्ती का अधिकतम योग ज्ञात करने के लिए एक फ़ंक्शन लिखें और इसमें दिए गए kth तत्व को भी शामिल करें जो कि i के बाद है, अर्थात, k &gt; i।
"
167,Ellen's Copy of Benchmark Questions Verification V2.ipynb,307,टुपल का कोलन प्राप्त करने के लिए एक फ़ंक्शन लिखें।,"from copy import deepcopy
def colon_tuplex(tuplex,m,n):
  tuplex_colon = deepcopy(tuplex)
  tuplex_colon[m].append(n)
  return tuplex_colon",[],"['assert colon_tuplex((""HELLO"", 5, [], True) ,2,50)==(""HELLO"", 5, [50], True)', 'assert colon_tuplex((""HELLO"", 5, [], True) ,2,100)==((""HELLO"", 5, [100],True))', 'assert colon_tuplex((""HELLO"", 5, [], True) ,2,500)==(""HELLO"", 5, [500], True)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल का कोलन प्राप्त करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल का कोलन प्राप्त करने के लिए एक फ़ंक्शन लिखें।
"
168,Ellen's Copy of Benchmark Questions Verification V2.ipynb,308,"प्रत्येक सूची से एक कारक का चयन करते हुए, दो दी गई सूचियों से सबसे बड़े उत्पादों की निर्दिष्ट संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","def large_product(nums1, nums2, N):
    result = sorted([x*y for x in nums1 for y in nums2], reverse=True)[:N]
    return result",[],"['assert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],3)==[60, 54, 50]', 'assert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],4)==[60, 54, 50, 48]', 'assert large_product([1, 2, 3, 4, 5, 6],[3, 6, 8, 9, 10, 6],5)==[60, 54, 50, 48, 45]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रत्येक सूची से एक कारक का चयन करते हुए, दो दी गई सूचियों से सबसे बड़े उत्पादों की निर्दिष्ट संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रत्येक सूची से एक कारक का चयन करते हुए, दो दी गई सूचियों से सबसे बड़े उत्पादों की निर्दिष्ट संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
169,Ellen's Copy of Benchmark Questions Verification V2.ipynb,309,अधिकतम दो संख्याएँ ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def maximum(a,b):   
    if a >= b: 
        return a 
    else: 
        return b ",[],"['assert maximum(5,10) == 10', 'assert maximum(-1,-2) == -1', 'assert maximum(9,7) == 9']","<s><<SYS>>
Provide answers in Python
<</SYS>>

अधिकतम दो संख्याएँ ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

अधिकतम दो संख्याएँ ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।
"
170,Ellen's Copy of Benchmark Questions Verification V2.ipynb,310,किसी दिए गए स्ट्रिंग को वर्णों के टुपल में बदलने के लिए एक फ़ंक्शन लिखें।,"def string_to_tuple(str1):
    result = tuple(x for x in str1 if not x.isspace()) 
    return result",[],"['assert string_to_tuple(""python 3.0"")==(\'p\', \'y\', \'t\', \'h\', \'o\', \'n\', \'3\', \'.\', \'0\')', 'assert string_to_tuple(""item1"")==(\'i\', \'t\', \'e\', \'m\', \'1\')', 'assert string_to_tuple(""15.10"")==(\'1\', \'5\', \'.\', \'1\', \'0\')']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग को वर्णों के टुपल में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग को वर्णों के टुपल में बदलने के लिए एक फ़ंक्शन लिखें।
"
171,Ellen's Copy of Benchmark Questions Verification V2.ipynb,311,सबसे बाईं ओर के अनसेट बिट को सेट करने के लिए एक पायथन फ़ंक्शन लिखें।,"def set_left_most_unset_bit(n): 
    if not (n & (n + 1)): 
        return n 
    pos, temp, count = 0, n, 0 
    while temp: 
        if not (temp & 1): 
            pos = count      
        count += 1; temp>>=1
    return (n | (1 << (pos))) ",[],"['assert set_left_most_unset_bit(10) == 14', 'assert set_left_most_unset_bit(12) == 14', 'assert set_left_most_unset_bit(15) == 15']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सबसे बाईं ओर के अनसेट बिट को सेट करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सबसे बाईं ओर के अनसेट बिट को सेट करने के लिए एक पायथन फ़ंक्शन लिखें।
"
172,Ellen's Copy of Benchmark Questions Verification V2.ipynb,312,शंकु का आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"import math
def volume_cone(r,h):
  volume = (1.0/3) * math.pi * r * r * h
  return volume",['import math'],"['assert math.isclose(volume_cone(5,12), 314.15926535897927, rel_tol=0.001)', 'assert math.isclose(volume_cone(10,15), 1570.7963267948965, rel_tol=0.001)', 'assert math.isclose(volume_cone(19,17), 6426.651371693521, rel_tol=0.001)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

शंकु का आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

शंकु का आयतन ज्ञात करने के लिए एक फ़ंक्शन लिखें।
"
173,Benchmark Questions Verification V2.ipynb,388,2 की उच्चतम शक्ति ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें जो n से कम या उसके बराबर है।,"def highest_Power_of_2(n): 
    res = 0 
    for i in range(n, 0, -1): 
        if ((i & (i - 1)) == 0): 
            res = i 
            break 
    return res ",[],"['assert highest_Power_of_2(10) == 8', 'assert highest_Power_of_2(19) == 16', 'assert highest_Power_of_2(32) == 32']","<s><<SYS>>
Provide answers in Python
<</SYS>>

2 की उच्चतम शक्ति ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें जो n से कम या उसके बराबर है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

2 की उच्चतम शक्ति ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें जो n से कम या उसके बराबर है।
"
174,Benchmark Questions Verification V2.ipynb,389,n&#39;वें लुकास नंबर को खोजने के लिए एक फ़ंक्शन लिखें।,"def find_lucas(n): 
	if (n == 0): 
		return 2
	if (n == 1): 
		return 1
	return find_lucas(n - 1) + find_lucas(n - 2) ",[],"['assert find_lucas(9) == 76', 'assert find_lucas(4) == 7', 'assert find_lucas(3) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

n&#39;वें लुकास नंबर को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

n&#39;वें लुकास नंबर को खोजने के लिए एक फ़ंक्शन लिखें।
"
175,Benchmark Questions Verification V2.ipynb,390,किसी सूची के सभी तत्वों पर दिए गए प्रारूप स्ट्रिंग को लागू करने के लिए एक फ़ंक्शन लिखें।,"def add_string(list_, string):
 add_string=[string.format(i) for i in  list_]
 return add_string",[],"[""assert add_string([1,2,3,4],'temp{0}')==['temp1', 'temp2', 'temp3', 'temp4']"", ""assert add_string(['a','b','c','d'], 'python{0}')==[ 'pythona', 'pythonb', 'pythonc', 'pythond']"", ""assert add_string([5,6,7,8],'string{0}')==['string5', 'string6', 'string7', 'string8']""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची के सभी तत्वों पर दिए गए प्रारूप स्ट्रिंग को लागू करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची के सभी तत्वों पर दिए गए प्रारूप स्ट्रिंग को लागू करने के लिए एक फ़ंक्शन लिखें।
"
176,Benchmark Questions Verification V2.ipynb,391,एक से अधिक सूचियों को नेस्टेड शब्दकोश में बदलने के लिए एक फ़ंक्शन लिखें।,"def convert_list_dictionary(l1, l2, l3):
     result = [{x: {y: z}} for (x, y, z) in zip(l1, l2, l3)]
     return result",[],"['assert convert_list_dictionary([""S001"", ""S002"", ""S003"", ""S004""],[""Adina Park"", ""Leyton Marsh"", ""Duncan Boyle"", ""Saim Richards""] ,[85, 98, 89, 92])==[{\'S001\': {\'Adina Park\': 85}}, {\'S002\': {\'Leyton Marsh\': 98}}, {\'S003\': {\'Duncan Boyle\': 89}}, {\'S004\': {\'Saim Richards\': 92}}]', 'assert convert_list_dictionary([""abc"",""def"",""ghi"",""jkl""],[""python"",""program"",""language"",""programs""],[100,200,300,400])==[{\'abc\':{\'python\':100}},{\'def\':{\'program\':200}},{\'ghi\':{\'language\':300}},{\'jkl\':{\'programs\':400}}]', 'assert convert_list_dictionary([""A1"",""A2"",""A3"",""A4""],[""java"",""C"",""C++"",""DBMS""],[10,20,30,40])==[{\'A1\':{\'java\':10}},{\'A2\':{\'C\':20}},{\'A3\':{\'C++\':30}},{\'A4\':{\'DBMS\':40}}]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक से अधिक सूचियों को नेस्टेड शब्दकोश में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक से अधिक सूचियों को नेस्टेड शब्दकोश में बदलने के लिए एक फ़ंक्शन लिखें।

सूचियों के प्रकार:

    [['a', 'b', 'c'], ['"
177,Benchmark Questions Verification V2.ipynb,392,"दिए गए समीकरण f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)) का उपयोग करके अधिकतम संभव योग ज्ञात करने के लिए एक फ़ंक्शन लिखें , एन)।","def get_max_sum (n):
	res = list()
	res.append(0)
	res.append(1)
	i = 2
	while i<n + 1:
		res.append(max(i, (res[int(i / 2)] 
						+ res[int(i / 3)] +
							res[int(i / 4)]
						+ res[int(i / 5)])))
		i = i + 1
	return res[n]",[],"['assert get_max_sum(60) == 106', 'assert get_max_sum(10) == 12', 'assert get_max_sum(2) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए समीकरण f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)) का उपयोग करके अधिकतम संभव योग ज्ञात करने के लिए एक फ़ंक्शन लिखें , एन)।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए समीकरण f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)) का उपयोग करके अधिकतम संभव योग ज्ञात करने के लिए एक फ़ंक्शन लिखें , एन)।

































"
178,charlessutton@: Benchmark Questions Verification V2.ipynb,393,अधिकतम लंबाई वाली सूची ढूंढने के लिए एक फ़ंक्शन लिखें।,"def max_length_list(input_list):
    max_length = max(len(x) for x in input_list )   
    max_list = max(input_list, key = lambda i: len(i))    
    return(max_length, max_list)",[],"['assert max_length_list([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]])==(3, [13, 15, 17])', 'assert max_length_list([[1,2,3,4,5],[1,2,3,4],[1,2,3],[1,2],[1]])==(5,[1,2,3,4,5])', 'assert max_length_list([[3,4,5],[6,7,8,9],[10,11,12]])==(4,[6,7,8,9])']","<s><<SYS>>
Provide answers in Python
<</SYS>>

अधिकतम लंबाई वाली सूची ढूंढने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

अधिकतम लंबाई वाली सूची ढूंढने के लिए एक फ़ंक्शन लिखें।

सूची में से कई स्थान हो सकते ह"
179,Benchmark Questions Verification V2.ipynb,394,यह जांचने के लिए एक फ़ंक्शन लिखें कि दिए गए टुपल में कोई डुप्लिकेट नहीं है या नहीं।,"def check_distinct(test_tup):
  res = True
  temp = set()
  for ele in test_tup:
    if ele in temp:
      res = False
      break
    temp.add(ele)
  return res ",[],"['assert check_distinct((1, 4, 5, 6, 1, 4)) == False', 'assert check_distinct((1, 4, 5, 6)) == True', 'assert check_distinct((2, 3, 4, 5, 6)) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दिए गए टुपल में कोई डुप्लिकेट नहीं है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दिए गए टुपल में कोई डुप्लिकेट नहीं है या नहीं।

<b>Example</b>
<pre>
<b>Input</b>
2
1 2 1
3
1 "
180,Benchmark Questions Verification V2.ipynb,395,किसी दिए गए स्ट्रिंग में पहले गैर-दोहराए गए वर्ण को खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def first_non_repeating_character(str1):
  char_order = []
  ctr = {}
  for c in str1:
    if c in ctr:
      ctr[c] += 1
    else:
      ctr[c] = 1 
      char_order.append(c)
  for c in char_order:
    if ctr[c] == 1:
      return c
  return None",[],"['assert first_non_repeating_character(""abcabc"") == None', 'assert first_non_repeating_character(""abc"") == ""a""', 'assert first_non_repeating_character(""ababc"") == ""c""']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग में पहले गैर-दोहराए गए वर्ण को खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग में पहले गैर-दोहराए गए वर्ण को खोजने के लिए एक पायथन फ़ंक्शन लिखें।

<</>

<</>

<</>

<</>

<</>

<</>

<</"
181,charlessutton@: Benchmark Questions Verification V2.ipynb,396,यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई स्ट्रिंग एक ही वर्ण से शुरू और समाप्त होती है या नहीं।,"import re  
regex = r'^[a-z]$|^([a-z]).*\1$'
def check_char(string): 
	if(re.search(regex, string)): 
		return ""Valid"" 
	else: 
		return ""Invalid"" ",[],"['assert check_char(""abba"") == ""Valid""', 'assert check_char(""a"") == ""Valid""', 'assert check_char(""abcd"") == ""Invalid""']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई स्ट्रिंग एक ही वर्ण से शुरू और समाप्त होती है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि दी गई स्ट्रिंग एक ही वर्ण से शुरू और समाप्त होती है या नहीं।

<b>Example</b>:
<pre>
>>> is_palindrome(""noon"")
True
>>> is_palind"
182,Benchmark Questions Verification V2.ipynb,397,तीन संख्याओं का माध्य ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def median_numbers(a,b,c):
 if a > b:
    if a < c:
        median = a
    elif b > c:
        median = b
    else:
        median = c
 else:
    if a > c:
        median = a
    elif b < c:
        median = b
    else:
        median = c
 return median",[],"['assert median_numbers(25,55,65)==55.0', 'assert median_numbers(20,10,30)==20.0', 'assert median_numbers(15,45,75)==45.0']","<s><<SYS>>
Provide answers in Python
<</SYS>>

तीन संख्याओं का माध्य ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

तीन संख्याओं का माध्य ज्ञात करने के लिए एक फ़ंक्शन लिखें।

>>> def average(a, b, c):
...     return (a + b + c) / 3
...
>>> average("
183,Benchmark Questions Verification V2.ipynb,398,किसी दी गई सूची की प्रत्येक संख्या के अंकों के योग की गणना करने के लिए एक फ़ंक्शन लिखें।,"def sum_of_digits(nums):
    return sum(int(el) for n in nums for el in str(n) if el.isdigit())",[],"['assert sum_of_digits([10,2,56])==14', ""assert sum_of_digits([[10,20,4,5,'b',70,'a']])==19"", 'assert sum_of_digits([10,20,-4,5,-70])==19']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची की प्रत्येक संख्या के अंकों के योग की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची की प्रत्येक संख्या के अंकों के योग की गणना करने के लिए एक फ़ंक्शन लिखें।

<</> के लिए एक स्वतन्त्र प्रक"
184,Benchmark Questions Verification V2.ipynb,399,दिए गए टुपल्स में गणितीय बिटवाइज़ xor ऑपरेशन करने के लिए एक फ़ंक्शन लिखें।,"def bitwise_xor(test_tup1, test_tup2):
  res = tuple(ele1 ^ ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",[],"['assert bitwise_xor((10, 4, 6, 9), (5, 2, 3, 3)) == (15, 6, 5, 10)', 'assert bitwise_xor((11, 5, 7, 10), (6, 3, 4, 4)) == (13, 6, 3, 14)', 'assert bitwise_xor((12, 6, 8, 11), (7, 4, 5, 6)) == (11, 2, 13, 13)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल्स में गणितीय बिटवाइज़ xor ऑपरेशन करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल्स में गणितीय बिटवाइज़ xor ऑपरेशन करने के लिए एक फ़ंक्शन लिखें।

>>> def xor(a, b):
...     return a ^ b
...
>>> xor(True, False)
True
"
185,Benchmark Questions Verification V2.ipynb,400,दी गई सूची में अद्वितीय टुपल्स की संख्या निकालने के लिए एक फ़ंक्शन लिखें।,"def extract_freq(test_list):
  res = len(list(set(tuple(sorted(sub)) for sub in test_list)))
  return (res)",[],"['assert extract_freq([(3, 4), (1, 2), (4, 3), (5, 6)] ) == 3', 'assert extract_freq([(4, 15), (2, 3), (5, 4), (6, 7)] ) == 4', 'assert extract_freq([(5, 16), (2, 3), (6, 5), (6, 9)] ) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची में अद्वितीय टुपल्स की संख्या निकालने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची में अद्वितीय टुपल्स की संख्या निकालने के लिए एक फ़ंक्शन लिखें।

सूची का एक एल्टीमेट में स्ट्"
186,Benchmark Questions Verification V2.ipynb,401,दिए गए दो नेस्टेड टुपल्स में टुपल तत्वों को सूचकांक के अनुसार जोड़ने के लिए एक फ़ंक्शन लिखें।,"def add_nested_tuples(test_tup1, test_tup2):
  res = tuple(tuple(a + b for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ",[],"['assert add_nested_tuples(((1, 3), (4, 5), (2, 9), (1, 10)), ((6, 7), (3, 9), (1, 1), (7, 3))) == ((7, 10), (7, 14), (3, 10), (8, 13))', 'assert add_nested_tuples(((2, 4), (5, 6), (3, 10), (2, 11)), ((7, 8), (4, 10), (2, 2), (8, 4))) == ((9, 12), (9, 16), (5, 12), (10, 15))', 'assert add_nested_tuples(((3, 5), (6, 7), (4, 11), (3, 12)), ((8, 9), (5, 11), (3, 3), (9, 5))) == ((11, 14), (11, 18), (7, 14), (12, 17))']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो नेस्टेड टुपल्स में टुपल तत्वों को सूचकांक के अनुसार जोड़ने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो नेस्टेड टुपल्स में टुपल तत्वों को सूचकांक के अनुसार जोड़ने के लिए एक फ़ंक्शन लिखें।

>>> def add_tuples(t1, t2):
...     return tuple(map(lambda x, y: x + y, t"
187,Benchmark Questions Verification V2.ipynb,404,न्यूनतम दो संख्याएँ ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def minimum(a,b):   
    if a <= b: 
        return a 
    else: 
        return b ",[],"['assert minimum(1,2) == 1', 'assert minimum(-5,-4) == -5', 'assert minimum(0,0) == 0']","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूनतम दो संख्याएँ ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूनतम दो संख्याएँ ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

































"
188,Benchmark Questions Verification V2.ipynb,405,यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या कोई तत्व टुपल के भीतर मौजूद है।,"def check_tuplex(tuplex,tuple1): 
  if tuple1 in tuplex:
    return True
  else:
     return False",[],"['assert check_tuplex((""w"", 3, ""r"", ""e"", ""s"", ""o"", ""u"", ""r"", ""c"", ""e""),\'r\')==True', 'assert check_tuplex((""w"", 3, ""r"", ""e"", ""s"", ""o"", ""u"", ""r"", ""c"", ""e""),\'5\')==False', 'assert check_tuplex((""w"", 3, ""r"", ""e"", ""s"", ""o"", ""u"", ""r"", ""c"",""e""),3)==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या कोई तत्व टुपल के भीतर मौजूद है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या कोई तत्व टुपल के भीतर मौजूद है।

<b>Example</b>:
<pre>
is_in_between(1, 2, 3) == True
is_in"
189,Benchmark Questions Verification V2.ipynb,406,किसी दी गई संख्या की समता विषम है या नहीं यह जानने के लिए एक पायथन फ़ंक्शन लिखें।,"def find_Parity(x): 
    y = x ^ (x >> 1); 
    y = y ^ (y >> 2); 
    y = y ^ (y >> 4); 
    y = y ^ (y >> 8); 
    y = y ^ (y >> 16); 
    if (y & 1): 
        return True
    return False",[],"['assert find_Parity(12) == False', 'assert find_Parity(7) == True', 'assert find_Parity(10) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या की समता विषम है या नहीं यह जानने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या की समता विषम है या नहीं यह जानने के लिए एक पायथन फ़ंक्शन लिखें।

<</CODE>>

def is_even(num):
    return num % 2 == 0

<</CODE>>

<"
190,Benchmark Questions Verification V2.ipynb,407,किसी दी गई संख्या के अंकों को पुनर्व्यवस्थित करके अगली बड़ी संख्या बनाने के लिए एक फ़ंक्शन लिखें।,"def rearrange_bigger(n):
    nums = list(str(n))
    for i in range(len(nums)-2,-1,-1):
        if nums[i] < nums[i+1]:
            z = nums[i:]
            y = min(filter(lambda x: x > z[0], z))
            z.remove(y)
            z.sort()
            nums[i:] = [y] + z
            return int("""".join(nums))
    return False",[],"['assert rearrange_bigger(12)==21', 'assert rearrange_bigger(10)==False', 'assert rearrange_bigger(102)==120']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या के अंकों को पुनर्व्यवस्थित करके अगली बड़ी संख्या बनाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या के अंकों को पुनर्व्यवस्थित करके अगली बड़ी संख्या बनाने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</"
191,Benchmark Questions Verification V2.ipynb,408,"सबसे छोटी जोड़ियों की k संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें, जिसमें पहले एरे से एक तत्व और दूसरे एरे से एक तत्व शामिल हो।","import heapq
def k_smallest_pairs(nums1, nums2, k):
   queue = []
   def push(i, j):
       if i < len(nums1) and j < len(nums2):
           heapq.heappush(queue, [nums1[i] + nums2[j], i, j])
   push(0, 0)
   pairs = []
   while queue and len(pairs) < k:
       _, i, j = heapq.heappop(queue)
       pairs.append([nums1[i], nums2[j]])
       push(i, j + 1)
       if j == 0:
           push(i + 1, 0)
   return pairs",[],"['assert k_smallest_pairs([1,3,7],[2,4,6],2)==[[1, 2], [1, 4]]', 'assert k_smallest_pairs([1,3,7],[2,4,6],1)==[[1, 2]]', 'assert k_smallest_pairs([1,3,7],[2,4,6],7)==[[1, 2], [1, 4], [3, 2], [1, 6], [3, 4], [3, 6], [7, 2]]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सबसे छोटी जोड़ियों की k संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें, जिसमें पहले एरे से एक तत्व और दूसरे एरे से एक तत्व शामिल हो।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सबसे छोटी जोड़ियों की k संख्या ज्ञात करने के लिए एक फ़ंक्शन लिखें, जिसमें पहले एरे से एक तत्व और दूसरे एरे से एक तत्व शामिल हो। इस फ़ंक्शन के पास के तत्व की "
192,Benchmark Questions Verification V2.ipynb,409,किसी दी गई सूची में टुपल्स के जोड़े से न्यूनतम उत्पाद खोजने के लिए एक फ़ंक्शन लिखें।,"def min_product_tuple(list1):
    result_min = min([abs(x * y) for x, y in list1] )
    return result_min",[],"['assert min_product_tuple([(2, 7), (2, 6), (1, 8), (4, 9)] )==8', 'assert min_product_tuple([(10,20), (15,2), (5,10)] )==30', 'assert min_product_tuple([(11,44), (10,15), (20,5), (12, 9)] )==100']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में टुपल्स के जोड़े से न्यूनतम उत्पाद खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची में टुपल्स के जोड़े से न्यूनतम उत्पाद खोजने के लिए एक फ़ंक्शन लिखें।

<</>

<</>

<</>

<</>

<</>

"
193,Benchmark Questions Verification V2.ipynb,410,किसी दी गई विषमांगी सूची में न्यूनतम मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def min_val(listval):
     min_val = min(i for i in listval if isinstance(i, int))
     return min_val",[],"[""assert min_val(['Python', 3, 2, 4, 5, 'version'])==2"", ""assert min_val(['Python', 15, 20, 25])==15"", ""assert min_val(['Python', 30, 20, 40, 50, 'version'])==20""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई विषमांगी सूची में न्यूनतम मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई विषमांगी सूची में न्यूनतम मान ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</>

>>> def min_value(values):
...     min_value = values[0]"
194,charlessutton@: Benchmark Questions Verification V2.ipynb,411,दिए गए स्नेक केस स्ट्रिंग को कैमल केस स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।,"import re
def snake_to_camel(word):
  return ''.join(x.capitalize() or '_' for x in word.split('_'))",[],"[""assert snake_to_camel('android_tv') == 'AndroidTv'"", ""assert snake_to_camel('google_pixel') == 'GooglePixel'"", ""assert snake_to_camel('apple_watch') == 'AppleWatch'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए स्नेक केस स्ट्रिंग को कैमल केस स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए स्नेक केस स्ट्रिंग को कैमल केस स्ट्रिंग में बदलने के लिए एक फ़ंक्शन लिखें।


























"
195,charlessutton@: Benchmark Questions Verification V2.ipynb,412,किसी दी गई सूची से विषम संख्याओं को हटाने के लिए एक पायथन फ़ंक्शन लिखें।,"def remove_odd(l):
    for i in l:
        if i % 2 != 0:
            l.remove(i)
    return l",[],"['assert remove_odd([1,2,3]) == [2]', 'assert remove_odd([2,4,6]) == [2,4,6]', 'assert remove_odd([10,20,3]) == [10,20]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची से विषम संख्याओं को हटाने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची से विषम संख्याओं को हटाने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की पहली स्थान को ए"
196,charlessutton@: Benchmark Questions Verification V2.ipynb,413,टुपल्स की दी गई सूची से nवां तत्व निकालने के लिए एक फ़ंक्शन लिखें।,"def extract_nth_element(list1, n):
    result = [x[n] for x in list1]
    return result",[],"[""assert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==['Greyson Fulton', 'Brady Kent', 'Wyatt Knott', 'Beau Turnbull']"", ""assert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,2)==[99, 96, 94, 98]"", ""assert extract_nth_element([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)],1)==[98, 97, 91, 94]""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स की दी गई सूची से nवां तत्व निकालने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल्स की दी गई सूची से nवां तत्व निकालने के लिए एक फ़ंक्शन लिखें।

सूची की तरह से एक स्ट्र"
197,charlessutton@: Benchmark Questions Verification V2.ipynb,414,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि किसी अनुक्रम में कोई मान मौजूद है या नहीं।,"def overlapping(list1,list2):  
    for i in range(len(list1)): 
        for j in range(len(list2)): 
            if(list1[i]==list2[j]): 
                return True
    return False",[],"['assert overlapping([1,2,3,4,5],[6,7,8,9]) == False', 'assert overlapping([1,2,3],[4,5,6]) == False', 'assert overlapping([1,4,5],[1,4,5]) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि किसी अनुक्रम में कोई मान मौजूद है या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि किसी अनुक्रम में कोई मान मौजूद है या नहीं।


























"
198,charlessutton@: Benchmark Questions Verification V2.ipynb,415,पूर्णांकों की दी गई सारणी से उच्चतम उत्पाद वाला जोड़ा ढूंढने के लिए एक पायथन फ़ंक्शन लिखें।,"def max_Product(arr): 
    arr_len = len(arr) 
    if (arr_len < 2): 
        return (""No pairs exists"")           
    x = arr[0]; y = arr[1]      
    for i in range(0,arr_len): 
        for j in range(i + 1,arr_len): 
            if (arr[i] * arr[j] > x * y): 
                x = arr[i]; y = arr[j] 
    return x,y    ",[],"['assert max_Product([1,2,3,4,7,0,8,4]) == (7,8)', 'assert max_Product([0,-1,-2,-4,5,0,-6]) == (-4,-6)', 'assert max_Product([1,2,3]) == (2,3)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

पूर्णांकों की दी गई सारणी से उच्चतम उत्पाद वाला जोड़ा ढूंढने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

पूर्णांकों की दी गई सारणी से उच्चतम उत्पाद वाला जोड़ा ढूंढने के लिए एक पायथन फ़ंक्शन लिखें।

प्रश्न:

















"
199,charlessutton@: Benchmark Questions Verification V2.ipynb,417,टुपल की दी गई सूची में सामान्य पहला तत्व खोजने के लिए एक फ़ंक्शन लिखें।,"def group_tuples(Input): 
	out = {} 
	for elem in Input: 
		try: 
			out[elem[0]].extend(elem[1:]) 
		except KeyError: 
			out[elem[0]] = list(elem) 
	return [tuple(values) for values in out.values()] ",[],"[""assert group_tuples([('x', 'y'), ('x', 'z'), ('w', 't')]) == [('x', 'y', 'z'), ('w', 't')]"", ""assert group_tuples([('a', 'b'), ('a', 'c'), ('d', 'e')]) == [('a', 'b', 'c'), ('d', 'e')]"", ""assert group_tuples([('f', 'g'), ('f', 'g'), ('h', 'i')]) == [('f', 'g', 'g'), ('h', 'i')]""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल की दी गई सूची में सामान्य पहला तत्व खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल की दी गई सूची में सामान्य पहला तत्व खोजने के लिए एक फ़ंक्शन लिखें।

सूची में सामान्य पहला तत्"
200,charlessutton@: Benchmark Questions Verification V2.ipynb,418,अधिकतम लंबाई वाली सूची के तत्व को खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def Find_Max(lst): 
    maxList = max((x) for x in lst) 
    return maxList",[],"[""assert Find_Max([['A'],['A','B'],['A','B','C']]) == ['A','B','C']"", 'assert Find_Max([[1],[1,2],[1,2,3]]) == [1,2,3]', 'assert Find_Max([[1,1],[1,2,3],[1,5,6,1]]) == [1,5,6,1]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

अधिकतम लंबाई वाली सूची के तत्व को खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

अधिकतम लंबाई वाली सूची के तत्व को खोजने के लिए एक पायथन फ़ंक्शन लिखें।

सूची के तत्व को खोजने के "
201,charlessutton@: Benchmark Questions Verification V2.ipynb,419,संख्याओं की दी गई सूची में प्रत्येक संख्या को पूर्णांकित करने के लिए एक फ़ंक्शन लिखें और कुल योग को सूची की लंबाई से गुणा करके प्रिंट करें।,"def round_and_sum(list1):
  lenght=len(list1)
  round_and_sum=sum(list(map(round,list1))* lenght)
  return round_and_sum",[],"['assert round_and_sum([22.4, 4.0, -16.22, -9.10, 11.00, -12.22, 14.20, -5.20, 17.50])==243', 'assert round_and_sum([5,2,9,24.3,29])==345', 'assert round_and_sum([25.0,56.7,89.2])==513']","<s><<SYS>>
Provide answers in Python
<</SYS>>

संख्याओं की दी गई सूची में प्रत्येक संख्या को पूर्णांकित करने के लिए एक फ़ंक्शन लिखें और कुल योग को सूची की लंबाई से गुणा करके प्रिंट करें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

संख्याओं की दी गई सूची में प्रत्येक संख्या को पूर्णांकित करने के लिए एक फ़ंक्शन लिखें और कुल योग को सूची की लंबाई से गुणा करके प्रिंट करें।


























"
202,charlessutton@: Benchmark Questions Verification V2.ipynb,420,प्रथम n सम प्राकृतिक संख्याओं का घन योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def cube_Sum(n): 
    sum = 0
    for i in range(1,n + 1): 
        sum += (2*i)*(2*i)*(2*i) 
    return sum",[],"['assert cube_Sum(2) == 72', 'assert cube_Sum(3) == 288', 'assert cube_Sum(4) == 800']","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रथम n सम प्राकृतिक संख्याओं का घन योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रथम n सम प्राकृतिक संख्याओं का घन योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।


























"
203,charlessutton@: Benchmark Questions Verification V2.ipynb,421,टपल के प्रत्येक तत्व को सीमांकक द्वारा संयोजित करने के लिए एक फ़ंक्शन लिखें।,"def concatenate_tuple(test_tup):
    delim = ""-""
    res = ''.join([str(ele) + delim for ele in test_tup])
    res = res[ : len(res) - len(delim)]
    return (str(res)) ",[],"['assert concatenate_tuple((""ID"", ""is"", 4, ""UTS"") ) == \'ID-is-4-UTS\'', 'assert concatenate_tuple((""QWE"", ""is"", 4, ""RTY"") ) == \'QWE-is-4-RTY\'', 'assert concatenate_tuple((""ZEN"", ""is"", 4, ""OP"") ) == \'ZEN-is-4-OP\'']","<s><<SYS>>
Provide answers in Python
<</SYS>>

टपल के प्रत्येक तत्व को सीमांकक द्वारा संयोजित करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टपल के प्रत्येक तत्व को सीमांकक द्वारा संयोजित करने के लिए एक फ़ंक्शन लिखें।


























"
204,charlessutton@: Benchmark Questions Verification V2.ipynb,422,प्रथम n प्राकृतिक संख्याओं के घनों का औसत ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def find_Average_Of_Cube(n):  
    sum = 0
    for i in range(1, n + 1): 
        sum += i * i * i  
    return round(sum / n, 6) ",[],"['assert find_Average_Of_Cube(2) == 4.5', 'assert find_Average_Of_Cube(3) == 12', 'assert find_Average_Of_Cube(1) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रथम n प्राकृतिक संख्याओं के घनों का औसत ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रथम n प्राकृतिक संख्याओं के घनों का औसत ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।


























"
205,charlessutton@: Benchmark Questions Verification V2.ipynb,424,दिए गए टुपल में प्रत्येक स्ट्रिंग के केवल पिछले इंडेक्स तत्व को निकालने के लिए एक फ़ंक्शन लिखें।,"def extract_rear(test_tuple):
  res = list(sub[len(sub) - 1] for sub in test_tuple)
  return (res) ",[],"[""assert extract_rear(('Mers', 'for', 'Vers') ) == ['s', 'r', 's']"", ""assert extract_rear(('Avenge', 'for', 'People') ) == ['e', 'r', 'e']"", ""assert extract_rear(('Gotta', 'get', 'go') ) == ['a', 't', 'o']""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल में प्रत्येक स्ट्रिंग के केवल पिछले इंडेक्स तत्व को निकालने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टुपल में प्रत्येक स्ट्रिंग के केवल पिछले इंडेक्स तत्व को निकालने के लिए एक फ़ंक्शन लिखें।

<</>>

<</>>

<</>>

<</>>

<</>>

"
206,charlessutton@: Benchmark Questions Verification V2.ipynb,425,किसी विशेष तत्व वाली उपसूचियों की संख्या गिनने के लिए एक फ़ंक्शन लिखें।,"def count_element_in_list(list1, x): 
    ctr = 0
    for i in range(len(list1)): 
        if x in list1[i]: 
            ctr+= 1          
    return ctr",[],"['assert count_element_in_list([[1, 3], [5, 7], [1, 11], [1, 15, 7]],1)==3', ""assert count_element_in_list([['A', 'B'], ['A', 'C'], ['A', 'D', 'E'], ['B', 'C', 'D']],'A')==3"", ""assert count_element_in_list([['A', 'B'], ['A', 'C'], ['A', 'D', 'E'], ['B', 'C', 'D']],'E')==1""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी विशेष तत्व वाली उपसूचियों की संख्या गिनने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी विशेष तत्व वाली उपसूचियों की संख्या गिनने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def count(list):
    return len(list)

<</CODE>>
"
207,charlessutton@: Benchmark Questions Verification V2.ipynb,426,विषम संख्याओं को फ़िल्टर करने के लिए एक फ़ंक्शन लिखें।,"def filter_oddnumbers(nums):
 odd_nums = list(filter(lambda x: x%2 != 0, nums))
 return odd_nums",[],"['assert filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1,3,5,7,9]', 'assert filter_oddnumbers([10,20,45,67,84,93])==[45,67,93]', 'assert filter_oddnumbers([5,7,9,8,6,4,3])==[5,7,9,3]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

विषम संख्याओं को फ़िल्टर करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

विषम संख्याओं को फ़िल्टर करने के लिए एक फ़ंक्शन लिखें।


























"
208,charlessutton@: Benchmark Questions Verification V2.ipynb,427,yyyy-mm-dd प्रारूप की तारीख को dd-mm-yyyy प्रारूप में बदलने के लिए एक फ़ंक्शन लिखें।,"import re
def change_date_format(dt):
        return re.sub(r'(\d{4})-(\d{1,2})-(\d{1,2})', '\\3-\\2-\\1', dt)",[],"['assert change_date_format(""2026-01-02"") == \'02-01-2026\'', 'assert change_date_format(""2020-11-13"") == \'13-11-2020\'', 'assert change_date_format(""2021-04-26"") == \'26-04-2021\'']","<s><<SYS>>
Provide answers in Python
<</SYS>>

yyyy-mm-dd प्रारूप की तारीख को dd-mm-yyyy प्रारूप में बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

yyyy-mm-dd प्रारूप की तारीख को dd-mm-yyyy प्रारूप में बदलने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def date_format(date):
    return date[8:10] + '-' + date[5:7] + '-' + date[:4]

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>
"
209,charlessutton@: Benchmark Questions Verification V2.ipynb,428,शेल सॉर्ट का उपयोग करके दिए गए ऐरे को सॉर्ट करने के लिए एक फ़ंक्शन लिखें।,"def shell_sort(my_list):
    gap = len(my_list) // 2
    while gap > 0:
        for i in range(gap, len(my_list)):
            current_item = my_list[i]
            j = i
            while j >= gap and my_list[j - gap] > current_item:
                my_list[j] = my_list[j - gap]
                j -= gap
            my_list[j] = current_item
        gap //= 2

    return my_list",[],"['assert shell_sort([12, 23, 4, 5, 3, 2, 12, 81, 56, 95]) == [2, 3, 4, 5, 12, 12, 23, 56, 81, 95]', 'assert shell_sort([24, 22, 39, 34, 87, 73, 68]) == [22, 24, 34, 39, 68, 73, 87]', 'assert shell_sort([32, 30, 16, 96, 82, 83, 74]) == [16, 30, 32, 74, 82, 83, 96]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

शेल सॉर्ट का उपयोग करके दिए गए ऐरे को सॉर्ट करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

शेल सॉर्ट का उपयोग करके दिए गए ऐरे को सॉर्ट करने के लिए एक फ़ंक्शन लिखें।



































































"
210,charlessutton@: Benchmark Questions Verification V2.ipynb,429,दिए गए दो टुपल्स से तत्ववार और टुपल्स निकालने के लिए एक फ़ंक्शन लिखें।,"def and_tuples(test_tup1, test_tup2):
  res = tuple(ele1 & ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",[],"['assert and_tuples((10, 4, 6, 9), (5, 2, 3, 3)) == (0, 0, 2, 1)', 'assert and_tuples((1, 2, 3, 4), (5, 6, 7, 8)) == (1, 2, 3, 0)', 'assert and_tuples((8, 9, 11, 12), (7, 13, 14, 17)) == (0, 9, 10, 0)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो टुपल्स से तत्ववार और टुपल्स निकालने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो टुपल्स से तत्ववार और टुपल्स निकालने के लिए एक फ़ंक्शन लिखें।

>>> def make_tuple(a, b):
...     return a, b
...
>>> make_tuple(1, 2)
(1, 2)
>>> make_tuple(1, 2)
(1, 2)
>>> make_tuple(1"
211,charlessutton@: Benchmark Questions Verification V2.ipynb,430,परवलय की नियता ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def parabola_directrix(a, b, c): 
  directrix=((int)(c - ((b * b) + 1) * 4 * a ))
  return directrix",[],"['assert parabola_directrix(5,3,2)==-198', 'assert parabola_directrix(9,8,4)==-2336', 'assert parabola_directrix(2,4,6)==-130']","<s><<SYS>>
Provide answers in Python
<</SYS>>

परवलय की नियता ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

परवलय की नियता ज्ञात करने के लिए एक फ़ंक्शन लिखें।

परवलय की नियता के लिए एक फ़ंक्शन लिखें।




















"
212,charlessutton@: Benchmark Questions Verification V2.ipynb,431,एक फ़ंक्शन लिखें जो दो सूचियाँ लेता है और यदि उनमें कम से कम एक सामान्य तत्व है तो सत्य लौटाता है।,"def common_element(list1, list2):
     result = False
     for x in list1:
         for y in list2:
             if x == y:
                 result = True
                 return result",[],"['assert common_element([1,2,3,4,5], [5,6,7,8,9])==True', 'assert common_element([1,2,3,4,5], [6,7,8,9])==None', ""assert common_element(['a','b','c'], ['d','b','e'])==True""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो सूचियाँ लेता है और यदि उनमें कम से कम एक सामान्य तत्व है तो सत्य लौटाता है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो दो सूचियाँ लेता है और यदि उनमें कम से कम एक सामान्य तत्व है तो सत्य लौटाता है।



































































"
213,charlessutton@: Benchmark Questions Verification V2.ipynb,432,एक समलंब की औसत लंबाई ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def median_trapezium(base1,base2,height):
 median = 0.5 * (base1+ base2)
 return median",[],"['assert median_trapezium(15,25,35)==20', 'assert median_trapezium(10,20,30)==15', 'assert median_trapezium(6,9,4)==7.5']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक समलंब की औसत लंबाई ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक समलंब की औसत लंबाई ज्ञात करने के लिए एक फ़ंक्शन लिखें।



































































"
214,charlessutton@: Benchmark Questions Verification V2.ipynb,433,यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या दर्ज की गई संख्या दिए गए सरणी के तत्वों से अधिक है।,"def check_greater(arr, number):
  arr.sort()
  return number > arr[-1]",[],"['assert check_greater([1, 2, 3, 4, 5], 4) == False', 'assert check_greater([2, 3, 4, 5, 6], 8) == True', 'assert check_greater([9, 7, 4, 8, 6, 1], 11) == True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या दर्ज की गई संख्या दिए गए सरणी के तत्वों से अधिक है।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि क्या दर्ज की गई संख्या दिए गए सरणी के तत्वों से अधिक है।



































































"
215,charlessutton@: Benchmark Questions Verification V2.ipynb,434,एक ऐसा फ़ंक्शन लिखें जो उस स्ट्रिंग से मेल खाता हो जिसमें a के बाद एक या अधिक b हो।,"import re
def text_match_one(text):
        patterns = 'ab+?'
        if re.search(patterns,  text):
                return True
        else:
                return False
",[],"['assert text_match_one(""ac"")==False', 'assert text_match_one(""dc"")==False', 'assert text_match_one(""abba"")==True']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक ऐसा फ़ंक्शन लिखें जो उस स्ट्रिंग से मेल खाता हो जिसमें a के बाद एक या अधिक b हो।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक ऐसा फ़ंक्शन लिखें जो उस स्ट्रिंग से मेल खाता हो जिसमें a के बाद एक या अधिक b हो।

>>> def count_ab(s):
...     return s.count('a') + s.count('b')
...
>>> count_ab('aabbbba')
6
>>> count_ab('aabb')
4
>>> count_ab('a')
1
"
216,charlessutton@: Benchmark Questions Verification V2.ipynb,435,किसी दी गई संख्या का अंतिम अंक ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def last_Digit(n) :
    return (n % 10) ",[],"['assert last_Digit(123) == 3', 'assert last_Digit(25) == 5', 'assert last_Digit(30) == 0']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या का अंतिम अंक ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या का अंतिम अंक ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

<</CODE>>

def last_digit(n):
    return n % 10

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<"
217,charlessutton@: Benchmark Questions Verification V2.ipynb,436,किसी सूची में ऋणात्मक संख्याओं को लौटाने के लिए एक पायथन फ़ंक्शन लिखें।,"def neg_nos(list1):
  out = []
  for num in list1: 
    if num < 0: 
      out.append(num)
  return out ",[],"['assert neg_nos([-1,4,5,-6]) == [-1,-6]', 'assert neg_nos([-1,-2,3,4]) == [-1,-2]', 'assert neg_nos([-7,-6,8,9]) == [-7,-6]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में ऋणात्मक संख्याओं को लौटाने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में ऋणात्मक संख्याओं को लौटाने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की तरह से एक स्ट्रिंग की जांच करें।

सूची में सभी संख्याओ"
218,charlessutton@: Benchmark Questions Verification V2.ipynb,437,एक स्ट्रिंग में विषम वर्णों को हटाने के लिए एक फ़ंक्शन लिखें।,"def remove_odd(str1):
 str2 = ''
 for i in range(1, len(str1) + 1):
    if(i % 2 == 0):
        str2 = str2 + str1[i - 1]
 return str2",[],"['assert remove_odd(""python"")==(""yhn"")', 'assert remove_odd(""program"")==(""rga"")', 'assert remove_odd(""language"")==(""agae"")']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक स्ट्रिंग में विषम वर्णों को हटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक स्ट्रिंग में विषम वर्णों को हटाने के लिए एक फ़ंक्शन लिखें।

>>> def remove_special_chars(s):
...     return ''.join(i for i in s if not i.isalnum())
...
>>> remove_special_chars('Hello, World!')
'Hello World'
>>> remove_special_chars('Hello"
219,charlessutton@: Benchmark Questions Verification V2.ipynb,438,द्विदिशात्मक टपल जोड़े की गणना करने के लिए एक फ़ंक्शन लिखें।,"def count_bidirectional(test_list):
  res = 0
  for idx in range(0, len(test_list)):
    for iidx in range(idx + 1, len(test_list)):
      if test_list[iidx][0] == test_list[idx][1] and test_list[idx][1] == test_list[iidx][0]:
        res += 1
  return res",[],"['assert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 1), (6, 5), (2, 1)] ) == 3', 'assert count_bidirectional([(5, 6), (1, 3), (6, 5), (9, 1), (6, 5), (2, 1)] ) == 2', 'assert count_bidirectional([(5, 6), (1, 2), (6, 5), (9, 2), (6, 5), (2, 1)] ) == 4']","<s><<SYS>>
Provide answers in Python
<</SYS>>

द्विदिशात्मक टपल जोड़े की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

द्विदिशात्मक टपल जोड़े की गणना करने के लिए एक फ़ंक्शन लिखें।

स्थान पर टपल जोड़े की गणना करने के लिए एक फ़ंक्शन लिखें।

स्"
220,charlessutton@: Benchmark Questions Verification V2.ipynb,439,एकाधिक पूर्णांकों की सूची को एक पूर्णांक में जोड़ने के लिए एक फ़ंक्शन लिखें।,"def multiple_to_single(L):
  x = int("""".join(map(str, L)))
  return x",[],"['assert multiple_to_single([11, 33, 50])==113350', 'assert multiple_to_single([-1,2,3,4,5,6])==-123456', 'assert multiple_to_single([10,15,20,25])==10152025']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एकाधिक पूर्णांकों की सूची को एक पूर्णांक में जोड़ने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एकाधिक पूर्णांकों की सूची को एक पूर्णांक में जोड़ने के लिए एक फ़ंक्शन लिखें।

>>> def add_numbers(numbers):
...     total = 0
...     for number in numbers:
...         total += number
...     return total
...
>>> add_numbers([1, 2, 3, 4, 5])
15
>>> add_"
221,charlessutton@: Benchmark Questions Verification V2.ipynb,440,किसी दिए गए वाक्य में पहला क्रियाविशेषण और उनका स्थान खोजने के लिए एक फ़ंक्शन लिखें।,"import re
def find_adverb_position(text):
 for m in re.finditer(r""\w+ly"", text):
    return (m.start(), m.end(), m.group(0))",[],"['assert find_adverb_position(""clearly!! we can see the sky"")==(0, 7, \'clearly\')', 'assert find_adverb_position(""seriously!! there are many roses"")==(0, 9, \'seriously\')', 'assert find_adverb_position(""unfortunately!! sita is going to home"")==(0, 13, \'unfortunately\')']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए वाक्य में पहला क्रियाविशेषण और उनका स्थान खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए वाक्य में पहला क्रियाविशेषण और उनका स्थान खोजने के लिए एक फ़ंक्शन लिखें।

<</> क्रियाविशेषण और स्थान खोजने के लिए एक फ़ंक्शन लिखें।

"
222,charlessutton@: Benchmark Questions Verification V2.ipynb,441,किसी दिए गए आकार के घन का पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def surfacearea_cube(l):
  surfacearea= 6*l*l
  return surfacearea",[],"['assert surfacearea_cube(5)==150', 'assert surfacearea_cube(3)==54', 'assert surfacearea_cube(10)==600']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए आकार के घन का पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए आकार के घन का पृष्ठीय क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def area(x):
    return x*x

<</CODE>>

<</SYS>>

<</CODE>>

def area(x):
    return x*x

<</CODE>>

<</SYS>>

<</"
223,charlessutton@: Benchmark Questions Verification V2.ipynb,442,पूर्णांकों की किसी सारणी में धनात्मक संख्याओं का अनुपात ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"from array import array
def positive_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x > 0:
            n1 += 1
        else:
          None
    return round(n1/n,2)",[],"['assert positive_count([0, 1, 2, -1, -5, 6, 0, -3, -2, 3, 4, 6, 8])==0.54', 'assert positive_count([2, 1, 2, -1, -5, 6, 4, -3, -2, 3, 4, 6, 8])==0.69', 'assert positive_count([2, 4, -6, -9, 11, -12, 14, -5, 17])==0.56']","<s><<SYS>>
Provide answers in Python
<</SYS>>

पूर्णांकों की किसी सारणी में धनात्मक संख्याओं का अनुपात ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

पूर्णांकों की किसी सारणी में धनात्मक संख्याओं का अनुपात ज्ञात करने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>
>>> find_prime_factors(13195)
[5, 7, 13, 29]
</pre>
<b>Note</b>
<ul>
<li>सारण"
224,charlessutton@: Benchmark Questions Verification V2.ipynb,443,दी गई सूची से सबसे बड़ी ऋणात्मक संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def largest_neg(list1): 
    max = list1[0] 
    for x in list1: 
        if x < max : 
             max = x  
    return max",[],"['assert largest_neg([1,2,3,-4,-6]) == -6', 'assert largest_neg([1,2,3,-8,-9]) == -9', 'assert largest_neg([1,2,3,4,-1]) == -1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची से सबसे बड़ी ऋणात्मक संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई सूची से सबसे बड़ी ऋणात्मक संख्या ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

सूची की तरह से एक स्ट्रिंग की तरह की एक स्ट्रिंग देने के लिए एक ��"
225,charlessutton@: Benchmark Questions Verification V2.ipynb,444,दी गई टुपल सूची में प्रत्येक टुपल को k से ट्रिम करने के लिए एक फ़ंक्शन लिखें।,"def trim_tuple(test_list, K):
  res = []
  for ele in test_list:
    N = len(ele)
    res.append(tuple(list(ele)[K: N - K]))
  return (str(res)) ",[],"[""assert trim_tuple([(5, 3, 2, 1, 4), (3, 4, 9, 2, 1),(9, 1, 2, 3, 5), (4, 8, 2, 1, 7)], 2) == '[(2,), (9,), (2,), (2,)]'"", ""assert trim_tuple([(5, 3, 2, 1, 4), (3, 4, 9, 2, 1), (9, 1, 2, 3, 5), (4, 8, 2, 1, 7)], 1) == '[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]'"", ""assert trim_tuple([(7, 8, 4, 9), (11, 8, 12, 4),(4, 1, 7, 8), (3, 6, 9, 7)], 1) == '[(8, 4), (8, 12), (1, 7), (6, 9)]'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई टुपल सूची में प्रत्येक टुपल को k से ट्रिम करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई टुपल सूची में प्रत्येक टुपल को k से ट्रिम करने के लिए एक फ़ंक्शन लिखें।











































































"
226,charlessutton@: Benchmark Questions Verification V2.ipynb,445,दिए गए दो टुपल्स में टुपल तत्वों का सूचकांकवार गुणन करने के लिए एक फ़ंक्शन लिखें।,"def index_multiplication(test_tup1, test_tup2):
  res = tuple(tuple(a * b for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ",[],"['assert index_multiplication(((1, 3), (4, 5), (2, 9), (1, 10)),((6, 7), (3, 9), (1, 1), (7, 3)) ) == ((6, 21), (12, 45), (2, 9), (7, 30))', 'assert index_multiplication(((2, 4), (5, 6), (3, 10), (2, 11)),((7, 8), (4, 10), (2, 2), (8, 4)) ) == ((14, 32), (20, 60), (6, 20), (16, 44))', 'assert index_multiplication(((3, 5), (6, 7), (4, 11), (3, 12)),((8, 9), (5, 11), (3, 3), (9, 5)) ) == ((24, 45), (30, 77), (12, 33), (27, 60))']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो टुपल्स में टुपल तत्वों का सूचकांकवार गुणन करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए दो टुपल्स में टुपल तत्वों का सूचकांकवार गुणन करने के लिए एक फ़ंक्शन लिखें।

>>> def tup_sum(tup1, tup2):
...     return tuple(map(sum, zip(tup1, tup2)))
...
>>> tup_sum((1, 2, 3), (4, 5, 6))
(5, 7, 9)
"
227,charlessutton@: Benchmark Questions Verification V2.ipynb,446,टुपल में सूची के सभी तत्वों की घटना को गिनने के लिए एक पायथन फ़ंक्शन लिखें।,"from collections import Counter 
def count_Occurrence(tup, lst): 
    count = 0
    for item in tup: 
        if item in lst: 
            count+= 1 
    return count  ",[],"[""assert count_Occurrence(('a', 'a', 'c', 'b', 'd'),['a', 'b'] ) == 3"", 'assert count_Occurrence((1, 2, 3, 1, 4, 6, 7, 1, 4),[1, 4, 7]) == 6', 'assert count_Occurrence((1,2,3,4,5,6),[1,2]) == 2']","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल में सूची के सभी तत्वों की घटना को गिनने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

टुपल में सूची के सभी तत्वों की घटना को गिनने के लिए एक पायथन फ़ंक्शन लिखें।

सूची के तत्व को एक पायथन स्ट्रिंग के रूप में प्राप्त करें।

सूची के तत्व"
228,charlessutton@: Benchmark Questions Verification V2.ipynb,447,किसी सूची में अलग-अलग तत्वों के घन खोजने के लिए एक फ़ंक्शन लिखें।,"def cube_nums(nums):
 cube_nums = list(map(lambda x: x ** 3, nums))
 return cube_nums",[],"['assert cube_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]', 'assert cube_nums([10,20,30])==([1000, 8000, 27000])', 'assert cube_nums([12,15])==([1728, 3375])']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में अलग-अलग तत्वों के घन खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी सूची में अलग-अलग तत्वों के घन खोजने के लिए एक फ़ंक्शन लिखें।

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>
"
229,charlessutton@: Benchmark Questions Verification V2.ipynb,448,पेरिन संख्याओं के योग की गणना करने के लिए एक फ़ंक्शन लिखें।,"def cal_sum(n): 
	a = 3
	b = 0
	c = 2
	if (n == 0): 
		return 3
	if (n == 1): 
		return 3
	if (n == 2): 
		return 5
	sum = 5
	while (n > 2): 
		d = a + b 
		sum = sum + d 
		a = b 
		b = c 
		c = d 
		n = n-1
	return sum",[],"['assert cal_sum(9) == 49', 'assert cal_sum(10) == 66', 'assert cal_sum(11) == 88']","<s><<SYS>>
Provide answers in Python
<</SYS>>

पेरिन संख्याओं के योग की गणना करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

पेरिन संख्याओं के योग की गणना करने के लिए एक फ़ंक्शन लिखें।

प्रारूप:

def फंक्शन_नाम(संख्या_1, संख्या_2):
    # कोड लिखें

उदाहरण:

def ��"
230,charlessutton@: Benchmark Questions Verification V2.ipynb,450,स्ट्रिंग मानों की दी गई सूची से स्ट्रिंग के निर्दिष्ट आकार को निकालने के लिए एक फ़ंक्शन लिखें।,"def extract_string(str, l):
    result = [e for e in str if len(e) == l] 
    return result",[],"[""assert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,8)==['practice', 'solution']"", ""assert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,6)==['Python']"", ""assert extract_string(['Python', 'list', 'exercises', 'practice', 'solution'] ,9)==['exercises']""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

स्ट्रिंग मानों की दी गई सूची से स्ट्रिंग के निर्दिष्ट आकार को निकालने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

स्ट्रिंग मानों की दी गई सूची से स्ट्रिंग के निर्दिष्ट आकार को निकालने के लिए एक फ़ंक्शन लिखें।

स्ट्रिंग मानों की दी गई सूची के पास एक स्ट्रिंग की एक स्ट्रिंग को नि"
231,charlessutton@: Benchmark Questions Verification V2.ipynb,451,दी गई स्ट्रिंग से सभी रिक्त स्थान हटाने के लिए एक फ़ंक्शन लिखें।,"import re
def remove_whitespaces(text1):
  return (re.sub(r'\s+', '',text1))",[],"[""assert remove_whitespaces(' Google    Flutter ') == 'GoogleFlutter'"", ""assert remove_whitespaces(' Google    Dart ') == 'GoogleDart'"", ""assert remove_whitespaces(' iOS    Swift ') == 'iOSSwift'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई स्ट्रिंग से सभी रिक्त स्थान हटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई स्ट्रिंग से सभी रिक्त स्थान हटाने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</"
232,charlessutton@: Benchmark Questions Verification V2.ipynb,452,एक फ़ंक्शन लिखें जो बिक्री पर हानि की राशि देता है यदि दी गई राशि में हानि है अन्यथा 0 लौटाएं।,"def loss_amount(actual_cost,sale_amount): 
  if(sale_amount > actual_cost):
    amount = sale_amount - actual_cost
    return amount
  else:
    return 0",[],"['assert loss_amount(1500,1200)==0', 'assert loss_amount(100,200)==100', 'assert loss_amount(2000,5000)==3000']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो बिक्री पर हानि की राशि देता है यदि दी गई राशि में हानि है अन्यथा 0 लौटाएं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो बिक्री पर हानि की राशि देता है यदि दी गई राशि में हानि है अन्यथा 0 लौटाएं।











































































"
233,charlessutton@: Benchmark Questions Verification V2.ipynb,453,किसी संख्या के सम गुणनखंडों का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"import math 
def sumofFactors(n) : 
    if (n % 2 != 0) : 
        return 0
    res = 1
    for i in range(2, (int)(math.sqrt(n)) + 1) :    
        count = 0
        curr_sum = 1
        curr_term = 1
        while (n % i == 0) : 
            count= count + 1
            n = n // i 
            if (i == 2 and count == 1) : 
                curr_sum = 0
            curr_term = curr_term * i 
            curr_sum = curr_sum + curr_term 
        res = res * curr_sum  
    if (n >= 2) : 
        res = res * (1 + n) 
    return res",[],"['assert sumofFactors(18) == 26', 'assert sumofFactors(30) == 48', 'assert sumofFactors(6) == 8']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी संख्या के सम गुणनखंडों का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी संख्या के सम गुणनखंडों का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

<</> क्विज़ के लिए एक स्वाइप का उपयोग करें।

<</> को स्वाइप करने क"
234,charlessutton@: Benchmark Questions Verification V2.ipynb,454,एक फ़ंक्शन लिखें जो &#39;z&#39; वाले शब्द से मेल खाता हो।,"import re
def text_match_wordz(text):
        patterns = '\w*z.\w*'
        if re.search(patterns,  text):
                return True
        else:
                return False",[],"['assert text_match_wordz(""pythonz."")==True', 'assert text_match_wordz(""xyz."")==True', 'assert text_match_wordz(""  lang  ."")==False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो &#39;z&#39; वाले शब्द से मेल खाता हो।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक फ़ंक्शन लिखें जो &#39;z&#39; वाले शब्द से मेल खाता हो।

<b>Example</b>:
<p>
<b>Input</b><br/>
<i>z</i><br/>
<b>Output</b><br/>
<i>z</i>
</p>
<b>Input</b><br/>
<i>zzz</i><br/>"
235,charlessutton@: Benchmark Questions Verification V2.ipynb,455,यह जाँचने के लिए एक फ़ंक्शन लिखें कि दी गई माह संख्या में 31 दिन हैं या नहीं।,"def check_monthnumb_number(monthnum2):
  if(monthnum2==1 or monthnum2==3 or monthnum2==5 or monthnum2==7 or monthnum2==8 or monthnum2==10 or monthnum2==12):
    return True
  else:
    return False",[],"['assert check_monthnumb_number(5)==True', 'assert check_monthnumb_number(2)==False', 'assert check_monthnumb_number(6)==False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जाँचने के लिए एक फ़ंक्शन लिखें कि दी गई माह संख्या में 31 दिन हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जाँचने के लिए एक फ़ंक्शन लिखें कि दी गई माह संख्या में 31 दिन हैं या नहीं।











































































"
236,charlessutton@: Benchmark Questions Verification V2.ipynb,456,स्ट्रिंग मानों की दी गई सूची में प्रत्येक स्ट्रिंग को उलटने के लिए एक फ़ंक्शन लिखें।,"def reverse_string_list(stringlist):
    result = [x[::-1] for x in stringlist]
    return result",[],"[""assert reverse_string_list(['Red', 'Green', 'Blue', 'White', 'Black'])==['deR', 'neerG', 'eulB', 'etihW', 'kcalB']"", ""assert reverse_string_list(['john','amal','joel','george'])==['nhoj','lama','leoj','egroeg']"", ""assert reverse_string_list(['jack','john','mary'])==['kcaj','nhoj','yram']""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

स्ट्रिंग मानों की दी गई सूची में प्रत्येक स्ट्रिंग को उलटने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

स्ट्रिंग मानों की दी गई सूची में प्रत्येक स्ट्रिंग को उलटने के लिए एक फ़ंक्शन लिखें।

<b>Example</b>
<pre>
<b>Input</b>
3
abc
def
ghi
<b>Output</b>
abc
def
ghi
</pre>
<b>Explanation</b>
<b>Note</b>: स्ट्रिंग"
237,charlessutton@: Benchmark Questions Verification V2.ipynb,457,न्यूनतम लंबाई वाली उपसूची ढूंढने के लिए एक पायथन फ़ंक्शन लिखें।,"def Find_Min(lst): 
    return min(lst, key=len) ",[],"['assert Find_Min([[1],[1,2],[1,2,3]]) == [1]', 'assert Find_Min([[1,1],[1,1,1],[1,2,7,8]]) == [1,1]', ""assert Find_Min([['x'],['x','y'],['x','y','z']]) == ['x']""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूनतम लंबाई वाली उपसूची ढूंढने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

न्यूनतम लंबाई वाली उपसूची ढूंढने के लिए एक पायथन फ़ंक्शन लिखें।

स्वर्ग के लिए एक स्वर्ग नाम देने के लिए एक फ़ंक्शन लिखें।

स्वर्"
238,charlessutton@: Benchmark Questions Verification V2.ipynb,458,एक आयत का क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def rectangle_area(l,b):
  area=l*b
  return area",[],"['assert rectangle_area(10,20)==200', 'assert rectangle_area(10,5)==50', 'assert rectangle_area(4,2)==8']","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक आयत का क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

एक आयत का क्षेत्रफल ज्ञात करने के लिए एक फ़ंक्शन लिखें।











































































"
239,charlessutton@: Benchmark Questions Verification V2.ipynb,459,किसी दिए गए स्ट्रिंग से अपरकेस सबस्ट्रिंग को हटाने के लिए एक फ़ंक्शन लिखें।,"import re
def remove_uppercase(str1):
  return re.sub('[A-Z]', '', str1)",[],"[""assert remove_uppercase('cAstyoUrFavoRitETVshoWs') == 'cstyoravoitshos'"", ""assert remove_uppercase('wAtchTheinTernEtrAdIo') == 'wtchheinerntrdo'"", ""assert remove_uppercase('VoicESeaRchAndreComMendaTionS') == 'oiceachndreomendaion'""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग से अपरकेस सबस्ट्रिंग को हटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग से अपरकेस सबस्ट्रिंग को हटाने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</"
240,charlessutton@: Benchmark Questions Verification V2.ipynb,460,प्रत्येक उपसूची का पहला तत्व प्राप्त करने के लिए एक पायथन फ़ंक्शन लिखें।,"def Extract(lst): 
    return [item[0] for item in lst] ",[],"['assert Extract([[1, 2], [3, 4, 5], [6, 7, 8, 9]]) == [1, 3, 6]', 'assert Extract([[1,2,3],[4, 5]]) == [1,4]', 'assert Extract([[9,8,1],[1,2]]) == [9,1]']","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रत्येक उपसूची का पहला तत्व प्राप्त करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

प्रत्येक उपसूची का पहला तत्व प्राप्त करने के लिए एक पायथन फ़ंक्शन लिखें।

>>> def first(iterable):
...     return iterable[0]
...
>>> first([1, 2, 3])
1
>>> first('hello')
'h'
>>> first({1, 2, "
241,charlessutton@: Benchmark Questions Verification V2.ipynb,461,किसी दिए गए स्ट्रिंग में अपर केस वर्णों को गिनने के लिए एक पायथन फ़ंक्शन लिखें।,"def upper_ctr(str):
    upper_ctr = 0
    for i in range(len(str)):
          if str[i] >= 'A' and str[i] <= 'Z': upper_ctr += 1
          return upper_ctr",[],"[""assert upper_ctr('PYthon') == 1"", ""assert upper_ctr('BigData') == 1"", ""assert upper_ctr('program') == 0""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग में अपर केस वर्णों को गिनने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग में अपर केस वर्णों को गिनने के लिए एक पायथन फ़ंक्शन लिखें।

<</> केस वर्णों को स्ट्रिंग में स्थान निर्धारित करें।

<</"
242,charlessutton@: Benchmark Questions Verification V2.ipynb,462,किसी दी गई सूची के तत्वों के सभी संभावित संयोजनों को खोजने के लिए एक फ़ंक्शन लिखें।,"def combinations_list(list1):
    if len(list1) == 0:
        return [[]]
    result = []
    for el in combinations_list(list1[1:]):
        result += [el, el+[list1[0]]]
    return result",[],"[""assert combinations_list(['orange', 'red', 'green', 'blue'])==[[], ['orange'], ['red'], ['red', 'orange'], ['green'], ['green', 'orange'], ['green', 'red'], ['green', 'red', 'orange'], ['blue'], ['blue', 'orange'], ['blue', 'red'], ['blue', 'red', 'orange'], ['blue', 'green'], ['blue', 'green', 'orange'], ['blue', 'green', 'red'], ['blue', 'green', 'red', 'orange']]"", ""assert combinations_list(['red', 'green', 'blue', 'white', 'black', 'orange'])==[[], ['red'], ['green'], ['green', 'red'], ['blue'], ['blue', 'red'], ['blue', 'green'], ['blue', 'green', 'red'], ['white'], ['white', 'red'], ['white', 'green'], ['white', 'green', 'red'], ['white', 'blue'], ['white', 'blue', 'red'], ['white', 'blue', 'green'], ['white', 'blue', 'green', 'red'], ['black'], ['black', 'red'], ['black', 'green'], ['black', 'green', 'red'], ['black', 'blue'], ['black', 'blue', 'red'], ['black', 'blue', 'green'], ['black', 'blue', 'green', 'red'], ['black', 'white'], ['black', 'white', 'red'], ['black', 'white', 'green'], ['black', 'white', 'green', 'red'], ['black', 'white', 'blue'], ['black', 'white', 'blue', 'red'], ['black', 'white', 'blue', 'green'], ['black', 'white', 'blue', 'green', 'red'], ['orange'], ['orange', 'red'], ['orange', 'green'], ['orange', 'green', 'red'], ['orange', 'blue'], ['orange', 'blue', 'red'], ['orange', 'blue', 'green'], ['orange', 'blue', 'green', 'red'], ['orange', 'white'], ['orange', 'white', 'red'], ['orange', 'white', 'green'], ['orange', 'white', 'green', 'red'], ['orange', 'white', 'blue'], ['orange', 'white', 'blue', 'red'], ['orange', 'white', 'blue', 'green'], ['orange', 'white', 'blue', 'green', 'red'], ['orange', 'black'], ['orange', 'black', 'red'], ['orange', 'black', 'green'], ['orange', 'black', 'green', 'red'], ['orange', 'black', 'blue'], ['orange', 'black', 'blue', 'red'], ['orange', 'black', 'blue', 'green'], ['orange', 'black', 'blue', 'green', 'red'], ['orange', 'black', 'white'], ['orange', 'black', 'white', 'red'], ['orange', 'black', 'white', 'green'], ['orange', 'black', 'white', 'green', 'red'], ['orange', 'black', 'white', 'blue'], ['orange', 'black', 'white', 'blue', 'red'], ['orange', 'black', 'white', 'blue', 'green'], ['orange', 'black', 'white', 'blue', 'green', 'red']]"", ""assert combinations_list(['red', 'green', 'black', 'orange'])==[[], ['red'], ['green'], ['green', 'red'], ['black'], ['black', 'red'], ['black', 'green'], ['black', 'green', 'red'], ['orange'], ['orange', 'red'], ['orange', 'green'], ['orange', 'green', 'red'], ['orange', 'black'], ['orange', 'black', 'red'], ['orange', 'black', 'green'], ['orange', 'black', 'green', 'red']]""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची के तत्वों के सभी संभावित संयोजनों को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई सूची के तत्वों के सभी संभावित संयोजनों को खोजने के लिए एक फ़ंक्शन लिखें।

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<</>

<"
243,charlessutton@: Benchmark Questions Verification V2.ipynb,463,दिए गए सरणी का अधिकतम उत्पाद उपसरणी खोजने के लिए एक फ़ंक्शन लिखें।,"def max_subarray_product(arr):
	n = len(arr)
	max_ending_here = 1
	min_ending_here = 1
	max_so_far = 0
	flag = 0
	for i in range(0, n):
		if arr[i] > 0:
			max_ending_here = max_ending_here * arr[i]
			min_ending_here = min (min_ending_here * arr[i], 1)
			flag = 1
		elif arr[i] == 0:
			max_ending_here = 1
			min_ending_here = 1
		else:
			temp = max_ending_here
			max_ending_here = max (min_ending_here * arr[i], 1)
			min_ending_here = temp * arr[i]
		if (max_so_far < max_ending_here):
			max_so_far = max_ending_here
	if flag == 0 and max_so_far == 0:
		return 0
	return max_so_far",[],"['assert max_subarray_product([1, -2, -3, 0, 7, -8, -2]) == 112', 'assert max_subarray_product([6, -3, -10, 0, 2]) == 180', 'assert max_subarray_product([-2, -40, 0, -2, -3]) == 80']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए सरणी का अधिकतम उत्पाद उपसरणी खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए सरणी का अधिकतम उत्पाद उपसरणी खोजने के लिए एक फ़ंक्शन लिखें।

























































"
244,charlessutton@: Benchmark Questions Verification V2.ipynb,464,यह जांचने के लिए एक फ़ंक्शन लिखें कि शब्दकोश में सभी मान समान हैं या नहीं।,"def check_value(dict, n):
    result = all(x == n for x in dict.values()) 
    return result",[],"[""assert check_value({'Cierra Vega': 12, 'Alden Cantrell': 12, 'Kierra Gentry': 12, 'Pierre Cox': 12},10)==False"", ""assert check_value({'Cierra Vega': 12, 'Alden Cantrell': 12, 'Kierra Gentry': 12, 'Pierre Cox': 12},12)==True"", ""assert check_value({'Cierra Vega': 12, 'Alden Cantrell': 12, 'Kierra Gentry': 12, 'Pierre Cox': 12},5)==False""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि शब्दकोश में सभी मान समान हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक फ़ंक्शन लिखें कि शब्दकोश में सभी मान समान हैं या नहीं।

<b>Example</b>:
<pre>
>>> is_palindrome(""noon"")
True
>>> is_palindrome(""racecar"")
True
>>> is_palindrome(""daily"")
False
</pre"
245,charlessutton@: Benchmark Questions Verification V2.ipynb,465,किसी दिए गए शब्दकोश से खाली आइटम हटाने के लिए एक फ़ंक्शन लिखें।,"def drop_empty(dict1):
  dict1 = {key:value for (key, value) in dict1.items() if value is not None}
  return dict1",[],"[""assert drop_empty({'c1': 'Red', 'c2': 'Green', 'c3':None})=={'c1': 'Red', 'c2': 'Green'}"", ""assert drop_empty({'c1': 'Red', 'c2': None, 'c3':None})=={'c1': 'Red'}"", ""assert drop_empty({'c1': None, 'c2': 'Green', 'c3':None})=={ 'c2': 'Green'}""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए शब्दकोश से खाली आइटम हटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए शब्दकोश से खाली आइटम हटाने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def remove_empty_items(items):
    return [item for item in items if item!= """"]

<</CODE>>

<</SYS>>

<</CODE>>

>>> remove_empty_"
246,charlessutton@: Benchmark Questions Verification V2.ipynb,468,उस सरणी के बढ़ते क्रम की संख्याओं को गुणा करके बनने वाले अधिकतम उत्पाद को खोजने के लिए एक फ़ंक्शन लिखें।,"def max_product(arr):   
  n = len(arr)
  mpis = arr[:]
  for i in range(n): 
    current_prod = arr[i]
    j = i + 1
    while j < n:
      if arr[j-1] > arr[j]: 
        break
      current_prod *= arr[j]
      if current_prod > mpis[j]:
        mpis[j] = current_prod 
      j = j + 1
  return max(mpis)",[],"['assert max_product([3, 100, 4, 5, 150, 6]) == 3000', 'assert max_product([4, 42, 55, 68, 80]) == 50265600', 'assert max_product([10, 22, 9, 33, 21, 50, 41, 60]) == 2460']","<s><<SYS>>
Provide answers in Python
<</SYS>>

उस सरणी के बढ़ते क्रम की संख्याओं को गुणा करके बनने वाले अधिकतम उत्पाद को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

उस सरणी के बढ़ते क्रम की संख्याओं को गुणा करके बनने वाले अधिकतम उत्पाद को खोजने के लिए एक फ़ंक्शन लिखें।

























































"
247,charlessutton@: Benchmark Questions Verification V2.ipynb,470,दिए गए टपल के पड़ोसी तत्वों का जोड़ीवार योग ज्ञात करने के लिए एक फ़ंक्शन लिखें।,"def add_pairwise(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ",[],"['assert add_pairwise((1, 5, 7, 8, 10)) == (6, 12, 15, 18)', 'assert add_pairwise((2, 6, 8, 9, 11)) == (8, 14, 17, 20)', 'assert add_pairwise((3, 7, 9, 10, 12)) == (10, 16, 19, 22)']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टपल के पड़ोसी तत्वों का जोड़ीवार योग ज्ञात करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दिए गए टपल के पड़ोसी तत्वों का जोड़ीवार योग ज्ञात करने के लिए एक फ़ंक्शन लिखें।

स्थान पर एक प्रार्थना की जांच करने के लिए एक फ़ं"
248,charlessutton@: Benchmark Questions Verification V2.ipynb,471,सरणी गुणन मॉड्यूलो एन के उत्पाद को खोजने के लिए एक पायथन फ़ंक्शन लिखें।,"def find_remainder(arr, n): 
    mul = 1
    for i in range(len(arr)):  
        mul = (mul * (arr[i] % n)) % n 
    return mul % n ",[],"['assert find_remainder([ 100, 10, 5, 25, 35, 14 ],11) ==9', 'assert find_remainder([1,1,1],1) == 0', 'assert find_remainder([1,2,1],2) == 0']","<s><<SYS>>
Provide answers in Python
<</SYS>>

सरणी गुणन मॉड्यूलो एन के उत्पाद को खोजने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

सरणी गुणन मॉड्यूलो एन के उत्पाद को खोजने के लिए एक पायथन फ़ंक्शन लिखें।

























































"
249,charlessutton@: Benchmark Questions Verification V2.ipynb,472,यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दी गई सूची में लगातार संख्याएं हैं या नहीं।,"def check_Consecutive(l): 
    return sorted(l) == list(range(min(l),max(l)+1)) ",[],"['assert check_Consecutive([1,2,3,4,5]) == True', 'assert check_Consecutive([1,2,3,5,6]) == False', 'assert check_Consecutive([1,2,1]) == False']","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दी गई सूची में लगातार संख्याएं हैं या नहीं।","<s><<SYS>>
Provide answers in Python
<</SYS>>

यह जांचने के लिए एक पायथन फ़ंक्शन लिखें कि दी गई सूची में लगातार संख्याएं हैं या नहीं।

>>> def check_list(l):
...     if len(l) == 0:
...         return False
...     return True
>>> check_list([1, 2, 3])
True
>>> check_list([])"
250,charlessutton@: Benchmark Questions Verification V2.ipynb,473,दी गई टुपल सूची में तत्वों के क्रम की परवाह किए बिना उनके टुपल प्रतिच्छेदन को खोजने के लिए एक फ़ंक्शन लिखें।,"def tuple_intersection(test_list1, test_list2):
  res = set([tuple(sorted(ele)) for ele in test_list1]) & set([tuple(sorted(ele)) for ele in test_list2])
  return (res)",[],"['assert tuple_intersection([(3, 4), (5, 6), (9, 10), (4, 5)] , [(5, 4), (3, 4), (6, 5), (9, 11)]) == {(4, 5), (3, 4), (5, 6)}', 'assert tuple_intersection([(4, 1), (7, 4), (11, 13), (17, 14)] , [(1, 4), (7, 4), (16, 12), (10, 13)]) == {(4, 7), (1, 4)}', 'assert tuple_intersection([(2, 1), (3, 2), (1, 3), (1, 4)] , [(11, 2), (2, 3), (6, 2), (1, 3)]) == {(1, 3), (2, 3)}']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई टुपल सूची में तत्वों के क्रम की परवाह किए बिना उनके टुपल प्रतिच्छेदन को खोजने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई टुपल सूची में तत्वों के क्रम की परवाह किए बिना उनके टुपल प्रतिच्छेदन को खोजने के लिए एक फ़ंक्शन लिखें।

सूची के प्रति एक प्रतिच्छेदन को एक पार के रूप में "
251,charlessutton@: Benchmark Questions Verification V2.ipynb,474,किसी स्ट्रिंग में वर्णों को बदलने के लिए एक फ़ंक्शन लिखें।,"def replace_char(str1,ch,newch):
 str2 = str1.replace(ch, newch)
 return str2",[],"['assert replace_char(""polygon"",\'y\',\'l\')==(""pollgon"")', 'assert replace_char(""character"",\'c\',\'a\')==(""aharaater"")', 'assert replace_char(""python"",\'l\',\'a\')==(""python"")']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी स्ट्रिंग में वर्णों को बदलने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी स्ट्रिंग में वर्णों को बदलने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

def change_letters(string):
    new_string = """"
    for letter in string:
        if letter == ""a"":
            new_string += ""b""
        elif letter == ""b"":
            new"
252,charlessutton@: Benchmark Questions Verification V2.ipynb,475,किसी शब्दकोश को मूल्य के आधार पर क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।,"from collections import Counter
def sort_counter(dict1):
 x = Counter(dict1)
 sort_counter=x.most_common()
 return sort_counter",[],"[""assert sort_counter({'Math':81, 'Physics':83, 'Chemistry':87})==[('Chemistry', 87), ('Physics', 83), ('Math', 81)]"", ""assert sort_counter({'Math':400, 'Physics':300, 'Chemistry':250})==[('Math', 400), ('Physics', 300), ('Chemistry', 250)]"", ""assert sort_counter({'Math':900, 'Physics':1000, 'Chemistry':1250})==[('Chemistry', 1250), ('Physics', 1000), ('Math', 900)]""]","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी शब्दकोश को मूल्य के आधार पर क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी शब्दकोश को मूल्य के आधार पर क्रमबद्ध करने के लिए एक फ़ंक्शन लिखें।

<</> क्रमबद्ध करें और फ़ंक्शन को कहां लिखें।

<</> क्र"
253,charlessutton@: Benchmark Questions Verification V2.ipynb,476,किसी दिए गए सरणी में सबसे बड़े और सबसे छोटे मान का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def big_sum(nums):
      sum= max(nums)+min(nums)
      return sum",[],"['assert big_sum([1,2,3]) == 4', 'assert big_sum([-1,2,3,4]) == 3', 'assert big_sum([2,3,6]) == 8']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए सरणी में सबसे बड़े और सबसे छोटे मान का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए सरणी में सबसे बड़े और सबसे छोटे मान का योग ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

<</> क्विज से प्रश्न को पाना करें।

<b>Example</b>:
<pre>
>>> max_min([1, "
254,charlessutton@: Benchmark Questions Verification V2.ipynb,477,दी गई स्ट्रिंग को लोअर केस में बदलने के लिए एक पायथन फ़ंक्शन लिखें।,"def is_lower(string):
  return (string.lower())",[],"['assert is_lower(""InValid"") == ""invalid""', 'assert is_lower(""TruE"") == ""true""', 'assert is_lower(""SenTenCE"") == ""sentence""']","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई स्ट्रिंग को लोअर केस में बदलने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

दी गई स्ट्रिंग को लोअर केस में बदलने के लिए एक पायथन फ़ंक्शन लिखें।

स्ट्रिंग को एक स्ट्रिंग के साथ एक स्ट्रिंग का स्ट्री"
255,charlessutton@: Benchmark Questions Verification V2.ipynb,478,किसी दिए गए स्ट्रिंग से लोअरकेस सबस्ट्रिंग को हटाने के लिए एक फ़ंक्शन लिखें।,"import re
def remove_lowercase(str1):
 return re.sub('[a-z]', '', str1)",[],"['assert remove_lowercase(""PYTHon"")==(\'PYTH\')', 'assert remove_lowercase(""FInD"")==(\'FID\')', 'assert remove_lowercase(""STRinG"")==(\'STRG\')']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग से लोअरकेस सबस्ट्रिंग को हटाने के लिए एक फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दिए गए स्ट्रिंग से लोअरकेस सबस्ट्रिंग को हटाने के लिए एक फ़ंक्शन लिखें।

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</CODE>>

<</"
256,charlessutton@: Benchmark Questions Verification V2.ipynb,479,किसी दी गई संख्या का पहला अंक ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।,"def first_Digit(n) :  
    while n >= 10:  
        n = n / 10 
    return int(n) ",[],"['assert first_Digit(123) == 1', 'assert first_Digit(456) == 4', 'assert first_Digit(12) == 1']","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या का पहला अंक ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।","<s><<SYS>>
Provide answers in Python
<</SYS>>

किसी दी गई संख्या का पहला अंक ज्ञात करने के लिए एक पायथन फ़ंक्शन लिखें।

<</* पाइथन कोड यहाँ लिखें */>

<</* अंक का पहला प्राप्त करें */>

<</* उपयोगकर्ता को प्रश्न पूछे"
