{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNU4JwLuJpQmfn+yPp15I71"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","\n","# Mount Google Drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VHo4te0gbZ3s","executionInfo":{"status":"ok","timestamp":1697810326227,"user_tz":300,"elapsed":15148,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"d00b8ecc-15a6-4564-a8bf-412edfbc4371"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"5ILgeuONGuEs","outputId":"05d60135-73e4-45dc-ba58-164eb82d1c6f","executionInfo":{"status":"ok","timestamp":1697838002704,"user_tz":300,"elapsed":32256,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-40-233737132209>:74: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  summary_df = summary_df.append({\n","<ipython-input-40-233737132209>:74: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  summary_df = summary_df.append({\n"]},{"output_type":"stream","name":"stdout","text":["Code execution timed out for language en, index 23.\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-40-233737132209>:74: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  summary_df = summary_df.append({\n","<ipython-input-40-233737132209>:74: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  summary_df = summary_df.append({\n","<ipython-input-40-233737132209>:74: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  summary_df = summary_df.append({\n"]},{"output_type":"stream","name":"stdout","text":["Code execution timed out for language ru, index 113.\n","  Language Incomplete Code Syntax Errors Logical Errors All Tests Passed  \\\n","0       hi             197            44             15                1   \n","1    zh-cn              19           140             60               38   \n","2       en              11           135             59               51   \n","3       es              19           138             57               43   \n","4       ja              18           140             58               41   \n","5       ru              20           130             67               39   \n","\n","   Average Code Length  \n","0            76.066667  \n","1           102.831933  \n","2           110.483740  \n","3           105.172269  \n","4           101.523013  \n","5           106.637131  \n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-40-233737132209>:74: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n","  summary_df = summary_df.append({\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABNYAAAOmCAYAAAAn8BjwAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACXQElEQVR4nOzdd5hUhb3/8c8uTUCKKDVBRaNGsSEaxYpdVCKKSWwRS6yACrFhh2gwaNQrolgilkhIbBhrohghdsWgYiFiVDSC5NpWQFZw9/eHP/a6sXJcGMrr9TzzXPbMmXO+szfjzLz3zJmy6urq6gAAAAAAC6W81AMAAAAAwNJIWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAACigfqkHWBJUVVXl7bffTrNmzVJWVlbqcQAAAAAokerq6nz00Ufp0KFDysu//pg0YS3J22+/nY4dO5Z6DAAAAACWEG+++Wa+//3vf+06wlqSZs2aJfnsF9a8efMSTwMAAABAqVRUVKRjx441vejrCGtJzcc/mzdvLqwBAAAA8K1OF+bLCwAAAACgAGENAAAAAAoQ1gAAAACgAOdYAwAAAFjCffrpp5k3b16px1gmNGjQIPXq1auTbQlrAAAAAEuo6urqzJgxIx988EGpR1mmtGzZMu3atftWX1DwdYQ1AAAAgCXUgqjWpk2bNGnS5DuHoOVddXV15syZk5kzZyZJ2rdv/522J6wBAAAALIE+/fTTmqi28sorl3qcZUbjxo2TJDNnzkybNm2+08dCfXkBAAAAwBJowTnVmjRpUuJJlj0Lfqff9bx1whoAAADAEszHP+teXf1OhTUAAAAAKEBYAwAAAIAChDUAAAAAKEBYAwAAAFgGHHLIIenVq1epx1iuCGsAAAAAUICwBgAAALCMu+iii7LBBhukadOm6dixY4499tjMmjWr5vrrrrsuLVu2zF/+8pesu+66WXHFFbPbbrtl+vTpNevMnz8/xx13XFq2bJmVV145p5xySvr06VPrKLnVV189l1xySa19b7zxxjnnnHO+9SxJcvXVV6djx45p0qRJ9t5771x00UVp2bJlrXXuuOOObLLJJllhhRWyxhprZPDgwZk/f/53/l0tDGENAAAAYBlXXl6eSy+9NC+88EKuv/76PPjggzn55JNrrTNnzpxceOGFufHGGzNhwoRMmzYtJ554Ys31v/nNb3LTTTdl1KhReeSRR1JRUZGxY8fW+SyPPPJIjj766Bx//PGZNGlSdt5555x33nm1tvH3v/89Bx98cI4//vi8+OKLufLKK3Pdddd9Yb1FTVgDAAAAWMadcMIJ2X777bP66qtnhx12yLnnnps//elPtdaZN29eRo4cmU033TSbbLJJ+vXrl3HjxtVcP3z48AwaNCh77713fvjDH+ayyy77wlFkdTHL8OHD06NHj5x44olZe+21c+yxx6ZHjx61tjF48OCceuqp6dOnT9ZYY43svPPO+dWvfpUrr7xyoef5Luov1r0BAAAAsNg98MADGTp0aF5++eVUVFRk/vz5mTt3bubMmZMmTZokSZo0aZI111yz5jbt27fPzJkzkyQffvhh3nnnnfzoRz+qub5evXrp2rVrqqqq6nSWKVOmZO+99651mx/96Ee56667an5+9tln88gjj9Q6Qu3TTz/9wn1a1ByxBgAAALAMe/3117Pnnntmww03zK233pqJEydmxIgRSZJPPvmkZr0GDRrUul1ZWVmqq6sXal/l5eVfuM28efMWepZvMmvWrAwePDiTJk2quTz//PN55ZVXssIKKyzUzN9FScPa0KFDs9lmm6VZs2Zp06ZNevXqlSlTptRaZ+7cuenbt29WXnnlrLjiiundu3feeeedWutMmzYte+yxR5o0aZI2bdrkpJNOWuwnqwMAAABYEk2cODFVVVX57W9/my222CJrr7123n777YXaRosWLdK2bds89dRTNcs+/fTTPPPMM7XWa926da0vPKioqMhrr722ULOss846tfaT5As/b7LJJpkyZUp+8IMffOFSXr74cldJPwo6fvz49O3bN5tttlnmz5+f0047LbvssktefPHFNG3aNEkyYMCA3H333bn55pvTokWL9OvXL/vss08eeeSRJJ/9P3GPPfZIu3bt8uijj2b69Ok5+OCD06BBg/z6178u5d0DAAAAWKw+/PDDTJo0qdayVVZZJfPmzcvw4cPTs2fPPPLIIxk5cuRCb7t///4ZOnRofvCDH+SHP/xhhg8fnvfffz9lZWU16+ywww657rrr0rNnz7Rs2TJnnXVW6tWrV3P9D37wg2+cpX///tl2221z0UUXpWfPnnnwwQdz77331trPWWedlT333DOrrrpq9t1335SXl+fZZ5/N5MmTc+655y70fSuqpEes3XfffTnkkEPSuXPnbLTRRrnuuusybdq0TJw4Mcln/2P43e9+l4suuig77LBDunbtmlGjRuXRRx/N448/niT561//mhdffDG///3vs/HGG6dHjx751a9+lREjRizUIYQAAAAAS7uHHnooXbp0qXW58cYbc9FFF+U3v/lN1l9//dx0000ZOnToQm/7lFNOyf7775+DDz443bp1y4orrphdd9211kcvBw0alO222y577rln9thjj/Tq1avWeds22mijb5xlq622ysiRI3PRRRdlo402yn333ZcBAwbU2s+uu+6au+66K3/961+z2WabZYsttsjFF1+c1VZbrcBvrbiy6oX9sOwiNHXq1Ky11lp5/vnns/766+fBBx/MjjvumPfff7/Wt0ysttpqOeGEEzJgwICcddZZ+fOf/1yrxr722mtZY4018swzz6RLly5f2E9lZWUqKytrfq6oqEjHjh3z4Ycfpnnz5ovyLgIAAAB8K3Pnzs1rr72WTp06Ldbzhn1bVVVVWXfddfPTn/40v/rVrxbpvo444oi8/PLL+fvf/14n2/u6321FRUVatGjxrTrREvOtoFVVVTnhhBOy1VZbZf3110+SzJgxIw0bNvzCV7e2bds2M2bMqFmnbdu2X7h+wXVfZujQoRk8eHAd3wMAAACAZdcbb7yRv/71r9luu+1SWVmZyy67LK+99loOOOCAOt/XhRdemJ133jlNmzbNvffem+uvvz6XX355ne/nu1pivhW0b9++mTx5csaMGbPI9zVo0KB8+OGHNZc333xzke8TAAAAYGlWXl6e6667Lptttlm22mqrPP/883nggQey7rrr1vm+nnzyyey8887ZYIMNMnLkyFx66aX5xS9+Uef7+a6WiCPW+vXrl7vuuisTJkzI97///Zrl7dq1yyeffJIPPvig1lFr77zzTtq1a1ezzpNPPllrewu+NXTBOv+tUaNGadSoUR3fCwAAAIBlV8eOHWu+THJR+9Of/rRY9vNdlfSIterq6vTr1y+33357HnzwwXTq1KnW9V27dk2DBg0ybty4mmVTpkzJtGnT0q1btyRJt27d8vzzz2fmzJk169x///1p3rx51ltvvcVzRwAAAABY7pT0iLW+fftm9OjRueOOO9KsWbOac6K1aNEijRs3TosWLXL44Ydn4MCBadWqVZo3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aTUf9fy8BWFtWSCsAQAAAFBnmjVrlhNPPDEDBgxIVVVVtt5663z44Yd55JFH0rx586y22mqlHrHOCGsAAAAAS5FH+j9S6hG+0a9+9au0bt06Q4cOzb/+9a+0bNkym2yySU477bSl7uOeX0dYAwAAAKBOlZWV5fjjj8/xxx//pddXV1fX+nnjjTf+wrKlQXmpBwAAAACApZGwBgAAAAAFCGsAAAAAUICwBgAAAAAFCGsAAAAAUICwBgAAAAAFCGsAAAAAUICwBgAAAAAFCGsAAAAAUICwBgAAAAAF1C/1AAAAAAB8e+O33W6x7m+7CeMX6/6WJo5YAwAAAIAChDUAAAAA6lRVVVWGDh2aTp06pXHjxtloo41yyy23JEnef//9HHjggWndunUaN26ctdZaK6NGjSrxxMX4KCgAAAAAdWro0KH5/e9/n5EjR2attdbKhAkTctBBB6V169a5+eab8+KLL+bee+/NKquskqlTp+bjjz8u9ciFCGsAAAAA1JnKysr8+te/zgMPPJBu3bolSdZYY408/PDDufLKKzNr1qx06dIlm266aZJk9dVXL+G0342wBgAAAECdmTp1aubMmZOdd9651vJPPvkkXbp0yTnnnJPevXvnmWeeyS677JJevXplyy23LNG0342wBgAAAECdmTVrVpLk7rvvzve+971a1zVq1CgdO3bMG2+8kXvuuSf3339/dtxxx/Tt2zcXXnhhKcb9ToQ1AAAAAOrMeuutl0aNGmXatGnZbrvtvnSd1q1bp0+fPunTp0+22WabnHTSScIaAAAAAMu3Zs2a5cQTT8yAAQNSVVWVrbfeOh9++GEeeeSRNG/ePK+++mq6du2azp07p7KyMnfddVfWXXfdUo9diLAGAAAAsBTZbsL4Uo/wjX71q1+ldevWGTp0aP71r3+lZcuW2WSTTXLaaaflzTffzKBBg/L666+ncePG2WabbTJmzJhSj1yIsAYAAABAnSorK8vxxx+f448//gvXbbvttjnjjDNKMFXdKy/1AAAAAACwNBLWAAAAAKAAYQ0AAAAAChDWAAAAAKAAYQ0AAAAAChDWAAAAAKCAkoa1CRMmpGfPnunQoUPKysoyduzYWteXlZV96eWCCy6oWWf11Vf/wvXnn3/+Yr4nAAAAACxvShrWZs+enY022igjRoz40uunT59e63LttdemrKwsvXv3rrXekCFDaq3Xv3//xTE+AAAAAMux+qXceY8ePdKjR4+vvL5du3a1fr7jjjuy/fbbZ4011qi1vFmzZl9YFwAAAAAWpaXmHGvvvPNO7r777hx++OFfuO7888/PyiuvnC5duuSCCy7I/Pnzv3ZblZWVqaioqHUBAAAAoG4ccsgh6dWrV6nHWORKesTawrj++uvTrFmz7LPPPrWWH3fccdlkk03SqlWrPProoxk0aFCmT5+eiy666Cu3NXTo0AwePHhRjwwAAABQ5y775Z2LdX/9fttzoW/zP//zP6murl4E0yxZlpqwdu211+bAAw/MCiusUGv5wIEDa/694YYbpmHDhjnqqKMydOjQNGrU6Eu3NWjQoFq3q6ioSMeOHRfN4AAAAADLmRYtWpR6hMViqfgo6N///vdMmTIlv/jFL75x3c033zzz58/P66+//pXrNGrUKM2bN691AQAAAKBufP6joPfdd1+23nrrtGzZMiuvvHL23HPPvPrqq6UdsI4sFWHtd7/7Xbp27ZqNNtroG9edNGlSysvL06ZNm8UwGQAAAABfZ/bs2Rk4cGCefvrpjBs3LuXl5dl7771TVVVV6tG+s5J+FHTWrFmZOnVqzc+vvfZaJk2alFatWmXVVVdN8tnHNG+++eb89re//cLtH3vssTzxxBPZfvvt06xZszz22GMZMGBADjrooKy00kqL7X4AAAAA8OV69+5d6+drr702rVu3zosvvpj111+/RFPVjZIesfb000+nS5cu6dKlS5LPzpfWpUuXnHXWWTXrjBkzJtXV1dl///2/cPtGjRplzJgx2W677dK5c+ecd955GTBgQK666qrFdh8AAAAA+GqvvPJK9t9//6yxxhpp3rx5Vl999STJtGnTSjtYHSjpEWvdu3f/xm+IOPLII3PkkUd+6XWbbLJJHn/88UUxGgAAAAB1oGfPnllttdVy9dVXp0OHDqmqqsr666+fTz75pNSjfWdLzbeCAgAAALB0effddzNlypRcffXV2WabbZIkDz/8cImnqjvCGgAAAACLxEorrZSVV145V111Vdq3b59p06bl1FNPLfVYdUZYAwAAAFiK9Pttz1KP8K2Vl5dnzJgxOe6447L++utnnXXWyaWXXpru3buXerQ6IawBAAAAUKcqKyuz4oorJkl22mmnvPjii7Wu/6Zz7i8tSvqtoAAAAAAsO+bPn58XX3wxjz32WDp37lzqcRY5YQ0AAACAOjF58uRsuumm6dy5c44++uhSj7PI+SgoAAAAAHVi4403zpw5c0o9xmLjiDUAAAAAKEBYAwAAAIAChDUAAAAAKEBYAwAAAIAChDUAAAAAKEBYAwAAAIAChDUAAAAAKKB+qQcAAAAA4Ns776B9F+v+Tv/9LYt1f0sTR6wBAAAAsEh98sknpR5hkRDWAAAAAKhT3bt3T79+/XLCCSdklVVWya677pqysrJMmjSpZp0PPvggZWVleeihh0o253clrAEAAABQ566//vo0bNgwjzzySEaOHFnqcRYJ51gDAAAAoM6ttdZaGTZsWJLk9ddfL+0wi4gj1gAAAACoc127di31CIucsAYAAABAnWvatGnNv8vLP0tQ1dXVNcvmzZu32Geqa8IaAAAAAItU69atkyTTp0+vWfb5LzJYWjnHGgAAAACLVOPGjbPFFlvk/PPPT6dOnTJz5sycccYZpR7rOxPWAAAAAJYip//+llKPUMi1116bww8/PF27ds0666yTYcOGZZdddin1WN+JsAYAAABAnXrooYe+sGzdddfNo48+WmvZ58+5tjRyjjUAAAAAKEBYAwAAAIAChDUAAAAAKEBYAwAAAIAChDUAAACAJdjSfoL/JVFd/U6FNQAAAIAlUIMGDZIkc+bMKfEky54Fv9MFv+Oi6tfFMAAAAADUrXr16qVly5aZOXNmkqRJkyYpKysr8VRLt+rq6syZMyczZ85My5YtU69eve+0PWENAAAAYAnVrl27JKmJa9SNli1b1vxuvwthDQAAAGAJVVZWlvbt26dNmzaZN29eqcdZJjRo0OA7H6m2gLAGAAAAsISrV69encUg6o4vLwAAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAoQ1AAAAAChAWAMAAACAAkoa1iZMmJCePXumQ4cOKSsry9ixY2tdf8ghh6SsrKzWZbfddqu1znvvvZcDDzwwzZs3T8uWLXP44Ydn1qxZi/FeAAAAALA8KmlYmz17djbaaKOMGDHiK9fZbbfdMn369JrLH/7wh1rXH3jggXnhhRdy//3356677sqECRNy5JFHLurRAQAAAFjO1S/lznv06JEePXp87TqNGjVKu3btvvS6l156Kffdd1+eeuqpbLrppkmS4cOHZ/fdd8+FF16YDh061PnMAAAAAJAsBedYe+ihh9KmTZuss846OeaYY/Luu+/WXPfYY4+lZcuWNVEtSXbaaaeUl5fniSee+MptVlZWpqKiotYFAAAAABbGEh3Wdtttt9xwww0ZN25cfvOb32T8+PHp0aNHPv300yTJjBkz0qZNm1q3qV+/flq1apUZM2Z85XaHDh2aFi1a1Fw6duy4SO8HAAAAAMuekn4U9Jvst99+Nf/eYIMNsuGGG2bNNdfMQw89lB133LHwdgcNGpSBAwfW/FxRUSGuAQAAALBQlugj1v7bGmuskVVWWSVTp05NkrRr1y4zZ86stc78+fPz3nvvfeV52ZLPztvWvHnzWhcAAAAAWBhLVVh766238u6776Z9+/ZJkm7duuWDDz7IxIkTa9Z58MEHU1VVlc0337xUYwIAAACwHCjpR0FnzZpVc/RZkrz22muZNGlSWrVqlVatWmXw4MHp3bt32rVrl1dffTUnn3xyfvCDH2TXXXdNkqy77rrZbbfdcsQRR2TkyJGZN29e+vXrl/322883ggIAAACwSJX0iLWnn346Xbp0SZcuXZIkAwcOTJcuXXLWWWelXr16ee655/LjH/84a6+9dg4//PB07do1f//739OoUaOabdx000354Q9/mB133DG77757tt5661x11VWluksAAAAALCdKesRa9+7dU11d/ZXX/+Uvf/nGbbRq1SqjR4+uy7EAAAAA4BstVedYAwAAAIAlhbAGAAAAAAUIawAAAABQgLAGAAAAAAUIawAAAABQgLAGAAAAAAUIawAAAABQgLAGAAAA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M3LkyDzxxBNp2rRpdt1118ydO7dmnQMPPDAvvPBC7r///tx1112ZMGFCjjzyyIW/UwAAAACwEAqdY22HHXbI8ccfnz/84Q/p0KFDkuTf//53BgwYkB133PFbb6dHjx7p0aPHl15XXV2dSy65JGeccUb22muvJMkNN9yQtm3bZuzYsdlvv/3y0ksv5b777stTTz2VTTfdNEkyfPjw7L777rnwwgtrZgMAAACAulboiLXLLrssFRUVWX311bPmmmtmzTXXTKdOnVJRUZHhw4fXyWCvvfZaZsyYkZ122qlmWYsWLbL55pvnscceS5I89thjadmyZU1US5Kddtop5eXleeKJJ75y25WVlamoqKh1AQAAAICFUeiItY4dO+aZZ57JAw88kJdffjlJsu6669aKYN/VjBkzkiRt27attbxt27Y1182YMSNt2rSpdX39+vXTqlWrmnW+zNChQzN48OA6mxUAAACA5c9CHbH24IMPZr311ktFRUXKysqy8847p3///unfv38222yzdO7cOX//+98X1ax1ZtCgQfnwww9rLm+++WapRwIAAABgKbNQYe2SSy7JEUcckebNm3/huhYtWuSoo47KRRddVCeDtWvXLknyzjvv1Fr+zjvv1FzXrl27zJw5s9b18+fPz3vvvVezzpdp1KhRmjdvXusCAAAAAAtjocLas88+m9122+0rr99ll10yceLE7zxUknTq1Cnt2rXLuHHjapZVVFTkiSeeSLdu3ZIk3bp1ywcffFBrnw8++GCqqqqy+eab18kcAAAAAPBlFuoca++8804aNGjw1RurXz//+c9/vvX2Zs2alalTp9b8/Nprr2XSpElp1apVVl111Zxwwgk599xzs9Zaa6VTp04588wz06FDh/Tq1SvJZ+d122233XLEEUdk5MiRmTdvXvr165f99tvPN4ICAAAAsEgtVFj73ve+l8mTJ+cHP/jBl17/3HPPpX379t96e08//XS23377mp8HDhyYJOnTp0+uu+66nHzyyZk9e3aOPPLIfPDBB9l6661z3333ZYUVVqi5zU033ZR+/fplxx13THl5eXr37p1LL710Ye4WAAAAACy0hQpru+++e84888zstttuteJWknz88cc5++yzs+eee37r7XXv3j3V1dVfeX1ZWVmGDBmSIUOGfOU6rVq1yujRo7/1PgEAAACgLixUWDvj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kldffTWzZ88u8UTAN/nRj36Utm3bpnv37uIaLEO+7HWyx/bCEdZgEfn8m4ZPPvmkZhmw6FVVVaW8/LOnuNGjR+eWW27Jxx9/XOKpgKT24/Pss8/OEUcckWeeeabmuRJYMnXu3Dk333xzmjZtmm222Sbvv/++uAZLsQXvTRc8Jz/xxBN54IEH8tFHH9W8j+XbEdZgEfj8m4ZLL700hxxySHbbbbeceeaZ+d///d8STwfLturq6prH38knn5yTTjopc+bMyQcffFDawYAk//cCftCgQbnqqqvSr1+//PCHP0zDhg1LPBnwVRb8wXjWrFnp27dvXnrppey5557iGiylDj/88Nx11101ce2kk07K7rvvngMOOCBrr712br31VkeTLwRhDRaBBW8aTj311Jx77rnZYost0r179/zxj3/M3nvv7a/ysAgt+AvbxRdfnBtvvDG33XZbDjnkkLRv3z6JI0ihVD7/xvupp57KTTfdlD/+8Y/ZZ599suKKK+bNN9/MPffck+eee66EUwJfpry8PLfeemt22223TJw4MTvttFNeeeWVbLvttj4WCkuh559/Psccc0zGjRuX+++/P3/5y19yyy235Omnn86uu+6avn375pZbbsmsWbNKPepSQViDOvT5FxT/+Mc/ctddd2Xs2LE57rjj0rlz58ycOTMHH3ywv8rDIvDfoeyxxx7LYYcdls033zyvvvpqbrvttuy555752c9+ln/9618pLy/3JgAWk8+fHuF///d/M3fu3LRq1Srt2rXLE088kTPOOCM77bRTjjjiiBx99NF59NFHSzwx8HkzZszISSedlIEDB+biiy/Ovffem7Fjx6ZevXrZbrvtHLkGS4kFr5effPLJbLzxxvnFL36RiRMnZu+9987222+fVVddNdddd1169uyZU045Jbfeequ49i0Ia1AHfvnLX2bcuHG1XlC89957mTt3brbccsuMHTs2BxxwQIYNG5Yjjjgis2fPzh//+MdUVlaWeHJYdiw4UvT666/P448/nhVXXDHPP/98LrroohxzzDG55ppr0rRp07z//vs56KCDMnfuXOePgMXg8x/P7tevX0455ZS0aNEib7zxRg4++OBsv/32mTVrVs4777zcfvvteeedd/LOO++UeGrg8+bMmVPzujZJ6tWrl8033zzDhw/PW2+9lb333jvvvvuu51VYwpWXl2fevHlJkrvvvjtdunTJaaedlsmTJ2f+/Pk161199dX58Y9/nNNPPz033nijcxV/A2ENvqOXXnopkyZNykknnZRHHnmk5gVFy5Yts/baa+fqq6/OwQcfnAsvvDBHH310ks+OZrvvvvvy2muvlXJ0WCZ8/ki1Cy64IIMGDUqbNm2yyy67pF69ernggguy3XbbZciQIfnjH/+Ynj17pn379llhhRVKODUsPxY8L77xxhuZMGFCDj744Gy44Yb5xz/+kYMPPji33357Lrnkkuy7777ZdNNN06pVK6dMgCVMp06d0rJly9xxxx01y+rVq5fNNtssnTt3zoQJE7LHHns4zQIswZ599tkkSYMGDTJ8+PA899xzGTt2bPbdd9/cf//9+etf/1oT3ZLkqquuSrdu3XLvvfd63fwNyqodrwvf2SOPPJKLL744U6dOzWWXXZatt946FRUV6datW1566aUMGzYsJ554YpJk7ty52WeffdK0adP88Y9/rPkrPvDd/POf/8yIESOy7bbbpnfv3kmSDz/8MJWVlWnTpk3Nej169EibNm1y/fXXl2pUWO78+te/zosvvphGjRrliiuuSP369Ws9/82dOzezZs3Kz3/+8/zv//5vHn/88dSrV6+EE8Pyq7q6OmVlZamsrExVVVVWWGGFlJWVZfDgwbn33ntz5JFH5rDDDqtZ/4gjjkjPnj2z8cYbZ9VVVy3h5MBXeeGFF/LjH/84Bx10UGbPnp1LL700zz77bNZdd90kye67755//OMfuf7667PDDjukfv36Nbdd8MV8C/7bwBcJa/AdzJs3Lw0aNEiS3H777Rk1alTeeOONXHnlldliiy3y+uuvZ8stt8y6666bXr16ZcUVV8xNN92Ud955J//4xz9Sv379Wt8gChRzzz33ZM8990yrVq1y/fXXZ4899qh1/UcffZSnnnoqw4YNy9tvv51nnnkm9evX9wIBFoP58+dn6NChGTx4cLp06VITzRa8BK2urs5vfvObmvM1jR8/Pg0aNMinn34qrsFituB58e67787vf//7TJo0KT169MiOO+6YHXbYIb/4xS/yr3/9K5tsskl222233Hfffbnjjjvy2GOPpWPHjqUeH/gK//nPf3LDDTfk17/+debPn5+nn346a621Vj7++OM0btw4yWdxbdKkSbn++uuz/fbbf2lc48v5zcB3sCCqDRkyJKNGjcr06dMzefLkHHXUURk/fnxWX331PPTQQ6lXr16uvvrqXHfddenYsWPNm/r58+f7DxTUgd133z2//OUv89577+Wpp576wklWJ0+enKuvvjotW7as9fgT1aDu/fdHwerXr5/jjjsuF110UZ555plcfPHFST77iGhZWVnKy8vz05/+NPvtt1/+/ve/p0GDBpk/f76oBiVQVlaWP//5z/nJT36S9ddfP6ecckreeOONHHTQQXnnnXcybNiw/PjHP87DDz+cgQMH5uGHH86dd94pqsESasFzcuvWrdO2bduaLw+66aabkiSNGzfO3Llzk3z2h+pNNtkku+66a5555pla2/Ge9es5Yg2+o5EjR+akk07KnXfembXXXjsTJkzI9ddfn+nTp2f48OHZZptt8sknn2TOnDlp0KBBmjZtmuSzv+B//q8AwLfzdX8xO/bYY/O73/0uv/vd77LvvvvWOh/Eq6++mjXWWCNlZWUef7CIfP7x+e9//zuzZs3KOuusU3P9+eefn9NOOy2XXnpp+vXrlyRfODLNkWpQOu+//35+9rOfpUePHhkwYEAqKiqy1lprZf/998/FF19c6w9SM2bMSNOmTdOsWbMSTgx8G7NmzUq9evXy8ssvZ9y4cbn22muz1157ZejQoUlqP/eeeuqpOe+88zwXLwTvKuA7qK6uzlNPPZV99tkn3bt3T5Lst99+WWWVVXLaaaelf//+ueqqq/KjH/0oDRs2rHU7b+ph4X3+TfuYMWPy8ssvp2nTpllvvfWyxx575PLLL8+8efNy5JFHpqysLL17966Ja2uuuWbNNjz+oO59/ts/zzzzzNx+++3597//nVVXXTUHHXRQDj/88Jx66qmprq7O8ccfn/Ly8hx77LFfeOHuhTyUToMGDfLOO+9km222ybRp07Lllltmr732yiWXXJIkufPOO9OpU6esv/76adeuXWmHBb7S518zjx07NkcccUSeffbZdOnSJa1bt05lZWVuuumm1KtXL+eee27q1auX0047LQceeGDOP//8JP7QtTC8s4DvoKysLCuttFKeeOKJzJ49u+ZotJ122ilPPPFEzjzzzPTq1Sv33HNPNt5441q3AxbeghcIJ510Uq677rpsscUW+ec//5ny8vLce++9ueyyy3L11VenvLw8Rx99dObMmZM+ffrUCtsOZYdFY8Fz229+85tcccUVueKKK7Lqqqtm1KhRue222/L222/nnHPOyamnnpr69eunX79+adu2bc2XjQCL33+fa3TOnDlp3rx5Jk6cmAsuuCA9evTIyJEjkyTTpk3Lrbfemn322SedO3f2ehaWUJ+PajfffHMmTZqUd999N7vvvnvNR7cPOeSQlJWV5frrr8/kyZMzb968PPfcc/nVr35Vsx1R7dvz7gK+pa/6+vCNNtoob7/9du6+++7MmTOnZvmaa66Z3XffPSeccEI22GCDxTUmLPPuu+++3HTTTRk7dmzuvPPOPPLII+nbt2/uu+++nHTSSUmSK6+8Mj179swf/vCHWlENqHsLzipSVVWVWbNm5Z577smZZ56Zn/zkJ9l8880zcuTI9OrVK+PGjcu4ceNSVlaWY445JjfeeGP22muvEk8Py68FUe1vf/tbfvOb3yRJ2rRpk1122SXHHHNM1ltvvZo/ViWfnf7kqaeeysYbbyyqwRJswWP2xBNPzKmnnpoVV1wxhxxySObMmZPtt98+r7/+er73ve/l8MMPzxlnnJEkWXnllfOvf/0r9erV+8r3vXw151iDb+Hz1f/BBx/Mxx9/nHnz5qVXr15JkkMOOSQPPPBAzjnnnGy77bZZeeWVc9hhh6Vz584577zzUlZW5lBaKOi/z6k2atSoDBs2LM8++2xNNHvvvfdy+eWX5+67786YMWOy2mqrfeltgbr1+aNdXn/99bRt2zY77rhjevTokTPPPLPW+Qx32GGHNG/ePGPHjq21Dec8hMVvwWP31ltvzdFHH52f/vSnOfLII7PRRhvlk08+yXHHHZdRo0bl7LPPTlVVVd56662MHj06EyZMqPUpDGDJ9Oyzz6Znz5655pprsssuuyRJ/va3v2Xw4MF5++23M27cuHTs2PELr5U9Jxfj3QZ8C5+v/j//+c8zYMCAHHTQQdlmm23yj3/8I9ddd1323HPPXHrppdlss82y9dZb55VXXsmQIUNSVlaW6upqUQ0KWvD4GzFiRB588MG0adMm8+fPz4svvlizTqtWrbLrrrvmySefzJtvvlnrtv7qBovG56Nav379cvjhh6eioiKrrLJK7rvvvsybNy/169eveQx269Yt5eXl+e+/6XoBD4tfWVlZHn300Rx22GE5//zzM2LEiGy00UZJkoYNG2bEiBEZMmRI7r777tx11135+OOP8+ijj4pqsJSYPXt2/vOf/6Rt27Y1y7bddtucdNJJmTFjRvbcc8+89dZbtV4rOw94ccIafEu/+93vcsMNN+TOO+/M+PHj8+KLL2bWrFk58sgj8+qrr2bkyJEZNWpUbrjhhpx77rl5/vnnU79+/Xz66acOl4cCPh/ERowYkcGDB6dt27ZZffXVU1VVlVGjRtWKaCuvvHI22GCDL3z00xFrsGgseG77z3/+kxdffDFnnnlm2rZtm8svvzyvvvpqDjjggHzwwQeZN29e5s+fn/Hjx6dt27aeE6HEFsTtRx99NLvssksOP/zwvP/++7n77rvzs5/9LN27d88999yTU045JXfffXceffTRXHXVVVl//fVLPDnwZb7sQ4hrrbVWOnfunHvvvTeffPJJks/OmbbDDjukc+fO+eijj9KzZ8/MnDmz5rWy5+fi5Ej4BgsOj50yZUq23nrrbLLJJjUf65wwYUK6du2ak046Kbfddlu6du2arl271tzWxz+huAVP8hMnTszbb7+diy++OJ07d06SXHjhhTnkkEMya9asdO/ePeuss07OPPPMNGrUKJtuumkpx4Zl3uc/NnLxxRdnzJgxad++fc2RLN///vdz66235ic/+Um6deuWlVZaKdXV1amoqMjw4cNLODks3xYcZbrgzfMKK6yQW2+9NTfffHNGjRqVJGnRokVatmyZPn365JVXXsnKK6+cJGnUqFHJ5ga+2uefkz/66KNUVVWlRYsWWWmllbLppptm7NixWW211bL//vsnST7++ON873vfy9FHH53LLrssY8aMyXHHHfeFLzJh4fgzPnyJ559/PnfeeWeefPLJmv9QTZ8+Pe+//36Sz2r/xx9/nGbNmuXCCy/MY489ljfeeOMLHzkT1WDhff5xNHXq1Gy22WY5//zzM3fu3Jrle++9d2666aa88cYbGThwYA4//PB88sknefjhh338Exah6urqWucc7dSpU956661MmjSp1npbbbVVXn755Rx88MHZYYcdstdee+XZZ59N/fr1M3/+/BJMDsu3BW+aH3744Vx66aWZP39+fvazn+XII49Mv3790q5du5x66qn5wx/+kJEjR6Zjx4559913Sz028A0WPCefc8452W233bLFFlvkkksuSf369XPxxRenQ4cO+e1vf5uDDjooI0aMyF577ZX33nsvBx10UKqrq/PCCy8kcbTadyWswX+56aab0qdPn1x55ZW54447apYfeuiheeqpp3L55ZcnSRo3bpzksxM8tm7dOiuuuKKPnEEdWPA46t+/fz799NP84Q9/SHV1df7+979n5syZNevtueeeueWWW/LMM8/k1ltvzbhx49KgQYPMnz/fYxEWgc//Nfvss8/Osccem7XWWiuXX3553n///fzyl7+sWXfevHlp3rx5Bg0alHPPPTennnpqzekRnL8FFq/Pf1FBr1698tZbb+Xll19O69atM3LkyDzzzDO59tprs+222yb57EjU8vLyrLLKKiWeHPgqn/8j8qWXXpqrrroqP/7xj9OjR4+cdNJJ6du3bxo3bpzRo0fnZz/7Wf7zn/9k1KhRadOmTe65557Uq1cv7du3r/nCL99p+d14ZQOfc/311+eYY47Jtddem1133TUrrbRSzXWbbLJJjj/++Fx44YWprKzML37xi3zwwQe59tpr8/3vfz+tWrUq4eSw9Pv8oez33ntvzQuEn/3sZ6moqMhRRx2VNddcM/3790/Lli2T/N9HVj6/DW/aoe59/vH59NNP5/nnn88111yTzp07Z9111821116bgw8+OA0bNswVV1yRBg0a5NNPP015eXmtv4I7khsWvwVHqh166KH57W9/myOOOKLW9d/73veSJA899FD++Mc/5k9/+lPGjRvntS0swRY8J0+aNClz587NlVdemZ49eyZJtt9++/Tu3TvV1dW59NJLc9JJJ+Wkk07KrFmzsuKKKyZJTj/99Dz++OO56KKLkjhi7bvy7gP+v8mTJ2fYsGG59NJLs99++9UsX/BXvpYtW+YXv/hFmjRpkjPPPDPDhg3LiiuumJYtW+bRRx9NWVnZF76uGPj2Fjx2xowZk+eeey4XXHBBdt555yTJEUcckfnz56dv374pKytL//7906JFiy+8CPD4g0VjwWPrhhtuyI033piPP/645pyH5eXl6dWrV2644YYccsghKS8vz4gRI0Q0WII88MAD2W233XLEEUfkgw8+yJNPPpmbbropb7/9ds4+++ystdZaeeSRRzJ16tSMHz/eFxXAUmDixInZbLPN0rBhw1x33XVJPnvv2rNnz9x2223p3bt36tevn3POOSetWrXKiiuumClTpuS0007LM888k7/+9a9Za621SnsnlhHegcD/9+abb6aysjLbbbddrUNhF7xxr66uTqdOnXL66adn8uTJGTFiREaOHJnHH3/cx8/gO3jyySfz3nvvJUleeumlXHTRRbnkkktqvsFowf895phjcvnll+ecc87Jeeedl1mzZpVsZlheXHLJJendu3fNz/Xr189bb72V5557rtZ51erVq5devXrl+uuvzxVXXJELL7ywBNMCX2WllVaqOSKtT58++Z//+Z+8//77adKkSfbZZ580bdo0Rx55ZG6++WZRDZZQ//1xza5du+aaa65JVVVVJk6cmPnz56esrCzV1dXZc889c9ttt+Wyyy7LDTfcUHObddZZJ0cddVQefPDBdOnSZXHfhWWWI9bg/3vqqacya9asmmr/39+MUlZWlpdeeinvv/9+ttxyy6y++uo11zlnDBRz+eWXp1+/fnnhhRfSqlWrrLvuujnxxBNzwQUX5Morr8wBBxyQDh06ZN68eWnQoEGOPvrozJo1K7fffnuaNm1a6vFhmXbVVVfl5JNPzo033liz7IADDkiLFi1y2mmnZfjw4WnatGl+9KMfJfksru2111558MEHs/XWW5dqbOBLbLfddnn22Wdz7LHHpmfPnunTp0+23377TJ48OQcddFDef//9dOzYsdRjAl/h85+MqqysTKNGjVJVVZXDDjssc+bMyXHHHZfWrVvnpJNOqolre+yxRx5++OGa5+kF72932WWXUt6VZVJZtbPUQZLkD3/4Q37xi1/kz3/+c3bccccvXWfBZ9OvuOKKxTwdLHuuvPLKHH/88Rk9enT22WefWtfdeuut+e1vf5smTZrkxhtvTPv27WviWvJ/Lwx8NTgsGldeeWX69u2bW2+9NXvttdcXrr/99tszdOjQrL322jnhhBOy6aabfmGd+fPn+6MTLGYLnhcnTpyYf/3rX3n33Xdz8MEHp0mTJkmSadOmZdVVV61Z/+STT86DDz6YBx54oNY5S4Elx+ej2qWXXprHH3887777bjbddNOccMIJad26dUaMGJH+/fvnN7/5TU488cQvvD72nLxo+dwa/H9du3ZNeXl5rrnmmrz11ls1yxe054qKirz22mvZYIMNSjUiLDOuueaa9O3bN2PGjKkV1R588MEkSe/evTNw4MDMnz8/ffr0yYwZM2o+cr2AqAaLxqhRo9K/f//cfffdtaLaoYcemuHDhydJ9t5775x66ql55ZVXcumll+bRRx/9wna8gIfFa8Hz4m233ZbddtstF198cc4+++x07949d955ZyorK2ui2uOPP56+ffvmmmuuyTXXXCOqwRJsQVQ79dRTc+6552aLLbbI9ttvnzFjxmTvvfdOZWVl+vbtmxEjRuT000/P2Wef/YVteE5etPx2IZ/9FWDttdfOiBEjcsQRR2SFFVbIgAEDsuGGG6asrCzTp0/P4Ycfno8++ihHHXVUqceFpdptt92WI488Mrfcckt69epVs7xnz5554YUX8uyzz6ZZs2bZd999U1ZWlhEjRqRHjx554IEHsvLKKyfxzUWwqLz55pv59a9/nXXXXTe77rprzfLevXtnypQpGTJkSM2yffbZJ+Xl5TnhhBOy5pprZssttyzFyMD/V1ZWloceeihHH310hg0blkMPPTTTpk3L6quvnnPPPTeffPJJfvzjH+ff//53/vznP+fll1/O+PHj/dEYlgL/+Mc/ctddd2Xs2LHZcsstc+edd+Y///lPTjnllDRq1CjV1dU55phjUlFRkbvuussfoBczYQ3yf38F+NnPfpZZs2bluOOOy9/+9rdsuOGGmT9/ft5///3Mnz8/jz76aOrVq5dPP/3Ut51BQQuOAn3xxRdrjlbbd99989Zbb+XBBx9Ms2bNah5jvXv3TmVlZR5++OGstNJKpRwblgutWrXK4MGDc+aZZ+aAAw7I6NGjs//+++ef//xn7r777nTs2LHWi/VevXqlZcuW2WabbUo8OSxfFnw07L9fkz766KM59NBDc+ihh+bVV1/NLrvskkMOOSRTp07NiSeeWHMuxOOPPz4NGjRIq1atSngvgG/rvffey9y5c7Pllltm7Nix+fnPf54LLrggRx55ZGbPnp0777wzvXr1yimnnJKTTz7ZKVMWM+dYgy/x1FNP5dprr82UKVOy+uqrp0uXLjn22GNTr149n0+HOvCHP/whP//5z3P22Wfnueeey8svv5y77rorq622Ws2LgKqqqvznP/9J27Zta24nasOiN3fu3Pz5z3/OiSeemNmzZ6djx4554IEHssoqq9R6kX7yySfntNNOq/kImccnLB4Loto///nPnH/++XnzzTfzve99L0OHDs2///3vNGnSJB07dsxuu+2WddddN9dcc03eeOONrLfeell99dUzdOjQ/PjHPy713QAWwjPPPJMzzjgje++9d375y1/mggsuqPkk1cMPP5xrrrkmp5xyStZdd90kTpmyuKkDLDc+f9LH//b5//BUVVVls802y2abbfaF9Xz7J9SN/fffP9XV1TnssMNSVlaWyZMn14pqSbLrrrumS5cuGTZsWM3tvGmHRW+FFVZIz549kySDBw9Ohw4dssoqqyT5v49h77nnnnn00UczdOjQmtt5fMKit+D17LPPPpsddtgh3bt3T5MmTXLvvfdm6tSpueuuu9KyZcs89NBDmTVrVo4//vgkyYwZM9K9e/fUq1fPRz9hKbT22mtn2rRpOeqoozJs2LCaqDZ37tz8+te/TtOmTbPOOuvUrC+qLV4KAcuFz0e1O+64I//85z+z4oorZv31188222xT6z88C9b7ssrvTQPUnQMOOCCNGzfOT3/601x//fU544wz0rBhwySfvWl/9dVXc88995R4Slh2vfbaa+nUqdOXXte4cePsueeeST77Ruyf/OQnufnmm5MkPXr0yGuvvZZ33nnH6RFgMSsvL8/zzz+frbbaKr/85S8zePDgVFZWZuLEidluu+1y8cUXZ/DgwXnvvffy/vvv56OPPsr8+fNz7733ZtVVV80ll1ySRo0alfpuAF/iL3/5S1ZaaaVsttlmtd6HVlVVZcUVV8w999yTLbfcMvfee28aNWqUFVdcMTfddFPeeeed/OMf/0h5efnXHkzCouOjoCxXTj755IwZMyYbbrhhGjZsmIceeijDhw/PgQceWOrRYLk1evToHHzwwTnttNNy1llnZa+99srUqVMzefLkmm8CdaQo1K2TTz45U6ZMyeDBg7Pxxht/5Xoff/xx7rzzzpx88snZYost8vHHH+fll1/2+IQS+fjjj7PLLrtk8uTJef/995N89qZ77ty52WqrrdKrV6+cffbZ+eijj9KtW7d89NFHadmyZd58882MGzcuXbp0KfE9AP7bgiSz1lprJUn++Mc/ZpNNNvlCXCsvL8/UqVPTt2/fTJ8+PS1btsyaa66Zq666ynNyiUmZLDduvvnmjB49On/6059y1113Zffdd89HH32UqqqqUo8Gy6Rv+3ebAw44IDfccEOGDRuWFi1a5PXXX/emHRaxH/7wh5k+fXr+53/+J5MmTfrK9Ro3bpyePXvmwgsvzP33359//vOfHp9QQg0aNMhpp52WFVZYIfvuu2+Sz45imzlzZl566aWaN+bNmjXLww8/nOOOOy6HHnpoHn/8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\n"},"metadata":{}}],"source":["import pandas as pd\n","import zipfile\n","import os\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import signal\n","\n","\n","# Path to the directory containing the updated CSV zip file in Google Drive\n","zipfile_path = '/content/drive/MyDrive/EACL/MultilingualLLMBias/results/results-CodeLlama-7b-Instruct-bootstrapped-multi/updated_csv_files.zip'\n","\n","# DataFrame to store the summary results for all files\n","summary_df = pd.DataFrame(columns=['Language', 'Incomplete Code', 'Syntax Errors', 'Logical Errors', 'All Tests Passed', 'Average Code Length'])\n","\n","# Function to handle the timeout exception\n","def handler(signum, frame):\n","    raise TimeoutError()\n","\n","\n","# Function to process and test each CSV file\n","def process_csv(df, language):\n","    incomplete_code_count = 0\n","    syntax_errors_count = 0\n","    logical_errors_count = 0\n","    all_tests_passed_count = 0\n","    total_code_length = 0\n","    valid_code_samples = 0\n","\n","    # Iterate over each row in the DataFrame\n","    for index, row in df.iterrows():\n","        code = str(row['cleaned_code'])\n","        tests = str(row['updated_test_list'])\n","\n","        if code == 'YES' or 'def' not in code:\n","            incomplete_code_count += 1\n","            continue\n","\n","        total_code_length += len(code)\n","        valid_code_samples += 1\n","\n","        if tests and tests != 'nan':\n","            for test in eval(tests):\n","                try:\n","                    # Set the signal handler and a 15-second alarm\n","                    signal.signal(signal.SIGALRM, handler)\n","                    signal.alarm(15)\n","\n","                    expression, expected_result = test.replace('assert ', '').split(' == ')\n","                    expected_result = eval(expected_result)\n","                    exec_globals = {}\n","                    exec(f\"{code}\\nresult = {expression}\", exec_globals)\n","\n","                    if exec_globals['result'] != expected_result:\n","                        logical_errors_count += 1\n","                        break\n","\n","                except TimeoutError:\n","                    print(f\"Code execution timed out for language {language}, index {index}.\")\n","                    break\n","                except Exception as e:\n","                    syntax_errors_count += 1\n","                    break\n","                finally:\n","                    # Disable the alarm\n","                    signal.alarm(0)\n","\n","            else:\n","                all_tests_passed_count += 1\n","\n","    average_length = total_code_length / valid_code_samples if valid_code_samples > 0 else 0\n","\n","    # Append the results to the summary dataframe\n","    global summary_df\n","    summary_df = summary_df.append({\n","        'Language': language,\n","        'Incomplete Code': incomplete_code_count,\n","        'Syntax Errors': syntax_errors_count,\n","        'Logical Errors': logical_errors_count,\n","        'All Tests Passed': all_tests_passed_count,\n","        'Average Code Length': average_length\n","    }, ignore_index=True)\n","\n","# Read and process each CSV file inside the zip file in Google Drive\n","with zipfile.ZipFile(zipfile_path, 'r') as zip_ref:\n","    for file_info in zip_ref.namelist():\n","        if file_info.endswith('.csv'):\n","            with zip_ref.open(file_info) as file:\n","                df = pd.read_csv(file)\n","                language_code = file_info.replace('updated_cleaned_code_', '').replace('.csv', '')\n","                process_csv(df, language_code)\n","\n","# Save the summary DataFrame to a new CSV file\n","summary_csv_path = '/content/drive/MyDrive/EACL/MultilingualLLMBias/results/results-CodeLlama-7b-Instruct-bootstrapped-multi/CodeLlama-7b-Instruct-bootstrapped-multi_summary_results.csv'\n","summary_df.to_csv(summary_csv_path, index=False)\n","\n","# Print and visualize the summary results\n","print(summary_df)\n","\n","# Basic bar plots of the results using seaborn\n","plt.figure(figsize=(15, 10))\n","sns_plot = sns.barplot(data=summary_df.melt(id_vars=['Language'], var_name='Metric', value_name='Count'),\n","            x='Metric',\n","            y='Count',\n","            hue='Language')\n","plt.xticks(rotation=45)\n","\n","# Save plot as a jpg file\n","sns_plot.figure.savefig(\"/content/drive/MyDrive/EACL/MultilingualLLMBias/results/results-CodeLlama-7b-Instruct-bootstrapped-multi/CodeLlama-7b-Instruct-bootstrapped-multi_results_plot.jpg\")\n","\n","# Show the plot in the output\n","plt.show()"]}]}