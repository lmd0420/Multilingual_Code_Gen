{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","gpuType":"V100","authorship_tag":"ABX9TyP5ceDFLO/Swd8pUUGFxUka"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DgWUDk-4ZfkF","executionInfo":{"status":"ok","timestamp":1696905323245,"user_tz":300,"elapsed":1687,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"e15ab61e-e8f5-4ee0-e4d2-5e3445071d6a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'human-eval'...\n","remote: Enumerating objects: 29, done.\u001b[K\n","remote: Counting objects: 100% (19/19), done.\u001b[K\n","remote: Compressing objects: 100% (15/15), done.\u001b[K\n","remote: Total 29 (delta 8), reused 4 (delta 4), pack-reused 10\u001b[K\n","Receiving objects: 100% (29/29), 54.21 KiB | 253.00 KiB/s, done.\n","Resolving deltas: 100% (9/9), done.\n"]}],"source":["!git clone https://github.com/openai/human-eval"]},{"cell_type":"code","source":["!pip install -e human-eval"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vxOeqwZkZkC7","executionInfo":{"status":"ok","timestamp":1696905384609,"user_tz":300,"elapsed":7159,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"29a08ede-a7a7-4a15-bb06-4b8be09c7103"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Obtaining file:///content/human-eval\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from human-eval==1.0) (4.66.1)\n","Collecting fire (from human-eval==1.0)\n","  Downloading fire-0.5.0.tar.gz (88 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m88.3/88.3 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from human-eval==1.0) (1.23.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fire->human-eval==1.0) (1.16.0)\n","Requirement already satisfied: termcolor in /usr/local/lib/python3.10/dist-packages (from fire->human-eval==1.0) (2.3.0)\n","Building wheels for collected packages: fire\n","  Building wheel for fire (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for fire: filename=fire-0.5.0-py2.py3-none-any.whl size=116934 sha256=78040926e5fd5b04371298fc9ada8d1ffb6a25095f1e8494e284936e0431cc71\n","  Stored in directory: /root/.cache/pip/wheels/90/d4/f7/9404e5db0116bd4d43e5666eaa3e70ab53723e1e3ea40c9a95\n","Successfully built fire\n","Installing collected packages: fire, human-eval\n","  Running setup.py develop for human-eval\n","Successfully installed fire-0.5.0 human-eval-1.0\n"]}]},{"cell_type":"code","source":["!pip install -r /content/human-eval/requirements.txt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YO8Yq1Dgdntb","executionInfo":{"status":"ok","timestamp":1696905851530,"user_tz":300,"elapsed":3620,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"552a87cb-4947-44ac-b803-6262dc30036b"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from -r /content/human-eval/requirements.txt (line 1)) (4.66.1)\n","Requirement already satisfied: fire in /usr/local/lib/python3.10/dist-packages (from -r /content/human-eval/requirements.txt (line 2)) (0.5.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from -r /content/human-eval/requirements.txt (line 3)) (1.23.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fire->-r /content/human-eval/requirements.txt (line 2)) (1.16.0)\n","Requirement already satisfied: termcolor in /usr/local/lib/python3.10/dist-packages (from fire->-r /content/human-eval/requirements.txt (line 2)) (2.3.0)\n"]}]},{"cell_type":"code","source":["!pip install -e /content/human-eval/."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yA2jxn9deH_B","executionInfo":{"status":"ok","timestamp":1696905888072,"user_tz":300,"elapsed":7417,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"0ed16648-8090-4ebc-df5b-66013694ca72"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Obtaining file:///content/human-eval\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from human-eval==1.0) (4.66.1)\n","Requirement already satisfied: fire in /usr/local/lib/python3.10/dist-packages (from human-eval==1.0) (0.5.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from human-eval==1.0) (1.23.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from fire->human-eval==1.0) (1.16.0)\n","Requirement already satisfied: termcolor in /usr/local/lib/python3.10/dist-packages (from fire->human-eval==1.0) (2.3.0)\n","Installing collected packages: human-eval\n","  Attempting uninstall: human-eval\n","    Found existing installation: human-eval 1.0\n","    Uninstalling human-eval-1.0:\n","      Successfully uninstalled human-eval-1.0\n","  Running setup.py develop for human-eval\n","Successfully installed human-eval-1.0\n"]}]},{"cell_type":"code","source":["import sys\n","print(sys.path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ob1QM3IOiHI5","executionInfo":{"status":"ok","timestamp":1696906901617,"user_tz":300,"elapsed":92,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"6e9592b2-e80e-4380-a45a-52c5974f3981"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["['/content', '/env/python', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages', '/usr/local/lib/python3.10/dist-packages/IPython/extensions', '/root/.ipython']\n"]}]},{"cell_type":"code","source":["!ls /usr/local/lib/python3.10/dist-packages/human_eval/data.py"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RubVpzjujUk3","executionInfo":{"status":"ok","timestamp":1696910417808,"user_tz":300,"elapsed":2295,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"d365015e-dc13-49f4-b62b-30de1846f812"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["ls: cannot access '/usr/local/lib/python3.10/dist-packages/human_eval/data.py': No such file or directory\n"]}]},{"cell_type":"code","source":["sys.path.append('/content/human-eval')\n"],"metadata":{"id":"u0Pxhog6vqu5","executionInfo":{"status":"ok","timestamp":1696910524178,"user_tz":300,"elapsed":85,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["import human_eval.data as data\n","print(dir(data))\n","\n","from human_eval.data import read_problems, write_jsonl\n","\n","\n","problems = read_problems()\n","\n","num_samples_per_task = 200\n","samples = [\n","    dict(task_id=task_id, completion=generate_one_completion(problems[task_id][\"prompt\"]))\n","    for task_id in problems\n","    for _ in range(num_samples_per_task)\n","]\n","write_jsonl(\"samples.jsonl\", samples)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":411},"id":"hVoGjIb9Zm5v","executionInfo":{"status":"error","timestamp":1696913887848,"user_tz":300,"elapsed":178,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"52cd6c73-3c43-475d-cdd8-88ec0ad9a62e"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["['__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__']\n"]},{"output_type":"error","ename":"ImportError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-51-e34b0f0a073b>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mhuman_eval\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mread_problems\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwrite_jsonl\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mImportError\u001b[0m: cannot import name 'read_problems' from 'human_eval.data' (unknown location)","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"code","source":["!cat /content/human-eval/human_eval/data.py"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ThpNnQlPwJXC","executionInfo":{"status":"ok","timestamp":1696910584079,"user_tz":300,"elapsed":197,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"b9ec7019-fd4f-4492-dc7a-a6b5ccc1a973"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["from typing import Iterable, Dict\n","import gzip\n","import json\n","import os\n","\n","\n","ROOT = os.path.dirname(os.path.abspath(__file__))\n","HUMAN_EVAL = os.path.join(ROOT, \"..\", \"data\", \"HumanEval.jsonl.gz\")\n","\n","\n","def read_problems(evalset_file: str = HUMAN_EVAL) -> Dict[str, Dict]:\n","    return {task[\"task_id\"]: task for task in stream_jsonl(evalset_file)}\n","\n","\n","def stream_jsonl(filename: str) -> Iterable[Dict]:\n","    \"\"\"\n","    Parses each jsonl line and yields it as a dictionary\n","    \"\"\"\n","    if filename.endswith(\".gz\"):\n","        with open(filename, \"rb\") as gzfp:\n","            with gzip.open(gzfp, 'rt') as fp:\n","                for line in fp:\n","                    if any(not x.isspace() for x in line):\n","                        yield json.loads(line)\n","    else:\n","        with open(filename, \"r\") as fp:\n","            for line in fp:\n","                if any(not x.isspace() for x in line):\n","                    yield json.loads(line)\n","\n","\n","def write_jsonl(filename: str, data: Iterable[Dict], append: bool = False):\n","    \"\"\"\n","    Writes an iterable of dictionaries to jsonl\n","    \"\"\"\n","    if append:\n","        mode = 'ab'\n","    else:\n","        mode = 'wb'\n","    filename = os.path.expanduser(filename)\n","    if filename.endswith(\".gz\"):\n","        with open(filename, mode) as fp:\n","            with gzip.GzipFile(fileobj=fp, mode='wb') as gzfp:\n","                for x in data:\n","                    gzfp.write((json.dumps(x) + \"\\n\").encode('utf-8'))\n","    else:\n","        with open(filename, mode) as fp:\n","            for x in data:\n","                fp.write((json.dumps(x) + \"\\n\").encode('utf-8'))\n"]}]},{"cell_type":"code","source":["!evaluate_functional_correctness /content/human-eval/data/example_problem.jsonl --problem_file=/content/human-eval/data/example_problem.jsonl\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9BAVmiRteoGd","executionInfo":{"status":"ok","timestamp":1696906553728,"user_tz":300,"elapsed":476,"user":{"displayName":"Mingda Li","userId":"10577302496462889642"}},"outputId":"35dbe9dc-9c5a-494c-e60c-2aa65d85159f"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading samples...\n","\r0it [00:00, ?it/s]\r0it [00:00, ?it/s]\n","Traceback (most recent call last):\n","  File \"/usr/local/bin/evaluate_functional_correctness\", line 33, in <module>\n","    sys.exit(load_entry_point('human-eval', 'console_scripts', 'evaluate_functional_correctness')())\n","  File \"/usr/local/bin/evaluate_functional_correctness\", line 25, in importlib_load_entry_point\n","    return next(matches).load()\n","  File \"/usr/lib/python3.10/importlib/metadata/__init__.py\", line 171, in load\n","    module = import_module(match.group('module'))\n","  File \"/usr/lib/python3.10/importlib/__init__.py\", line 126, in import_module\n","    return _bootstrap._gcd_import(name[level:], package, level)\n","  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\n","  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\n","  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\n","  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\n","  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\n","  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\n","  File \"/content/human-eval/human_eval/evaluate_functional_correctness.py\", line 28, in <module>\n","    sys.exit(main())\n","  File \"/content/human-eval/human_eval/evaluate_functional_correctness.py\", line 25, in main\n","    fire.Fire(entry_point)\n","  File \"/usr/local/lib/python3.10/dist-packages/fire/core.py\", line 141, in Fire\n","    component_trace = _Fire(component, args, parsed_flag_args, context, name)\n","  File \"/usr/local/lib/python3.10/dist-packages/fire/core.py\", line 475, in _Fire\n","    component, remaining_args = _CallAndUpdateTrace(\n","  File \"/usr/local/lib/python3.10/dist-packages/fire/core.py\", line 691, in _CallAndUpdateTrace\n","    component = fn(*varargs, **kwargs)\n","  File \"/content/human-eval/human_eval/evaluate_functional_correctness.py\", line 20, in entry_point\n","    results = evaluate_functional_correctness(sample_file, k, n_workers, timeout, problem_file)\n","  File \"/content/human-eval/human_eval/evaluation.py\", line 64, in evaluate_functional_correctness\n","    completion = sample[\"completion\"]\n","KeyError: 'completion'\n"]}]}]}